// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecentArticle
    article={
        Object {
            "authorEmail": "foo",
            "authorName": "foo",
            "content": "foo",
            "contentHtml": "foo",
            "cursor": "foo",
            "handle": "foo",
            "id": "foo",
            "image": "foo",
            "publishedAt": "foo",
            "tags": Array [
              "foo",
            ],
            "title": "foo",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          className="text-decoration-none"
          replace={false}
          to="/news/foo"
>
          <p
                    className="avenir bold"
          >
                    foo
          </p>
</Link>,
        <p
          className="text-peach detail"
>
          foo
</p>,
      ],
      "className": "my1",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p
            className="avenir bold"
>
            foo
</p>,
          "className": "text-decoration-none",
          "replace": false,
          "to": "/news/foo",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "avenir bold",
          },
          "ref": null,
          "rendered": "foo",
          "type": "p",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "foo",
          "className": "text-peach detail",
        },
        "ref": null,
        "rendered": "foo",
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            className="text-decoration-none"
            replace={false}
            to="/news/foo"
>
            <p
                        className="avenir bold"
            >
                        foo
            </p>
</Link>,
          <p
            className="text-peach detail"
>
            foo
</p>,
        ],
        "className": "my1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <p
              className="avenir bold"
>
              foo
</p>,
            "className": "text-decoration-none",
            "replace": false,
            "to": "/news/foo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "foo",
              "className": "avenir bold",
            },
            "ref": null,
            "rendered": "foo",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "text-peach detail",
          },
          "ref": null,
          "rendered": "foo",
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecentArticle
    article={
        Object {
            "authorEmail": "",
            "authorName": "",
            "content": "",
            "contentHtml": "",
            "cursor": "",
            "handle": "",
            "id": "",
            "image": "",
            "publishedAt": "",
            "tags": Object {},
            "title": "",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          className="text-decoration-none"
          replace={false}
          to="/news/"
>
          <p
                    className="avenir bold"
          />
</Link>,
        <p
          className="text-peach detail"
/>,
      ],
      "className": "my1",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <p
            className="avenir bold"
/>,
          "className": "text-decoration-none",
          "replace": false,
          "to": "/news/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "avenir bold",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "text-peach detail",
        },
        "ref": null,
        "rendered": "",
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            className="text-decoration-none"
            replace={false}
            to="/news/"
>
            <p
                        className="avenir bold"
            />
</Link>,
          <p
            className="text-peach detail"
/>,
        ],
        "className": "my1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <p
              className="avenir bold"
/>,
            "className": "text-decoration-none",
            "replace": false,
            "to": "/news/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "avenir bold",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "text-peach detail",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
