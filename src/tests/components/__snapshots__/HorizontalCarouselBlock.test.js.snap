// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HorizontalCarouselBlock
    block={
        Object {
            "fields": Object {
              "buttonLabel": "foo",
              "buttonLink": "foo",
              "drip": false,
              "flavorItems": Array [],
              "title": "foo",
            },
            "sys": Object {
              "id": "foo",
            },
          }
    }
    setRef={[Function]}
    z={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HorizontalCarousel
        block={
                Object {
                        "fields": Object {
                          "buttonLabel": "",
                          "buttonLink": "",
                          "drip": false,
                          "flavorItems": Array [],
                          "title": "",
                        },
                        "sys": Object {
                          "id": "",
                        },
                      }
        }
        buttonLabel="foo"
        buttonLink="foo"
        isReverseOrder={false}
        setRef={[Function]}
        title="foo"
        z={0}
>
        <PressCarouselCards
                numberOfCardToRender={null}
                pressItems={
                        Object {
                                "fragments": Array [],
                                "simpleFragments": Object {},
                              }
                }
                pressItemsInBlock={Object {}}
        />
</HorizontalCarousel>,
      "className": "",
      "style": Object {
        "zIndex": 0,
      },
    },
    "ref": [Function],
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": Object {
          "fields": Object {
            "buttonLabel": "",
            "buttonLink": "",
            "drip": false,
            "flavorItems": Array [],
            "title": "",
          },
          "sys": Object {
            "id": "",
          },
        },
        "buttonLabel": "foo",
        "buttonLink": "foo",
        "children": <PressCarouselCards
          numberOfCardToRender={null}
          pressItems={
                    Object {
                              "fragments": Array [],
                              "simpleFragments": Object {},
                            }
          }
          pressItemsInBlock={Object {}}
/>,
        "isReverseOrder": false,
        "setRef": [Function],
        "title": "foo",
        "z": 0,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "numberOfCardToRender": null,
          "pressItems": Object {
            "fragments": Array [],
            "simpleFragments": Object {},
          },
          "pressItemsInBlock": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HorizontalCarousel
          block={
                    Object {
                              "fields": Object {
                                "buttonLabel": "",
                                "buttonLink": "",
                                "drip": false,
                                "flavorItems": Array [],
                                "title": "",
                              },
                              "sys": Object {
                                "id": "",
                              },
                            }
          }
          buttonLabel="foo"
          buttonLink="foo"
          isReverseOrder={false}
          setRef={[Function]}
          title="foo"
          z={0}
>
          <PressCarouselCards
                    numberOfCardToRender={null}
                    pressItems={
                              Object {
                                        "fragments": Array [],
                                        "simpleFragments": Object {},
                                      }
                    }
                    pressItemsInBlock={Object {}}
          />
</HorizontalCarousel>,
        "className": "",
        "style": Object {
          "zIndex": 0,
        },
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "block": Object {
            "fields": Object {
              "buttonLabel": "",
              "buttonLink": "",
              "drip": false,
              "flavorItems": Array [],
              "title": "",
            },
            "sys": Object {
              "id": "",
            },
          },
          "buttonLabel": "foo",
          "buttonLink": "foo",
          "children": <PressCarouselCards
            numberOfCardToRender={null}
            pressItems={
                        Object {
                                    "fragments": Array [],
                                    "simpleFragments": Object {},
                                  }
            }
            pressItemsInBlock={Object {}}
/>,
          "isReverseOrder": false,
          "setRef": [Function],
          "title": "foo",
          "z": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "numberOfCardToRender": null,
            "pressItems": Object {
              "fragments": Array [],
              "simpleFragments": Object {},
            },
            "pressItemsInBlock": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HorizontalCarouselBlock />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HorizontalCarousel
        block={
                Object {
                        "fields": Object {
                          "buttonLabel": "",
                          "buttonLink": "",
                          "drip": false,
                          "flavorItems": Array [],
                          "title": "",
                        },
                        "sys": Object {
                          "id": "",
                        },
                      }
        }
        buttonLabel=""
        buttonLink=""
        isReverseOrder={false}
        setRef={[Function]}
        title=""
        z={0}
>
        <PressCarouselCards
                numberOfCardToRender={null}
                pressItems={
                        Object {
                                "fragments": Array [],
                                "simpleFragments": Object {},
                              }
                }
                pressItemsInBlock={Object {}}
        />
</HorizontalCarousel>,
      "className": "",
      "style": Object {
        "zIndex": undefined,
      },
    },
    "ref": [Function],
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": Object {
          "fields": Object {
            "buttonLabel": "",
            "buttonLink": "",
            "drip": false,
            "flavorItems": Array [],
            "title": "",
          },
          "sys": Object {
            "id": "",
          },
        },
        "buttonLabel": "",
        "buttonLink": "",
        "children": <PressCarouselCards
          numberOfCardToRender={null}
          pressItems={
                    Object {
                              "fragments": Array [],
                              "simpleFragments": Object {},
                            }
          }
          pressItemsInBlock={Object {}}
/>,
        "isReverseOrder": false,
        "setRef": [Function],
        "title": "",
        "z": 0,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "numberOfCardToRender": null,
          "pressItems": Object {
            "fragments": Array [],
            "simpleFragments": Object {},
          },
          "pressItemsInBlock": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HorizontalCarousel
          block={
                    Object {
                              "fields": Object {
                                "buttonLabel": "",
                                "buttonLink": "",
                                "drip": false,
                                "flavorItems": Array [],
                                "title": "",
                              },
                              "sys": Object {
                                "id": "",
                              },
                            }
          }
          buttonLabel=""
          buttonLink=""
          isReverseOrder={false}
          setRef={[Function]}
          title=""
          z={0}
>
          <PressCarouselCards
                    numberOfCardToRender={null}
                    pressItems={
                              Object {
                                        "fragments": Array [],
                                        "simpleFragments": Object {},
                                      }
                    }
                    pressItemsInBlock={Object {}}
          />
</HorizontalCarousel>,
        "className": "",
        "style": Object {
          "zIndex": undefined,
        },
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "block": Object {
            "fields": Object {
              "buttonLabel": "",
              "buttonLink": "",
              "drip": false,
              "flavorItems": Array [],
              "title": "",
            },
            "sys": Object {
              "id": "",
            },
          },
          "buttonLabel": "",
          "buttonLink": "",
          "children": <PressCarouselCards
            numberOfCardToRender={null}
            pressItems={
                        Object {
                                    "fragments": Array [],
                                    "simpleFragments": Object {},
                                  }
            }
            pressItemsInBlock={Object {}}
/>,
          "isReverseOrder": false,
          "setRef": [Function],
          "title": "",
          "z": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "numberOfCardToRender": null,
            "pressItems": Object {
              "fragments": Array [],
              "simpleFragments": Object {},
            },
            "pressItemsInBlock": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
