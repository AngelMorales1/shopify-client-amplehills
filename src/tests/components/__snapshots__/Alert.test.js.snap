// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alert
    alert={
        Object {
            "alertCopy": "foo",
            "linkCopy": "foo",
            "linkUrl": "foo",
            "title": "foo",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="text-white"
>
          foo
</span>,
        <a
          className="text-peach"
          href="foo"
          rel="noopener"
>
          foo
</a>,
      ],
      "className": "z-overlay w100 fixed l0 t0 px1 bg-madison-blue bold flex flex-row justify-center items-center flex-wrap transition-fade-in center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "foo",
          "className": "text-white",
        },
        "ref": null,
        "rendered": "foo",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "foo",
          "className": "text-peach",
          "href": "foo",
          "rel": "noopener",
        },
        "ref": null,
        "rendered": "foo",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="text-white"
>
            foo
</span>,
          <a
            className="text-peach"
            href="foo"
            rel="noopener"
>
            foo
</a>,
        ],
        "className": "z-overlay w100 fixed l0 t0 px1 bg-madison-blue bold flex flex-row justify-center items-center flex-wrap transition-fade-in center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "text-white",
          },
          "ref": null,
          "rendered": "foo",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "text-peach",
            "href": "foo",
            "rel": "noopener",
          },
          "ref": null,
          "rendered": "foo",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alert
    alert={
        Object {
            "alertCopy": "",
            "linkCopy": "",
            "linkUrl": "",
            "title": "",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="text-white"
/>,
        <a
          className="text-peach"
          href=""
          rel="noopener"
/>,
      ],
      "className": "z-overlay w100 fixed l0 t0 px1 bg-madison-blue bold flex flex-row justify-center items-center flex-wrap transition-fade-in center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "text-white",
        },
        "ref": null,
        "rendered": "",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "text-peach",
          "href": "",
          "rel": "noopener",
        },
        "ref": null,
        "rendered": "",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="text-white"
/>,
          <a
            className="text-peach"
            href=""
            rel="noopener"
/>,
        ],
        "className": "z-overlay w100 fixed l0 t0 px1 bg-madison-blue bold flex flex-row justify-center items-center flex-wrap transition-fade-in center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "text-white",
          },
          "ref": null,
          "rendered": "",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "text-peach",
            "href": "",
            "rel": "noopener",
          },
          "ref": null,
          "rendered": "",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
