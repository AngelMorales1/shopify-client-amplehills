// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PressCarousel
    block={
        Object {
            "fields": Object {
              "buttonLabel": "foo",
              "buttonLink": "foo",
              "customOrder": false,
              "drip": false,
              "pressItems": Object {
                "fragments": Array [
                  Array [
                    Object {
                      "key": "foo",
                      "value": "foo",
                    },
                    Object {
                      "key": "foo",
                      "value": "foo",
                    },
                    Object {
                      "key": "foo",
                      "value": "foo",
                    },
                    Object {
                      "key": "foo",
                      "value": "foo",
                    },
                    Object {
                      "key": "foo",
                      "value": "foo",
                    },
                  ],
                ],
                "simpleFragments": Object {
                  "foo": Object {},
                },
              },
              "sortByLatest": true,
              "title": "foo",
            },
            "sys": Object {
              "id": "foo",
            },
          }
    }
    pressItems={
        Object {
            "fragments": Array [
              Array [
                Object {
                  "key": "foo",
                  "value": "foo",
                },
                Object {
                  "key": "foo",
                  "value": "foo",
                },
                Object {
                  "key": "foo",
                  "value": "foo",
                },
                Object {
                  "key": "foo",
                  "value": "foo",
                },
                Object {
                  "key": "foo",
                  "value": "foo",
                },
              ],
            ],
            "simpleFragments": Object {
              "foo": Object {},
            },
          }
    }
    z={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HorizontalCarousel
        block={
                Object {
                        "fields": Object {
                          "buttonLabel": "",
                          "buttonLink": "",
                          "customOrder": false,
                          "drip": false,
                          "pressItems": Object {
                            "fragments": Array [],
                            "simpleFragments": Object {},
                          },
                          "sortByLatest": true,
                          "title": "",
                        },
                        "sys": Object {
                          "id": "",
                        },
                      }
        }
        buttonLabel="foo"
        buttonLink="foo"
        isReverseOrder={false}
        pressItems={
                Object {
                        "fragments": Array [],
                        "simpleFragments": Object {},
                      }
        }
        title="foo"
        z={0}
>
        <div
                className="bg-white p3 flex flex-column justify-center items-center"
        >
                <Image
                        alt=" logo"
                        bg={false}
                        className=""
                        onImgLoad={[Function]}
                        src=""
                        style={Object {}}
                />
                <span
                        className="carter text-peach center py3"
                >
                        ""
                </span>
                <Button
                        className="uppercase detail"
                        color="peach"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="Read about it"
                        onClick={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="primary-small"
                />
        </div>
</HorizontalCarousel>,
      "className": "bg-bees-wax",
      "style": Object {
        "zIndex": 0,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": Object {
          "fields": Object {
            "buttonLabel": "",
            "buttonLink": "",
            "customOrder": false,
            "drip": false,
            "pressItems": Object {
              "fragments": Array [],
              "simpleFragments": Object {},
            },
            "sortByLatest": true,
            "title": "",
          },
          "sys": Object {
            "id": "",
          },
        },
        "buttonLabel": "foo",
        "buttonLink": "foo",
        "children": Array [
          <div
            className="bg-white p3 flex flex-column justify-center items-center"
>
            <Image
                        alt=" logo"
                        bg={false}
                        className=""
                        onImgLoad={[Function]}
                        src=""
                        style={Object {}}
            />
            <span
                        className="carter text-peach center py3"
            >
                        ""
            </span>
            <Button
                        className="uppercase detail"
                        color="peach"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="Read about it"
                        onClick={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="primary-small"
            />
</div>,
        ],
        "isReverseOrder": false,
        "pressItems": Object {
          "fragments": Array [],
          "simpleFragments": Object {},
        },
        "title": "foo",
        "z": 0,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "foo",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Image
                alt=" logo"
                bg={false}
                className=""
                onImgLoad={[Function]}
                src=""
                style={Object {}}
/>,
              <span
                className="carter text-peach center py3"
>
                ""
</span>,
              <Button
                className="uppercase detail"
                color="peach"
                disabled={false}
                fullWidth={false}
                hover="shadow"
                label="Read about it"
                onClick={[Function]}
                shadow={false}
                to=""
                type="button"
                variant="primary-small"
/>,
            ],
            "className": "bg-white p3 flex flex-column justify-center items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alt": " logo",
                "bg": false,
                "children": null,
                "className": "",
                "onImgLoad": [Function],
                "src": "",
                "style": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "\\"\\"",
                "className": "carter text-peach center py3",
              },
              "ref": null,
              "rendered": "\\"\\"",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": null,
                "className": "uppercase detail",
                "color": "peach",
                "disabled": false,
                "fullWidth": false,
                "hover": "shadow",
                "label": "Read about it",
                "onClick": [Function],
                "shadow": false,
                "to": "",
                "type": "button",
                "variant": "primary-small",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HorizontalCarousel
          block={
                    Object {
                              "fields": Object {
                                "buttonLabel": "",
                                "buttonLink": "",
                                "customOrder": false,
                                "drip": false,
                                "pressItems": Object {
                                  "fragments": Array [],
                                  "simpleFragments": Object {},
                                },
                                "sortByLatest": true,
                                "title": "",
                              },
                              "sys": Object {
                                "id": "",
                              },
                            }
          }
          buttonLabel="foo"
          buttonLink="foo"
          isReverseOrder={false}
          pressItems={
                    Object {
                              "fragments": Array [],
                              "simpleFragments": Object {},
                            }
          }
          title="foo"
          z={0}
>
          <div
                    className="bg-white p3 flex flex-column justify-center items-center"
          >
                    <Image
                              alt=" logo"
                              bg={false}
                              className=""
                              onImgLoad={[Function]}
                              src=""
                              style={Object {}}
                    />
                    <span
                              className="carter text-peach center py3"
                    >
                              ""
                    </span>
                    <Button
                              className="uppercase detail"
                              color="peach"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label="Read about it"
                              onClick={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="primary-small"
                    />
          </div>
</HorizontalCarousel>,
        "className": "bg-bees-wax",
        "style": Object {
          "zIndex": 0,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "block": Object {
            "fields": Object {
              "buttonLabel": "",
              "buttonLink": "",
              "customOrder": false,
              "drip": false,
              "pressItems": Object {
                "fragments": Array [],
                "simpleFragments": Object {},
              },
              "sortByLatest": true,
              "title": "",
            },
            "sys": Object {
              "id": "",
            },
          },
          "buttonLabel": "foo",
          "buttonLink": "foo",
          "children": Array [
            <div
              className="bg-white p3 flex flex-column justify-center items-center"
>
              <Image
                            alt=" logo"
                            bg={false}
                            className=""
                            onImgLoad={[Function]}
                            src=""
                            style={Object {}}
              />
              <span
                            className="carter text-peach center py3"
              >
                            ""
              </span>
              <Button
                            className="uppercase detail"
                            color="peach"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label="Read about it"
                            onClick={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="primary-small"
              />
</div>,
          ],
          "isReverseOrder": false,
          "pressItems": Object {
            "fragments": Array [],
            "simpleFragments": Object {},
          },
          "title": "foo",
          "z": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "foo",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Image
                  alt=" logo"
                  bg={false}
                  className=""
                  onImgLoad={[Function]}
                  src=""
                  style={Object {}}
/>,
                <span
                  className="carter text-peach center py3"
>
                  ""
</span>,
                <Button
                  className="uppercase detail"
                  color="peach"
                  disabled={false}
                  fullWidth={false}
                  hover="shadow"
                  label="Read about it"
                  onClick={[Function]}
                  shadow={false}
                  to=""
                  type="button"
                  variant="primary-small"
/>,
              ],
              "className": "bg-white p3 flex flex-column justify-center items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "alt": " logo",
                  "bg": false,
                  "children": null,
                  "className": "",
                  "onImgLoad": [Function],
                  "src": "",
                  "style": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "\\"\\"",
                  "className": "carter text-peach center py3",
                },
                "ref": null,
                "rendered": "\\"\\"",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": null,
                  "className": "uppercase detail",
                  "color": "peach",
                  "disabled": false,
                  "fullWidth": false,
                  "hover": "shadow",
                  "label": "Read about it",
                  "onClick": [Function],
                  "shadow": false,
                  "to": "",
                  "type": "button",
                  "variant": "primary-small",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PressCarousel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <HorizontalCarousel
        block={
                Object {
                        "fields": Object {
                          "buttonLabel": "",
                          "buttonLink": "",
                          "customOrder": false,
                          "drip": false,
                          "pressItems": Object {
                            "fragments": Array [],
                            "simpleFragments": Object {},
                          },
                          "sortByLatest": true,
                          "title": "",
                        },
                        "sys": Object {
                          "id": "",
                        },
                      }
        }
        buttonLabel=""
        buttonLink=""
        isReverseOrder={false}
        pressItems={
                Object {
                        "fragments": Array [],
                        "simpleFragments": Object {},
                      }
        }
        title=""
        z={0}
>
        
</HorizontalCarousel>,
      "className": "bg-bees-wax",
      "style": Object {
        "zIndex": undefined,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": Object {
          "fields": Object {
            "buttonLabel": "",
            "buttonLink": "",
            "customOrder": false,
            "drip": false,
            "pressItems": Object {
              "fragments": Array [],
              "simpleFragments": Object {},
            },
            "sortByLatest": true,
            "title": "",
          },
          "sys": Object {
            "id": "",
          },
        },
        "buttonLabel": "",
        "buttonLink": "",
        "children": Array [],
        "isReverseOrder": false,
        "pressItems": Object {
          "fragments": Array [],
          "simpleFragments": Object {},
        },
        "title": "",
        "z": 0,
      },
      "ref": null,
      "rendered": Array [],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <HorizontalCarousel
          block={
                    Object {
                              "fields": Object {
                                "buttonLabel": "",
                                "buttonLink": "",
                                "customOrder": false,
                                "drip": false,
                                "pressItems": Object {
                                  "fragments": Array [],
                                  "simpleFragments": Object {},
                                },
                                "sortByLatest": true,
                                "title": "",
                              },
                              "sys": Object {
                                "id": "",
                              },
                            }
          }
          buttonLabel=""
          buttonLink=""
          isReverseOrder={false}
          pressItems={
                    Object {
                              "fragments": Array [],
                              "simpleFragments": Object {},
                            }
          }
          title=""
          z={0}
>
          
</HorizontalCarousel>,
        "className": "bg-bees-wax",
        "style": Object {
          "zIndex": undefined,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "block": Object {
            "fields": Object {
              "buttonLabel": "",
              "buttonLink": "",
              "customOrder": false,
              "drip": false,
              "pressItems": Object {
                "fragments": Array [],
                "simpleFragments": Object {},
              },
              "sortByLatest": true,
              "title": "",
            },
            "sys": Object {
              "id": "",
            },
          },
          "buttonLabel": "",
          "buttonLink": "",
          "children": Array [],
          "isReverseOrder": false,
          "pressItems": Object {
            "fragments": Array [],
            "simpleFragments": Object {},
          },
          "title": "",
          "z": 0,
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
