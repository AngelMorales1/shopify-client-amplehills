// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CakeRequestForm
    actions={
        Object {
            "addLineItems": [Function],
          }
    }
    cakeDeposit={
        Object {
            "variants": Array [
              Object {
                "id": "0001",
                "price": "49.99",
                "title": "4\\" Cake",
              },
              Object {
                "id": "0002",
                "price": "69.99",
                "title": "6\\" Cake",
              },
            ],
          }
    }
    cakeFillings={
        Array [
            Object {
              "title": "Fudge",
            },
            Object {
              "title": "Salted Caramel",
            },
          ]
    }
    cakeFlavors={
        Array [
            Object {
              "description": "Cake Flavor 1 description",
              "title": "Cake Flavor 1",
            },
          ]
    }
    cakeLocations={
        Object {
            "000a": Object {
              "availableFlavors": Array [
                Object {
                  "title": "Flavor 1",
                },
              ],
              "id": "000a",
              "title": "Gowanus",
            },
          }
    }
    cakeToppings={
        Array [
            Object {
              "price": "$1.00",
              "title": "M&M's",
            },
            Object {
              "price": "$1.00",
              "title": "Rainbow sprinkles",
            },
          ]
    }
    checkout={
        Object {
            "id": "12345abcd",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex flex-wrap max-width-4 mx-auto my4 px2"
>
          <div
                    className="w100 mb4"
          >
                    <h1
                              className="w100 block-headline center mb3"
                    >
                              Order Your Custom Ice Cream Cake
                    </h1>
                    <h2
                              className="w100 big bold center text-peach mb3"
                    >
                              First, let's work out the details
                    </h2>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Where would you like to pick up your ice cream cake?
                    </p>
                    <Dropdown
                              bgColor=""
                              className="w100 text-container-width z-sub-nav"
                              color="peach"
                              fixedWidth={false}
                              label=""
                              name=""
                              onChange={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Gowanus",
                                                    "value": "000a",
                                                  },
                                                ]
                              }
                              placeholder="Choose a Location"
                              selectClassName=""
                              shadow={false}
                              textAlignCenter={false}
                              textColor=""
                              value={null}
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              When would you like to pick up your ice cream cake?
                    </p>
                    <p
                              className="center mb3 help-text-container-width"
                    >
                              Please note, we need 48 hours minimum to create your custom ice cream cake.
                    </p>
                    <Button
                              childrenWrapperClassName="w100 justify-between"
                              className="w100 text-container-width relative z-1"
                              color="white-denim"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label=""
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="style-none"
                    >
                              <p
                                        className="bold text-dusty-gray"
                              >
                                        Choose a day
                              </p>
                              <Image
                                        alt=""
                                        bg={false}
                                        className="right"
                                        onImgLoad={[Function]}
                                        src="/assets/images/arrow-dropdown-active.svg"
                                        style={Object {}}
                              />
                              <DayPicker
                                        canChangeMonth={true}
                                        captionElement={
                                                  <Caption
                                                            classNames={
                                                                      Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                            }
                                                            localeUtils={
                                                                      Object {
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                                            }
                                                  />
                                        }
                                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                        classNames={
                                                  Object {
                                                            "body": "DayPicker-Body",
                                                            "caption": "DayPicker-Caption",
                                                            "container": "DayPicker",
                                                            "day": "DayPicker-Day",
                                                            "disabled": "disabled",
                                                            "footer": "DayPicker-Footer",
                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                            "month": "DayPicker-Month",
                                                            "months": "DayPicker-Months",
                                                            "navBar": "DayPicker-NavBar",
                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                            "outside": "outside",
                                                            "selected": "selected",
                                                            "today": "today",
                                                            "todayButton": "DayPicker-TodayButton",
                                                            "week": "DayPicker-Week",
                                                            "weekNumber": "DayPicker-WeekNumber",
                                                            "weekday": "DayPicker-Weekday",
                                                            "weekdays": "DayPicker-Weekdays",
                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                            "wrapper": "DayPicker-wrapper",
                                                          }
                                        }
                                        disabledDays={
                                                  Array [
                                                            undefined,
                                                            Object {
                                                              "before": 2018-12-07T22:03:12.849Z,
                                                            },
                                                          ]
                                        }
                                        enableOutsideDaysClick={true}
                                        fixedWeeks={false}
                                        initialMonth={2018-12-04T22:03:12.745Z}
                                        labels={
                                                  Object {
                                                            "nextMonth": "Next Month",
                                                            "previousMonth": "Previous Month",
                                                          }
                                        }
                                        locale="en"
                                        localeUtils={
                                                  Object {
                                                            "default": Object {
                                                              "formatDay": [Function],
                                                              "formatMonthTitle": [Function],
                                                              "formatWeekdayLong": [Function],
                                                              "formatWeekdayShort": [Function],
                                                              "getFirstDayOfWeek": [Function],
                                                              "getMonths": [Function],
                                                            },
                                                            "formatDay": [Function],
                                                            "formatMonthTitle": [Function],
                                                            "formatWeekdayLong": [Function],
                                                            "formatWeekdayShort": [Function],
                                                            "getFirstDayOfWeek": [Function],
                                                            "getMonths": [Function],
                                                          }
                                        }
                                        navbarElement={
                                                  <Navbar
                                                            classNames={
                                                                      Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                            }
                                                            dir="ltr"
                                                            labels={
                                                                      Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                                            }
                                                            showNextButton={true}
                                                            showPreviousButton={true}
                                                  />
                                        }
                                        numberOfMonths={1}
                                        onDayClick={[Function]}
                                        onMonthChange={[Function]}
                                        pagedNavigation={false}
                                        renderDay={[Function]}
                                        renderWeek={[Function]}
                                        reverseMonths={false}
                                        showOutsideDays={false}
                                        showWeekDays={true}
                                        showWeekNumbers={false}
                                        tabIndex={0}
                                        weekdayElement={<Weekday />}
                              />
                    </Button>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What time of day will you be picking up your ice cream cake?
                    </p>
                    <div
                              className="form-container-width w100 flex flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 md-col-3 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100 white-space-normal px2"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label="12pm to 5pm"
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        />
                              </div>
                              <div
                                        className="col-6 md-col-3 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100 white-space-normal px2"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label="5pm to closing"
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        />
                              </div>
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Who will be picking up your ice cream cake?
                    </p>
                    <TextField
                              address=""
                              className="w100 text-container-width"
                              max={null}
                              min={null}
                              name=""
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Name"
                              required={false}
                              type="text"
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What’s the best phone number to reach you?
                    </p>
                    <TextField
                              address=""
                              className="w100 text-container-width"
                              max={null}
                              min={null}
                              name=""
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Phone number"
                              required={false}
                              type="text"
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mt2 mb4"
          >
                    <h2
                              className="w100 big bold center text-peach mb3"
                    >
                              Now, the fun stuff!
                    </h2>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Pick a size
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb1 white-space-normal center"
                                                            >
                                                                      4" Cake
                                                            </p>
                                                            <p
                                                                      className="mb1 white-space-normal light"
                                                            />
                                                            <p
                                                                      className="white-space-normal light"
                                                            >
                                                                      $
                                                                      49.99
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb1 white-space-normal center"
                                                            >
                                                                      6" Cake
                                                            </p>
                                                            <p
                                                                      className="mb1 white-space-normal light"
                                                            />
                                                            <p
                                                                      className="white-space-normal light"
                                                            >
                                                                      $
                                                                      69.99
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Pick your ice cream cake flavor combination!
                    </p>
                    <Button
                              childrenWrapperClassName=""
                              className="uppercase mb3 tout"
                              color="peach"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label="Need Help?"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="primary-small"
                    />
                    <p
                              className="bold big center mb2"
                    >
                              We recommend these
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb2 white-space-normal center"
                                                            >
                                                                      Build your own with your choice of flavors!
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                    </div>
          </div>
          <div
                    className="w100 flex flex-column items-center undefined"
          >
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Choose your first flavor
                              </p>
                              <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width z-sub-nav"
                                        color="peach"
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                              />
                              <span
                                        className="mt2 text-peach"
                              >
                                        You must first select a location
                              </span>
                    </div>
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Choose your second flavor
                              </p>
                              <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width"
                                        color="peach"
                                        disabled={true}
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                              />
                              <span
                                        className="mt2 text-peach"
                              >
                                        You must first select a location
                              </span>
                    </div>
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Pick a base
                              </p>
                              <p
                                        className="center mb3 help-text-container-width"
                              >
                                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                              </p>
                              <div
                                        className="form-container-width w100 flex flex-wrap justify-center"
                              >
                                        <div
                                                  className="col-6 md-col-3 p1"
                                        >
                                                  <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px3"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="Fudge"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                  />
                                        </div>
                                        <div
                                                  className="col-6 md-col-3 p1"
                                        >
                                                  <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px3"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="Salted Caramel"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                  />
                                        </div>
                              </div>
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What kind of sprinkles would you like?
                               
                    </p>
                    <p
                              className="center mb3 help-text-container-width"
                    >
                              Each ice cream cake is made with a topping of whipped cream and sprinkles.
                    </p>
                    <div
                              className="form-container-width w100 flex flex-wrap justify-center"
                    >
                              
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Would you like any additional toppings?
                               
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb1 white-space-normal center"
                                                            >
                                                                      M&M's
                                                            </p>
                                                            <p
                                                                      className="white-space-normal light"
                                                            >
                                                                      $1.00
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb1 white-space-normal center"
                                                            >
                                                                      Rainbow sprinkles
                                                            </p>
                                                            <p
                                                                      className="white-space-normal light"
                                                            >
                                                                      $1.00
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                    </div>
          </div>
</div>,
        <div
          className="w100 bg-pastel-peach py4"
>
          <div
                    className="max-width-3 mx-auto flex flex-wrap px3"
          >
                    <div
                              className="col-12 md-col-7 flex flex-column mb4"
                    >
                              <span
                                        className="bold big mb3"
                              >
                                        Summary
                              </span>
                              <span
                                        className="line-height small"
                              >
                                        Please fill out all fields.
                              </span>
                    </div>
                    <div
                              className="col-12 md-col-5 flex flex-column items-start"
                    >
                              <span
                                        className="bold big mb3"
                              >
                                        Deposit total
                                        
                              </span>
                              <span
                                        className="line-height small"
                              >
                                        Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                              </span>
                              <Button
                                        childrenWrapperClassName=""
                                        className="mt3 inline-block w-auto"
                                        color="madison-blue"
                                        disabled={true}
                                        fullWidth={false}
                                        hover="shadow"
                                        label="Add to cart!"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        shadow={false}
                                        to=""
                                        type="button"
                                        variant="primary"
                              />
                    </div>
          </div>
</div>,
        null,
      ],
      "className": "flex flex-wrap my4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="w100 mb4"
>
              <h1
                            className="w100 block-headline center mb3"
              >
                            Order Your Custom Ice Cream Cake
              </h1>
              <h2
                            className="w100 big bold center text-peach mb3"
              >
                            First, let's work out the details
              </h2>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Where would you like to pick up your ice cream cake?
              </p>
              <Dropdown
                            bgColor=""
                            className="w100 text-container-width z-sub-nav"
                            color="peach"
                            fixedWidth={false}
                            label=""
                            name=""
                            onChange={[Function]}
                            options={
                                          Array [
                                                        Object {
                                                          "label": "Gowanus",
                                                          "value": "000a",
                                                        },
                                                      ]
                            }
                            placeholder="Choose a Location"
                            selectClassName=""
                            shadow={false}
                            textAlignCenter={false}
                            textColor=""
                            value={null}
                            variant="square"
              />
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            When would you like to pick up your ice cream cake?
              </p>
              <p
                            className="center mb3 help-text-container-width"
              >
                            Please note, we need 48 hours minimum to create your custom ice cream cake.
              </p>
              <Button
                            childrenWrapperClassName="w100 justify-between"
                            className="w100 text-container-width relative z-1"
                            color="white-denim"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label=""
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="style-none"
              >
                            <p
                                          className="bold text-dusty-gray"
                            >
                                          Choose a day
                            </p>
                            <Image
                                          alt=""
                                          bg={false}
                                          className="right"
                                          onImgLoad={[Function]}
                                          src="/assets/images/arrow-dropdown-active.svg"
                                          style={Object {}}
                            />
                            <DayPicker
                                          canChangeMonth={true}
                                          captionElement={
                                                        <Caption
                                                                      classNames={
                                                                                    Object {
                                                                                                  "body": "DayPicker-Body",
                                                                                                  "caption": "DayPicker-Caption",
                                                                                                  "container": "DayPicker",
                                                                                                  "day": "DayPicker-Day",
                                                                                                  "disabled": "disabled",
                                                                                                  "footer": "DayPicker-Footer",
                                                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                  "month": "DayPicker-Month",
                                                                                                  "months": "DayPicker-Months",
                                                                                                  "navBar": "DayPicker-NavBar",
                                                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                  "outside": "outside",
                                                                                                  "selected": "selected",
                                                                                                  "today": "today",
                                                                                                  "todayButton": "DayPicker-TodayButton",
                                                                                                  "week": "DayPicker-Week",
                                                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                                                  "weekday": "DayPicker-Weekday",
                                                                                                  "weekdays": "DayPicker-Weekdays",
                                                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                  "wrapper": "DayPicker-wrapper",
                                                                                                }
                                                                      }
                                                                      localeUtils={
                                                                                    Object {
                                                                                                  "formatDay": [Function],
                                                                                                  "formatMonthTitle": [Function],
                                                                                                  "formatWeekdayLong": [Function],
                                                                                                  "formatWeekdayShort": [Function],
                                                                                                  "getFirstDayOfWeek": [Function],
                                                                                                  "getMonths": [Function],
                                                                                                }
                                                                      }
                                                        />
                                          }
                                          className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                          classNames={
                                                        Object {
                                                                      "body": "DayPicker-Body",
                                                                      "caption": "DayPicker-Caption",
                                                                      "container": "DayPicker",
                                                                      "day": "DayPicker-Day",
                                                                      "disabled": "disabled",
                                                                      "footer": "DayPicker-Footer",
                                                                      "interactionDisabled": "DayPicker--interactionDisabled",
                                                                      "month": "DayPicker-Month",
                                                                      "months": "DayPicker-Months",
                                                                      "navBar": "DayPicker-NavBar",
                                                                      "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                      "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                      "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                      "outside": "outside",
                                                                      "selected": "selected",
                                                                      "today": "today",
                                                                      "todayButton": "DayPicker-TodayButton",
                                                                      "week": "DayPicker-Week",
                                                                      "weekNumber": "DayPicker-WeekNumber",
                                                                      "weekday": "DayPicker-Weekday",
                                                                      "weekdays": "DayPicker-Weekdays",
                                                                      "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                      "wrapper": "DayPicker-wrapper",
                                                                    }
                                          }
                                          disabledDays={
                                                        Array [
                                                                      undefined,
                                                                      Object {
                                                                        "before": 2018-12-07T22:03:12.849Z,
                                                                      },
                                                                    ]
                                          }
                                          enableOutsideDaysClick={true}
                                          fixedWeeks={false}
                                          initialMonth={2018-12-04T22:03:12.745Z}
                                          labels={
                                                        Object {
                                                                      "nextMonth": "Next Month",
                                                                      "previousMonth": "Previous Month",
                                                                    }
                                          }
                                          locale="en"
                                          localeUtils={
                                                        Object {
                                                                      "default": Object {
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      },
                                                                      "formatDay": [Function],
                                                                      "formatMonthTitle": [Function],
                                                                      "formatWeekdayLong": [Function],
                                                                      "formatWeekdayShort": [Function],
                                                                      "getFirstDayOfWeek": [Function],
                                                                      "getMonths": [Function],
                                                                    }
                                          }
                                          navbarElement={
                                                        <Navbar
                                                                      classNames={
                                                                                    Object {
                                                                                                  "body": "DayPicker-Body",
                                                                                                  "caption": "DayPicker-Caption",
                                                                                                  "container": "DayPicker",
                                                                                                  "day": "DayPicker-Day",
                                                                                                  "disabled": "disabled",
                                                                                                  "footer": "DayPicker-Footer",
                                                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                  "month": "DayPicker-Month",
                                                                                                  "months": "DayPicker-Months",
                                                                                                  "navBar": "DayPicker-NavBar",
                                                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                  "outside": "outside",
                                                                                                  "selected": "selected",
                                                                                                  "today": "today",
                                                                                                  "todayButton": "DayPicker-TodayButton",
                                                                                                  "week": "DayPicker-Week",
                                                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                                                  "weekday": "DayPicker-Weekday",
                                                                                                  "weekdays": "DayPicker-Weekdays",
                                                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                  "wrapper": "DayPicker-wrapper",
                                                                                                }
                                                                      }
                                                                      dir="ltr"
                                                                      labels={
                                                                                    Object {
                                                                                                  "nextMonth": "Next Month",
                                                                                                  "previousMonth": "Previous Month",
                                                                                                }
                                                                      }
                                                                      showNextButton={true}
                                                                      showPreviousButton={true}
                                                        />
                                          }
                                          numberOfMonths={1}
                                          onDayClick={[Function]}
                                          onMonthChange={[Function]}
                                          pagedNavigation={false}
                                          renderDay={[Function]}
                                          renderWeek={[Function]}
                                          reverseMonths={false}
                                          showOutsideDays={false}
                                          showWeekDays={true}
                                          showWeekNumbers={false}
                                          tabIndex={0}
                                          weekdayElement={<Weekday />}
                            />
              </Button>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What time of day will you be picking up your ice cream cake?
              </p>
              <div
                            className="form-container-width w100 flex flex-wrap justify-center"
              >
                            <div
                                          className="col-6 md-col-3 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px2"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="12pm to 5pm"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          />
                            </div>
                            <div
                                          className="col-6 md-col-3 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px2"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="5pm to closing"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          />
                            </div>
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Who will be picking up your ice cream cake?
              </p>
              <TextField
                            address=""
                            className="w100 text-container-width"
                            max={null}
                            min={null}
                            name=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Name"
                            required={false}
                            type="text"
                            variant="square"
              />
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What’s the best phone number to reach you?
              </p>
              <TextField
                            address=""
                            className="w100 text-container-width"
                            max={null}
                            min={null}
                            name=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Phone number"
                            required={false}
                            type="text"
                            variant="square"
              />
</div>,
            <div
              className="w100 mt2 mb4"
>
              <h2
                            className="w100 big bold center text-peach mb3"
              >
                            Now, the fun stuff!
              </h2>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Pick a size
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb1 white-space-normal center"
                                                                      >
                                                                                    4" Cake
                                                                      </p>
                                                                      <p
                                                                                    className="mb1 white-space-normal light"
                                                                      />
                                                                      <p
                                                                                    className="white-space-normal light"
                                                                      >
                                                                                    $
                                                                                    49.99
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb1 white-space-normal center"
                                                                      >
                                                                                    6" Cake
                                                                      </p>
                                                                      <p
                                                                                    className="mb1 white-space-normal light"
                                                                      />
                                                                      <p
                                                                                    className="white-space-normal light"
                                                                      >
                                                                                    $
                                                                                    69.99
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Pick your ice cream cake flavor combination!
              </p>
              <Button
                            childrenWrapperClassName=""
                            className="uppercase mb3 tout"
                            color="peach"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label="Need Help?"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="primary-small"
              />
              <p
                            className="bold big center mb2"
              >
                            We recommend these
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb2 white-space-normal center"
                                                                      >
                                                                                    Build your own with your choice of flavors!
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
              </div>
</div>,
            <div
              className="w100 flex flex-column items-center undefined"
>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Choose your first flavor
                            </p>
                            <Dropdown
                                          bgColor=""
                                          className="w100 text-container-width z-sub-nav"
                                          color="peach"
                                          fixedWidth={false}
                                          label=""
                                          name=""
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="Choose a Flavor"
                                          selectClassName=""
                                          shadow={false}
                                          textAlignCenter={false}
                                          textColor=""
                                          value={null}
                                          variant="square"
                            />
                            <span
                                          className="mt2 text-peach"
                            >
                                          You must first select a location
                            </span>
              </div>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Choose your second flavor
                            </p>
                            <Dropdown
                                          bgColor=""
                                          className="w100 text-container-width"
                                          color="peach"
                                          disabled={true}
                                          fixedWidth={false}
                                          label=""
                                          name=""
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="Choose a Flavor"
                                          selectClassName=""
                                          shadow={false}
                                          textAlignCenter={false}
                                          textColor=""
                                          value={null}
                                          variant="square"
                            />
                            <span
                                          className="mt2 text-peach"
                            >
                                          You must first select a location
                            </span>
              </div>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Pick a base
                            </p>
                            <p
                                          className="center mb3 help-text-container-width"
                            >
                                          All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                            </p>
                            <div
                                          className="form-container-width w100 flex flex-wrap justify-center"
                            >
                                          <div
                                                        className="col-6 md-col-3 p1"
                                          >
                                                        <Button
                                                                      childrenWrapperClassName=""
                                                                      className="center wh100 white-space-normal px3"
                                                                      color="white-denim"
                                                                      disabled={false}
                                                                      fullWidth={false}
                                                                      hover="shadow"
                                                                      label="Fudge"
                                                                      onClick={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      shadow={false}
                                                                      to=""
                                                                      type="button"
                                                                      variant="square"
                                                        />
                                          </div>
                                          <div
                                                        className="col-6 md-col-3 p1"
                                          >
                                                        <Button
                                                                      childrenWrapperClassName=""
                                                                      className="center wh100 white-space-normal px3"
                                                                      color="white-denim"
                                                                      disabled={false}
                                                                      fullWidth={false}
                                                                      hover="shadow"
                                                                      label="Salted Caramel"
                                                                      onClick={[Function]}
                                                                      onMouseEnter={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      shadow={false}
                                                                      to=""
                                                                      type="button"
                                                                      variant="square"
                                                        />
                                          </div>
                            </div>
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What kind of sprinkles would you like?
                             
              </p>
              <p
                            className="center mb3 help-text-container-width"
              >
                            Each ice cream cake is made with a topping of whipped cream and sprinkles.
              </p>
              <div
                            className="form-container-width w100 flex flex-wrap justify-center"
              >
                            
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Would you like any additional toppings?
                             
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb1 white-space-normal center"
                                                                      >
                                                                                    M&M's
                                                                      </p>
                                                                      <p
                                                                                    className="white-space-normal light"
                                                                      >
                                                                                    $1.00
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb1 white-space-normal center"
                                                                      >
                                                                                    Rainbow sprinkles
                                                                      </p>
                                                                      <p
                                                                                    className="white-space-normal light"
                                                                      >
                                                                                    $1.00
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
              </div>
</div>,
          ],
          "className": "flex flex-wrap max-width-4 mx-auto my4 px2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="w100 block-headline center mb3"
>
                  Order Your Custom Ice Cream Cake
</h1>,
                <h2
                  className="w100 big bold center text-peach mb3"
>
                  First, let's work out the details
</h2>,
              ],
              "className": "w100 mb4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Order Your Custom Ice Cream Cake",
                  "className": "w100 block-headline center mb3",
                },
                "ref": null,
                "rendered": "Order Your Custom Ice Cream Cake",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "First, let's work out the details",
                  "className": "w100 big bold center text-peach mb3",
                },
                "ref": null,
                "rendered": "First, let's work out the details",
                "type": "h2",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Where would you like to pick up your ice cream cake?
</p>,
                <Dropdown
                  bgColor=""
                  className="w100 text-container-width z-sub-nav"
                  color="peach"
                  fixedWidth={false}
                  label=""
                  name=""
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Gowanus",
                                                        "value": "000a",
                                                      },
                                                    ]
                  }
                  placeholder="Choose a Location"
                  selectClassName=""
                  shadow={false}
                  textAlignCenter={false}
                  textColor=""
                  value={null}
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Where would you like to pick up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Where would you like to pick up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bgColor": "",
                  "className": "w100 text-container-width z-sub-nav",
                  "color": "peach",
                  "fixedWidth": false,
                  "label": "",
                  "name": "",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Gowanus",
                      "value": "000a",
                    },
                  ],
                  "placeholder": "Choose a Location",
                  "selectClassName": "",
                  "shadow": false,
                  "textAlignCenter": false,
                  "textColor": "",
                  "value": null,
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  When would you like to pick up your ice cream cake?
</p>,
                <p
                  className="center mb3 help-text-container-width"
>
                  Please note, we need 48 hours minimum to create your custom ice cream cake.
</p>,
                <Button
                  childrenWrapperClassName="w100 justify-between"
                  className="w100 text-container-width relative z-1"
                  color="white-denim"
                  disabled={false}
                  fullWidth={false}
                  hover="shadow"
                  label=""
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  shadow={false}
                  to=""
                  type="button"
                  variant="style-none"
>
                  <p
                                    className="bold text-dusty-gray"
                  >
                                    Choose a day
                  </p>
                  <Image
                                    alt=""
                                    bg={false}
                                    className="right"
                                    onImgLoad={[Function]}
                                    src="/assets/images/arrow-dropdown-active.svg"
                                    style={Object {}}
                  />
                  <DayPicker
                                    canChangeMonth={true}
                                    captionElement={
                                                      <Caption
                                                                        classNames={
                                                                                          Object {
                                                                                                            "body": "DayPicker-Body",
                                                                                                            "caption": "DayPicker-Caption",
                                                                                                            "container": "DayPicker",
                                                                                                            "day": "DayPicker-Day",
                                                                                                            "disabled": "disabled",
                                                                                                            "footer": "DayPicker-Footer",
                                                                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                            "month": "DayPicker-Month",
                                                                                                            "months": "DayPicker-Months",
                                                                                                            "navBar": "DayPicker-NavBar",
                                                                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                            "outside": "outside",
                                                                                                            "selected": "selected",
                                                                                                            "today": "today",
                                                                                                            "todayButton": "DayPicker-TodayButton",
                                                                                                            "week": "DayPicker-Week",
                                                                                                            "weekNumber": "DayPicker-WeekNumber",
                                                                                                            "weekday": "DayPicker-Weekday",
                                                                                                            "weekdays": "DayPicker-Weekdays",
                                                                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                            "wrapper": "DayPicker-wrapper",
                                                                                                          }
                                                                        }
                                                                        localeUtils={
                                                                                          Object {
                                                                                                            "formatDay": [Function],
                                                                                                            "formatMonthTitle": [Function],
                                                                                                            "formatWeekdayLong": [Function],
                                                                                                            "formatWeekdayShort": [Function],
                                                                                                            "getFirstDayOfWeek": [Function],
                                                                                                            "getMonths": [Function],
                                                                                                          }
                                                                        }
                                                      />
                                    }
                                    className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                    classNames={
                                                      Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                                    }
                                    disabledDays={
                                                      Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.849Z,
                                                                        },
                                                                      ]
                                    }
                                    enableOutsideDaysClick={true}
                                    fixedWeeks={false}
                                    initialMonth={2018-12-04T22:03:12.745Z}
                                    labels={
                                                      Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                                    }
                                    locale="en"
                                    localeUtils={
                                                      Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                                    }
                                    navbarElement={
                                                      <Navbar
                                                                        classNames={
                                                                                          Object {
                                                                                                            "body": "DayPicker-Body",
                                                                                                            "caption": "DayPicker-Caption",
                                                                                                            "container": "DayPicker",
                                                                                                            "day": "DayPicker-Day",
                                                                                                            "disabled": "disabled",
                                                                                                            "footer": "DayPicker-Footer",
                                                                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                            "month": "DayPicker-Month",
                                                                                                            "months": "DayPicker-Months",
                                                                                                            "navBar": "DayPicker-NavBar",
                                                                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                            "outside": "outside",
                                                                                                            "selected": "selected",
                                                                                                            "today": "today",
                                                                                                            "todayButton": "DayPicker-TodayButton",
                                                                                                            "week": "DayPicker-Week",
                                                                                                            "weekNumber": "DayPicker-WeekNumber",
                                                                                                            "weekday": "DayPicker-Weekday",
                                                                                                            "weekdays": "DayPicker-Weekdays",
                                                                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                            "wrapper": "DayPicker-wrapper",
                                                                                                          }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                          Object {
                                                                                                            "nextMonth": "Next Month",
                                                                                                            "previousMonth": "Previous Month",
                                                                                                          }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                      />
                                    }
                                    numberOfMonths={1}
                                    onDayClick={[Function]}
                                    onMonthChange={[Function]}
                                    pagedNavigation={false}
                                    renderDay={[Function]}
                                    renderWeek={[Function]}
                                    reverseMonths={false}
                                    showOutsideDays={false}
                                    showWeekDays={true}
                                    showWeekNumbers={false}
                                    tabIndex={0}
                                    weekdayElement={<Weekday />}
                  />
</Button>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "When would you like to pick up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "When would you like to pick up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                  "className": "center mb3 help-text-container-width",
                },
                "ref": null,
                "rendered": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold text-dusty-gray"
>
                      Choose a day
</p>,
                    <Image
                      alt=""
                      bg={false}
                      className="right"
                      onImgLoad={[Function]}
                      src="/assets/images/arrow-dropdown-active.svg"
                      style={Object {}}
/>,
                    <DayPicker
                      canChangeMonth={true}
                      captionElement={
                                            <Caption
                                                                  classNames={
                                                                                        Object {
                                                                                                              "body": "DayPicker-Body",
                                                                                                              "caption": "DayPicker-Caption",
                                                                                                              "container": "DayPicker",
                                                                                                              "day": "DayPicker-Day",
                                                                                                              "disabled": "disabled",
                                                                                                              "footer": "DayPicker-Footer",
                                                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                              "month": "DayPicker-Month",
                                                                                                              "months": "DayPicker-Months",
                                                                                                              "navBar": "DayPicker-NavBar",
                                                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                              "outside": "outside",
                                                                                                              "selected": "selected",
                                                                                                              "today": "today",
                                                                                                              "todayButton": "DayPicker-TodayButton",
                                                                                                              "week": "DayPicker-Week",
                                                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                                                              "weekday": "DayPicker-Weekday",
                                                                                                              "weekdays": "DayPicker-Weekdays",
                                                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                              "wrapper": "DayPicker-wrapper",
                                                                                                            }
                                                                  }
                                                                  localeUtils={
                                                                                        Object {
                                                                                                              "formatDay": [Function],
                                                                                                              "formatMonthTitle": [Function],
                                                                                                              "formatWeekdayLong": [Function],
                                                                                                              "formatWeekdayShort": [Function],
                                                                                                              "getFirstDayOfWeek": [Function],
                                                                                                              "getMonths": [Function],
                                                                                                            }
                                                                  }
                                            />
                      }
                      className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                      classNames={
                                            Object {
                                                                  "body": "DayPicker-Body",
                                                                  "caption": "DayPicker-Caption",
                                                                  "container": "DayPicker",
                                                                  "day": "DayPicker-Day",
                                                                  "disabled": "disabled",
                                                                  "footer": "DayPicker-Footer",
                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                  "month": "DayPicker-Month",
                                                                  "months": "DayPicker-Months",
                                                                  "navBar": "DayPicker-NavBar",
                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                  "outside": "outside",
                                                                  "selected": "selected",
                                                                  "today": "today",
                                                                  "todayButton": "DayPicker-TodayButton",
                                                                  "week": "DayPicker-Week",
                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                  "weekday": "DayPicker-Weekday",
                                                                  "weekdays": "DayPicker-Weekdays",
                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                  "wrapper": "DayPicker-wrapper",
                                                                }
                      }
                      disabledDays={
                                            Array [
                                                                  undefined,
                                                                  Object {
                                                                    "before": 2018-12-07T22:03:12.849Z,
                                                                  },
                                                                ]
                      }
                      enableOutsideDaysClick={true}
                      fixedWeeks={false}
                      initialMonth={2018-12-04T22:03:12.745Z}
                      labels={
                                            Object {
                                                                  "nextMonth": "Next Month",
                                                                  "previousMonth": "Previous Month",
                                                                }
                      }
                      locale="en"
                      localeUtils={
                                            Object {
                                                                  "default": Object {
                                                                    "formatDay": [Function],
                                                                    "formatMonthTitle": [Function],
                                                                    "formatWeekdayLong": [Function],
                                                                    "formatWeekdayShort": [Function],
                                                                    "getFirstDayOfWeek": [Function],
                                                                    "getMonths": [Function],
                                                                  },
                                                                  "formatDay": [Function],
                                                                  "formatMonthTitle": [Function],
                                                                  "formatWeekdayLong": [Function],
                                                                  "formatWeekdayShort": [Function],
                                                                  "getFirstDayOfWeek": [Function],
                                                                  "getMonths": [Function],
                                                                }
                      }
                      navbarElement={
                                            <Navbar
                                                                  classNames={
                                                                                        Object {
                                                                                                              "body": "DayPicker-Body",
                                                                                                              "caption": "DayPicker-Caption",
                                                                                                              "container": "DayPicker",
                                                                                                              "day": "DayPicker-Day",
                                                                                                              "disabled": "disabled",
                                                                                                              "footer": "DayPicker-Footer",
                                                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                              "month": "DayPicker-Month",
                                                                                                              "months": "DayPicker-Months",
                                                                                                              "navBar": "DayPicker-NavBar",
                                                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                              "outside": "outside",
                                                                                                              "selected": "selected",
                                                                                                              "today": "today",
                                                                                                              "todayButton": "DayPicker-TodayButton",
                                                                                                              "week": "DayPicker-Week",
                                                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                                                              "weekday": "DayPicker-Weekday",
                                                                                                              "weekdays": "DayPicker-Weekdays",
                                                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                              "wrapper": "DayPicker-wrapper",
                                                                                                            }
                                                                  }
                                                                  dir="ltr"
                                                                  labels={
                                                                                        Object {
                                                                                                              "nextMonth": "Next Month",
                                                                                                              "previousMonth": "Previous Month",
                                                                                                            }
                                                                  }
                                                                  showNextButton={true}
                                                                  showPreviousButton={true}
                                            />
                      }
                      numberOfMonths={1}
                      onDayClick={[Function]}
                      onMonthChange={[Function]}
                      pagedNavigation={false}
                      renderDay={[Function]}
                      renderWeek={[Function]}
                      reverseMonths={false}
                      showOutsideDays={false}
                      showWeekDays={true}
                      showWeekNumbers={false}
                      tabIndex={0}
                      weekdayElement={<Weekday />}
/>,
                  ],
                  "childrenWrapperClassName": "w100 justify-between",
                  "className": "w100 text-container-width relative z-1",
                  "color": "white-denim",
                  "disabled": false,
                  "fullWidth": false,
                  "hover": "shadow",
                  "label": "",
                  "onClick": [Function],
                  "onMouseEnter": [Function],
                  "onMouseLeave": [Function],
                  "shadow": false,
                  "to": "",
                  "type": "button",
                  "variant": "style-none",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose a day",
                      "className": "bold text-dusty-gray",
                    },
                    "ref": null,
                    "rendered": "Choose a day",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "",
                      "bg": false,
                      "children": null,
                      "className": "right",
                      "onImgLoad": [Function],
                      "src": "/assets/images/arrow-dropdown-active.svg",
                      "style": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "canChangeMonth": true,
                      "captionElement": <Caption
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        localeUtils={
                                                Object {
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                        }
/>,
                      "className": "absolute t0 l0 mt4 bg-white text-madison-blue hide",
                      "classNames": Object {
                        "body": "DayPicker-Body",
                        "caption": "DayPicker-Caption",
                        "container": "DayPicker",
                        "day": "DayPicker-Day",
                        "disabled": "disabled",
                        "footer": "DayPicker-Footer",
                        "interactionDisabled": "DayPicker--interactionDisabled",
                        "month": "DayPicker-Month",
                        "months": "DayPicker-Months",
                        "navBar": "DayPicker-NavBar",
                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                        "outside": "outside",
                        "selected": "selected",
                        "today": "today",
                        "todayButton": "DayPicker-TodayButton",
                        "week": "DayPicker-Week",
                        "weekNumber": "DayPicker-WeekNumber",
                        "weekday": "DayPicker-Weekday",
                        "weekdays": "DayPicker-Weekdays",
                        "weekdaysRow": "DayPicker-WeekdaysRow",
                        "wrapper": "DayPicker-wrapper",
                      },
                      "disabledDays": Array [
                        undefined,
                        Object {
                          "before": 2018-12-07T22:03:12.849Z,
                        },
                      ],
                      "enableOutsideDaysClick": true,
                      "fixedWeeks": false,
                      "initialMonth": 2018-12-04T22:03:12.745Z,
                      "labels": Object {
                        "nextMonth": "Next Month",
                        "previousMonth": "Previous Month",
                      },
                      "locale": "en",
                      "localeUtils": Object {
                        "default": Object {
                          "formatDay": [Function],
                          "formatMonthTitle": [Function],
                          "formatWeekdayLong": [Function],
                          "formatWeekdayShort": [Function],
                          "getFirstDayOfWeek": [Function],
                          "getMonths": [Function],
                        },
                        "formatDay": [Function],
                        "formatMonthTitle": [Function],
                        "formatWeekdayLong": [Function],
                        "formatWeekdayShort": [Function],
                        "getFirstDayOfWeek": [Function],
                        "getMonths": [Function],
                      },
                      "navbarElement": <Navbar
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        dir="ltr"
                        labels={
                                                Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                        }
                        showNextButton={true}
                        showPreviousButton={true}
/>,
                      "numberOfMonths": 1,
                      "onDayClick": [Function],
                      "onMonthChange": [Function],
                      "pagedNavigation": false,
                      "renderDay": [Function],
                      "renderWeek": [Function],
                      "reverseMonths": false,
                      "showOutsideDays": false,
                      "showWeekDays": true,
                      "showWeekNumbers": false,
                      "tabIndex": 0,
                      "weekdayElement": <Weekday />,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What time of day will you be picking up your ice cream cake?
</p>,
                <div
                  className="form-container-width w100 flex flex-wrap justify-center"
>
                  <div
                                    className="col-6 md-col-3 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100 white-space-normal px2"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label="12pm to 5pm"
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    />
                  </div>
                  <div
                                    className="col-6 md-col-3 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100 white-space-normal px2"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label="5pm to closing"
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    />
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "What time of day will you be picking up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "What time of day will you be picking up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-6 md-col-3 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100 white-space-normal px2"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label="12pm to 5pm"
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      />
</div>,
                    <div
                      className="col-6 md-col-3 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100 white-space-normal px2"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label="5pm to closing"
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      />
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "defaultTimeSlot1",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100 white-space-normal px2"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="12pm to 5pm"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
/>,
                      "className": "col-6 md-col-3 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": null,
                        "childrenWrapperClassName": "",
                        "className": "center wh100 white-space-normal px2",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "12pm to 5pm",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "defaultTimeSlot2",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100 white-space-normal px2"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="5pm to closing"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
/>,
                      "className": "col-6 md-col-3 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": null,
                        "childrenWrapperClassName": "",
                        "className": "center wh100 white-space-normal px2",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "5pm to closing",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Who will be picking up your ice cream cake?
</p>,
                <TextField
                  address=""
                  className="w100 text-container-width"
                  max={null}
                  min={null}
                  name=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Name"
                  required={false}
                  type="text"
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Who will be picking up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Who will be picking up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "address": "",
                  "className": "w100 text-container-width",
                  "max": null,
                  "min": null,
                  "name": "",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "placeholder": "Name",
                  "required": false,
                  "type": "text",
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What’s the best phone number to reach you?
</p>,
                <TextField
                  address=""
                  className="w100 text-container-width"
                  max={null}
                  min={null}
                  name=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Phone number"
                  required={false}
                  type="text"
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "What’s the best phone number to reach you?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "What’s the best phone number to reach you?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "address": "",
                  "className": "w100 text-container-width",
                  "max": null,
                  "min": null,
                  "name": "",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "placeholder": "Phone number",
                  "required": false,
                  "type": "text",
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h2
                className="w100 big bold center text-peach mb3"
>
                Now, the fun stuff!
</h2>,
              "className": "w100 mt2 mb4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Now, the fun stuff!",
                "className": "w100 big bold center text-peach mb3",
              },
              "ref": null,
              "rendered": "Now, the fun stuff!",
              "type": "h2",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Pick a size
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb1 white-space-normal center"
                                                                        >
                                                                                          4" Cake
                                                                        </p>
                                                                        <p
                                                                                          className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                          className="white-space-normal light"
                                                                        >
                                                                                          $
                                                                                          49.99
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb1 white-space-normal center"
                                                                        >
                                                                                          6" Cake
                                                                        </p>
                                                                        <p
                                                                                          className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                          className="white-space-normal light"
                                                                        >
                                                                                          $
                                                                                          69.99
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pick a size",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Pick a size",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb1 white-space-normal center"
                                                                  >
                                                                                        4" Cake
                                                                  </p>
                                                                  <p
                                                                                        className="mb1 white-space-normal light"
                                                                  />
                                                                  <p
                                                                                        className="white-space-normal light"
                                                                  >
                                                                                        $
                                                                                        49.99
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb1 white-space-normal center"
                                                                  >
                                                                                        6" Cake
                                                                  </p>
                                                                  <p
                                                                                        className="mb1 white-space-normal light"
                                                                  />
                                                                  <p
                                                                                        className="white-space-normal light"
                                                                  >
                                                                                        $
                                                                                        69.99
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0001",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb1 white-space-normal center"
                                                >
                                                                        4" Cake
                                                </p>
                                                <p
                                                                        className="mb1 white-space-normal light"
                                                />
                                                <p
                                                                        className="white-space-normal light"
                                                >
                                                                        $
                                                                        49.99
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb1 white-space-normal center"
                          >
                                                    4" Cake
                          </p>
                          <p
                                                    className="mb1 white-space-normal light"
                          />
                          <p
                                                    className="white-space-normal light"
                          >
                                                    $
                                                    49.99
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <p
                              className="mb1 white-space-normal center"
>
                              4" Cake
</p>,
                            <p
                              className="mb1 white-space-normal light"
/>,
                            <p
                              className="white-space-normal light"
>
                              $
                              49.99
</p>,
                          ],
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "4\\" Cake",
                              "className": "mb1 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "4\\" Cake",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "",
                              "className": "mb1 white-space-normal light",
                            },
                            "ref": null,
                            "rendered": "",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "$",
                                "49.99",
                              ],
                              "className": "white-space-normal light",
                            },
                            "ref": null,
                            "rendered": Array [
                              "$",
                              "49.99",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "0002",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb1 white-space-normal center"
                                                >
                                                                        6" Cake
                                                </p>
                                                <p
                                                                        className="mb1 white-space-normal light"
                                                />
                                                <p
                                                                        className="white-space-normal light"
                                                >
                                                                        $
                                                                        69.99
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb1 white-space-normal center"
                          >
                                                    6" Cake
                          </p>
                          <p
                                                    className="mb1 white-space-normal light"
                          />
                          <p
                                                    className="white-space-normal light"
                          >
                                                    $
                                                    69.99
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <p
                              className="mb1 white-space-normal center"
>
                              6" Cake
</p>,
                            <p
                              className="mb1 white-space-normal light"
/>,
                            <p
                              className="white-space-normal light"
>
                              $
                              69.99
</p>,
                          ],
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "6\\" Cake",
                              "className": "mb1 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "6\\" Cake",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "",
                              "className": "mb1 white-space-normal light",
                            },
                            "ref": null,
                            "rendered": "",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "$",
                                "69.99",
                              ],
                              "className": "white-space-normal light",
                            },
                            "ref": null,
                            "rendered": Array [
                              "$",
                              "69.99",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Pick your ice cream cake flavor combination!
</p>,
                <Button
                  childrenWrapperClassName=""
                  className="uppercase mb3 tout"
                  color="peach"
                  disabled={false}
                  fullWidth={false}
                  hover="shadow"
                  label="Need Help?"
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  shadow={false}
                  to=""
                  type="button"
                  variant="primary-small"
/>,
                <p
                  className="bold big center mb2"
>
                  We recommend these
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb2 white-space-normal center"
                                                                        >
                                                                                          Build your own with your choice of flavors!
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pick your ice cream cake flavor combination!",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Pick your ice cream cake flavor combination!",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": null,
                  "childrenWrapperClassName": "",
                  "className": "uppercase mb3 tout",
                  "color": "peach",
                  "disabled": false,
                  "fullWidth": false,
                  "hover": "shadow",
                  "label": "Need Help?",
                  "onClick": [Function],
                  "onMouseEnter": [Function],
                  "onMouseLeave": [Function],
                  "shadow": false,
                  "to": "",
                  "type": "button",
                  "variant": "primary-small",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "We recommend these",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "We recommend these",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    Array [],
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb2 white-space-normal center"
                                                                  >
                                                                                        Build your own with your choice of flavors!
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb2 white-space-normal center"
                                                >
                                                                        Build your own with your choice of flavors!
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb2 white-space-normal center"
                          >
                                                    Build your own with your choice of flavors!
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="mb2 white-space-normal center"
>
                            Build your own with your choice of flavors!
</p>,
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Build your own with your choice of flavors!",
                            "className": "mb2 white-space-normal center",
                          },
                          "ref": null,
                          "rendered": "Build your own with your choice of flavors!",
                          "type": "p",
                        },
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Choose your first flavor
                  </p>
                  <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width z-sub-nav"
                                    color="peach"
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={Array []}
                                    placeholder="Choose a Flavor"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                  />
                  <span
                                    className="mt2 text-peach"
                  >
                                    You must first select a location
                  </span>
</div>,
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Choose your second flavor
                  </p>
                  <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width"
                                    color="peach"
                                    disabled={true}
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={Array []}
                                    placeholder="Choose a Flavor"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                  />
                  <span
                                    className="mt2 text-peach"
                  >
                                    You must first select a location
                  </span>
</div>,
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Pick a base
                  </p>
                  <p
                                    className="center mb3 help-text-container-width"
                  >
                                    All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                  </p>
                  <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                  >
                                    <div
                                                      className="col-6 md-col-3 p1"
                                    >
                                                      <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Fudge"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                      />
                                    </div>
                                    <div
                                                      className="col-6 md-col-3 p1"
                                    >
                                                      <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Salted Caramel"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                      />
                                    </div>
                  </div>
</div>,
              ],
              "className": "w100 flex flex-column items-center undefined",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Choose your first flavor
</p>,
                    <Dropdown
                      bgColor=""
                      className="w100 text-container-width z-sub-nav"
                      color="peach"
                      fixedWidth={false}
                      label=""
                      name=""
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Choose a Flavor"
                      selectClassName=""
                      shadow={false}
                      textAlignCenter={false}
                      textColor=""
                      value={null}
                      variant="square"
/>,
                    <span
                      className="mt2 text-peach"
>
                      You must first select a location
</span>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose your first flavor",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Choose your first flavor",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bgColor": "",
                      "className": "w100 text-container-width z-sub-nav",
                      "color": "peach",
                      "fixedWidth": false,
                      "label": "",
                      "name": "",
                      "onChange": [Function],
                      "options": Array [],
                      "placeholder": "Choose a Flavor",
                      "selectClassName": "",
                      "shadow": false,
                      "textAlignCenter": false,
                      "textColor": "",
                      "value": null,
                      "variant": "square",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "You must first select a location",
                      "className": "mt2 text-peach",
                    },
                    "ref": null,
                    "rendered": "You must first select a location",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Choose your second flavor
</p>,
                    <Dropdown
                      bgColor=""
                      className="w100 text-container-width"
                      color="peach"
                      disabled={true}
                      fixedWidth={false}
                      label=""
                      name=""
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Choose a Flavor"
                      selectClassName=""
                      shadow={false}
                      textAlignCenter={false}
                      textColor=""
                      value={null}
                      variant="square"
/>,
                    <span
                      className="mt2 text-peach"
>
                      You must first select a location
</span>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose your second flavor",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Choose your second flavor",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bgColor": "",
                      "className": "w100 text-container-width",
                      "color": "peach",
                      "disabled": true,
                      "fixedWidth": false,
                      "label": "",
                      "name": "",
                      "onChange": [Function],
                      "options": Array [],
                      "placeholder": "Choose a Flavor",
                      "selectClassName": "",
                      "shadow": false,
                      "textAlignCenter": false,
                      "textColor": "",
                      "value": null,
                      "variant": "square",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "You must first select a location",
                      "className": "mt2 text-peach",
                    },
                    "ref": null,
                    "rendered": "You must first select a location",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Pick a base
</p>,
                    <p
                      className="center mb3 help-text-container-width"
>
                      All ice cream cakes come with a layer of fudge in between the layers of ice cream.
</p>,
                    <div
                      className="form-container-width w100 flex flex-wrap justify-center"
>
                      <div
                                            className="col-6 md-col-3 p1"
                      >
                                            <Button
                                                                  childrenWrapperClassName=""
                                                                  className="center wh100 white-space-normal px3"
                                                                  color="white-denim"
                                                                  disabled={false}
                                                                  fullWidth={false}
                                                                  hover="shadow"
                                                                  label="Fudge"
                                                                  onClick={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  shadow={false}
                                                                  to=""
                                                                  type="button"
                                                                  variant="square"
                                            />
                      </div>
                      <div
                                            className="col-6 md-col-3 p1"
                      >
                                            <Button
                                                                  childrenWrapperClassName=""
                                                                  className="center wh100 white-space-normal px3"
                                                                  color="white-denim"
                                                                  disabled={false}
                                                                  fullWidth={false}
                                                                  hover="shadow"
                                                                  label="Salted Caramel"
                                                                  onClick={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  shadow={false}
                                                                  to=""
                                                                  type="button"
                                                                  variant="square"
                                            />
                      </div>
</div>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pick a base",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Pick a base",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                      "className": "center mb3 help-text-container-width",
                    },
                    "ref": null,
                    "rendered": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="col-6 md-col-3 p1"
>
                          <Button
                                                    childrenWrapperClassName=""
                                                    className="center wh100 white-space-normal px3"
                                                    color="white-denim"
                                                    disabled={false}
                                                    fullWidth={false}
                                                    hover="shadow"
                                                    label="Fudge"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    shadow={false}
                                                    to=""
                                                    type="button"
                                                    variant="square"
                          />
</div>,
                        <div
                          className="col-6 md-col-3 p1"
>
                          <Button
                                                    childrenWrapperClassName=""
                                                    className="center wh100 white-space-normal px3"
                                                    color="white-denim"
                                                    disabled={false}
                                                    fullWidth={false}
                                                    hover="shadow"
                                                    label="Salted Caramel"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    shadow={false}
                                                    to=""
                                                    type="button"
                                                    variant="square"
                          />
</div>,
                      ],
                      "className": "form-container-width w100 flex flex-wrap justify-center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "Fudge",
                        "nodeType": "host",
                        "props": Object {
                          "children": <Button
                            childrenWrapperClassName=""
                            className="center wh100 white-space-normal px3"
                            color="white-denim"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label="Fudge"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="square"
/>,
                          "className": "col-6 md-col-3 p1",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": null,
                            "childrenWrapperClassName": "",
                            "className": "center wh100 white-space-normal px3",
                            "color": "white-denim",
                            "disabled": false,
                            "fullWidth": false,
                            "hover": "shadow",
                            "label": "Fudge",
                            "onClick": [Function],
                            "onMouseEnter": [Function],
                            "onMouseLeave": [Function],
                            "shadow": false,
                            "to": "",
                            "type": "button",
                            "variant": "square",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": "Salted Caramel",
                        "nodeType": "host",
                        "props": Object {
                          "children": <Button
                            childrenWrapperClassName=""
                            className="center wh100 white-space-normal px3"
                            color="white-denim"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label="Salted Caramel"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="square"
/>,
                          "className": "col-6 md-col-3 p1",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": null,
                            "childrenWrapperClassName": "",
                            "className": "center wh100 white-space-normal px3",
                            "color": "white-denim",
                            "disabled": false,
                            "fullWidth": false,
                            "hover": "shadow",
                            "label": "Salted Caramel",
                            "onClick": [Function],
                            "onMouseEnter": [Function],
                            "onMouseLeave": [Function],
                            "shadow": false,
                            "to": "",
                            "type": "button",
                            "variant": "square",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What kind of sprinkles would you like?
                   
</p>,
                <p
                  className="center mb3 help-text-container-width"
>
                  Each ice cream cake is made with a topping of whipped cream and sprinkles.
</p>,
                <div
                  className="form-container-width w100 flex flex-wrap justify-center"
>
                  
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "What kind of sprinkles would you like?",
                    " ",
                  ],
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": Array [
                  "What kind of sprinkles would you like?",
                  " ",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                  "className": "center mb3 help-text-container-width",
                },
                "ref": null,
                "rendered": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "form-container-width w100 flex flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Would you like any additional toppings?
                   
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb1 white-space-normal center"
                                                                        >
                                                                                          M&M's
                                                                        </p>
                                                                        <p
                                                                                          className="white-space-normal light"
                                                                        >
                                                                                          $1.00
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb1 white-space-normal center"
                                                                        >
                                                                                          Rainbow sprinkles
                                                                        </p>
                                                                        <p
                                                                                          className="white-space-normal light"
                                                                        >
                                                                                          $1.00
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Would you like any additional toppings?",
                    " ",
                  ],
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": Array [
                  "Would you like any additional toppings?",
                  " ",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb1 white-space-normal center"
                                                                  >
                                                                                        M&M's
                                                                  </p>
                                                                  <p
                                                                                        className="white-space-normal light"
                                                                  >
                                                                                        $1.00
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb1 white-space-normal center"
                                                                  >
                                                                                        Rainbow sprinkles
                                                                  </p>
                                                                  <p
                                                                                        className="white-space-normal light"
                                                                  >
                                                                                        $1.00
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb1 white-space-normal center"
                                                >
                                                                        M&M's
                                                </p>
                                                <p
                                                                        className="white-space-normal light"
                                                >
                                                                        $1.00
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb1 white-space-normal center"
                          >
                                                    M&M's
                          </p>
                          <p
                                                    className="white-space-normal light"
                          >
                                                    $1.00
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <p
                              className="mb1 white-space-normal center"
>
                              M&M's
</p>,
                            <p
                              className="white-space-normal light"
>
                              $1.00
</p>,
                          ],
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "M&M's",
                              "className": "mb1 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "M&M's",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "$1.00",
                              "className": "white-space-normal light",
                            },
                            "ref": null,
                            "rendered": "$1.00",
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb1 white-space-normal center"
                                                >
                                                                        Rainbow sprinkles
                                                </p>
                                                <p
                                                                        className="white-space-normal light"
                                                >
                                                                        $1.00
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb1 white-space-normal center"
                          >
                                                    Rainbow sprinkles
                          </p>
                          <p
                                                    className="white-space-normal light"
                          >
                                                    $1.00
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <p
                              className="mb1 white-space-normal center"
>
                              Rainbow sprinkles
</p>,
                            <p
                              className="white-space-normal light"
>
                              $1.00
</p>,
                          ],
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Rainbow sprinkles",
                              "className": "mb1 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "Rainbow sprinkles",
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "$1.00",
                              "className": "white-space-normal light",
                            },
                            "ref": null,
                            "rendered": "$1.00",
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="max-width-3 mx-auto flex flex-wrap px3"
>
            <div
                        className="col-12 md-col-7 flex flex-column mb4"
            >
                        <span
                                    className="bold big mb3"
                        >
                                    Summary
                        </span>
                        <span
                                    className="line-height small"
                        >
                                    Please fill out all fields.
                        </span>
            </div>
            <div
                        className="col-12 md-col-5 flex flex-column items-start"
            >
                        <span
                                    className="bold big mb3"
                        >
                                    Deposit total
                                    
                        </span>
                        <span
                                    className="line-height small"
                        >
                                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                        </span>
                        <Button
                                    childrenWrapperClassName=""
                                    className="mt3 inline-block w-auto"
                                    color="madison-blue"
                                    disabled={true}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Add to cart!"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary"
                        />
            </div>
</div>,
          "className": "w100 bg-pastel-peach py4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-12 md-col-7 flex flex-column mb4"
>
                <span
                                className="bold big mb3"
                >
                                Summary
                </span>
                <span
                                className="line-height small"
                >
                                Please fill out all fields.
                </span>
</div>,
              <div
                className="col-12 md-col-5 flex flex-column items-start"
>
                <span
                                className="bold big mb3"
                >
                                Deposit total
                                
                </span>
                <span
                                className="line-height small"
                >
                                Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                </span>
                <Button
                                childrenWrapperClassName=""
                                className="mt3 inline-block w-auto"
                                color="madison-blue"
                                disabled={true}
                                fullWidth={false}
                                hover="shadow"
                                label="Add to cart!"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="primary"
                />
</div>,
            ],
            "className": "max-width-3 mx-auto flex flex-wrap px3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="bold big mb3"
>
                    Summary
</span>,
                  <span
                    className="line-height small"
>
                    Please fill out all fields.
</span>,
                ],
                "className": "col-12 md-col-7 flex flex-column mb4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Summary",
                    "className": "bold big mb3",
                  },
                  "ref": null,
                  "rendered": "Summary",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please fill out all fields.",
                    "className": "line-height small",
                  },
                  "ref": null,
                  "rendered": "Please fill out all fields.",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="bold big mb3"
>
                    Deposit total
                    
</span>,
                  <span
                    className="line-height small"
>
                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
</span>,
                  <Button
                    childrenWrapperClassName=""
                    className="mt3 inline-block w-auto"
                    color="madison-blue"
                    disabled={true}
                    fullWidth={false}
                    hover="shadow"
                    label="Add to cart!"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="primary"
/>,
                ],
                "className": "col-12 md-col-5 flex flex-column items-start",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Deposit total",
                      "",
                    ],
                    "className": "bold big mb3",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Deposit total",
                    "",
                  ],
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                    "className": "line-height small",
                  },
                  "ref": null,
                  "rendered": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": null,
                    "childrenWrapperClassName": "",
                    "className": "mt3 inline-block w-auto",
                    "color": "madison-blue",
                    "disabled": true,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "Add to cart!",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex flex-wrap max-width-4 mx-auto my4 px2"
>
            <div
                        className="w100 mb4"
            >
                        <h1
                                    className="w100 block-headline center mb3"
                        >
                                    Order Your Custom Ice Cream Cake
                        </h1>
                        <h2
                                    className="w100 big bold center text-peach mb3"
                        >
                                    First, let's work out the details
                        </h2>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Where would you like to pick up your ice cream cake?
                        </p>
                        <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width z-sub-nav"
                                    color="peach"
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Gowanus",
                                                              "value": "000a",
                                                            },
                                                          ]
                                    }
                                    placeholder="Choose a Location"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    When would you like to pick up your ice cream cake?
                        </p>
                        <p
                                    className="center mb3 help-text-container-width"
                        >
                                    Please note, we need 48 hours minimum to create your custom ice cream cake.
                        </p>
                        <Button
                                    childrenWrapperClassName="w100 justify-between"
                                    className="w100 text-container-width relative z-1"
                                    color="white-denim"
                                    disabled={false}
                                    fullWidth={false}
                                    hover="shadow"
                                    label=""
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="style-none"
                        >
                                    <p
                                                className="bold text-dusty-gray"
                                    >
                                                Choose a day
                                    </p>
                                    <Image
                                                alt=""
                                                bg={false}
                                                className="right"
                                                onImgLoad={[Function]}
                                                src="/assets/images/arrow-dropdown-active.svg"
                                                style={Object {}}
                                    />
                                    <DayPicker
                                                canChangeMonth={true}
                                                captionElement={
                                                            <Caption
                                                                        classNames={
                                                                                    Object {
                                                                                                "body": "DayPicker-Body",
                                                                                                "caption": "DayPicker-Caption",
                                                                                                "container": "DayPicker",
                                                                                                "day": "DayPicker-Day",
                                                                                                "disabled": "disabled",
                                                                                                "footer": "DayPicker-Footer",
                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                "month": "DayPicker-Month",
                                                                                                "months": "DayPicker-Months",
                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                "outside": "outside",
                                                                                                "selected": "selected",
                                                                                                "today": "today",
                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                "week": "DayPicker-Week",
                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                              }
                                                                        }
                                                                        localeUtils={
                                                                                    Object {
                                                                                                "formatDay": [Function],
                                                                                                "formatMonthTitle": [Function],
                                                                                                "formatWeekdayLong": [Function],
                                                                                                "formatWeekdayShort": [Function],
                                                                                                "getFirstDayOfWeek": [Function],
                                                                                                "getMonths": [Function],
                                                                                              }
                                                                        }
                                                            />
                                                }
                                                className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                                classNames={
                                                            Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                                                }
                                                disabledDays={
                                                            Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.849Z,
                                                                        },
                                                                      ]
                                                }
                                                enableOutsideDaysClick={true}
                                                fixedWeeks={false}
                                                initialMonth={2018-12-04T22:03:12.745Z}
                                                labels={
                                                            Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                                                }
                                                locale="en"
                                                localeUtils={
                                                            Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                                                }
                                                navbarElement={
                                                            <Navbar
                                                                        classNames={
                                                                                    Object {
                                                                                                "body": "DayPicker-Body",
                                                                                                "caption": "DayPicker-Caption",
                                                                                                "container": "DayPicker",
                                                                                                "day": "DayPicker-Day",
                                                                                                "disabled": "disabled",
                                                                                                "footer": "DayPicker-Footer",
                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                "month": "DayPicker-Month",
                                                                                                "months": "DayPicker-Months",
                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                "outside": "outside",
                                                                                                "selected": "selected",
                                                                                                "today": "today",
                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                "week": "DayPicker-Week",
                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                              }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                    Object {
                                                                                                "nextMonth": "Next Month",
                                                                                                "previousMonth": "Previous Month",
                                                                                              }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                            />
                                                }
                                                numberOfMonths={1}
                                                onDayClick={[Function]}
                                                onMonthChange={[Function]}
                                                pagedNavigation={false}
                                                renderDay={[Function]}
                                                renderWeek={[Function]}
                                                reverseMonths={false}
                                                showOutsideDays={false}
                                                showWeekDays={true}
                                                showWeekNumbers={false}
                                                tabIndex={0}
                                                weekdayElement={<Weekday />}
                                    />
                        </Button>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What time of day will you be picking up your ice cream cake?
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 md-col-3 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="12pm to 5pm"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                />
                                    </div>
                                    <div
                                                className="col-6 md-col-3 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="5pm to closing"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                />
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Who will be picking up your ice cream cake?
                        </p>
                        <TextField
                                    address=""
                                    className="w100 text-container-width"
                                    max={null}
                                    min={null}
                                    name=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Name"
                                    required={false}
                                    type="text"
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What’s the best phone number to reach you?
                        </p>
                        <TextField
                                    address=""
                                    className="w100 text-container-width"
                                    max={null}
                                    min={null}
                                    name=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Phone number"
                                    required={false}
                                    type="text"
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mt2 mb4"
            >
                        <h2
                                    className="w100 big bold center text-peach mb3"
                        >
                                    Now, the fun stuff!
                        </h2>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Pick a size
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb1 white-space-normal center"
                                                                        >
                                                                                    4" Cake
                                                                        </p>
                                                                        <p
                                                                                    className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                    className="white-space-normal light"
                                                                        >
                                                                                    $
                                                                                    49.99
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb1 white-space-normal center"
                                                                        >
                                                                                    6" Cake
                                                                        </p>
                                                                        <p
                                                                                    className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                    className="white-space-normal light"
                                                                        >
                                                                                    $
                                                                                    69.99
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Pick your ice cream cake flavor combination!
                        </p>
                        <Button
                                    childrenWrapperClassName=""
                                    className="uppercase mb3 tout"
                                    color="peach"
                                    disabled={false}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Need Help?"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary-small"
                        />
                        <p
                                    className="bold big center mb2"
                        >
                                    We recommend these
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb2 white-space-normal center"
                                                                        >
                                                                                    Build your own with your choice of flavors!
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 flex flex-column items-center undefined"
            >
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Choose your first flavor
                                    </p>
                                    <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width z-sub-nav"
                                                color="peach"
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                    />
                                    <span
                                                className="mt2 text-peach"
                                    >
                                                You must first select a location
                                    </span>
                        </div>
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Choose your second flavor
                                    </p>
                                    <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width"
                                                color="peach"
                                                disabled={true}
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                    />
                                    <span
                                                className="mt2 text-peach"
                                    >
                                                You must first select a location
                                    </span>
                        </div>
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Pick a base
                                    </p>
                                    <p
                                                className="center mb3 help-text-container-width"
                                    >
                                                All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                                    </p>
                                    <div
                                                className="form-container-width w100 flex flex-wrap justify-center"
                                    >
                                                <div
                                                            className="col-6 md-col-3 p1"
                                                >
                                                            <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Fudge"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                            />
                                                </div>
                                                <div
                                                            className="col-6 md-col-3 p1"
                                                >
                                                            <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Salted Caramel"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                            />
                                                </div>
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What kind of sprinkles would you like?
                                     
                        </p>
                        <p
                                    className="center mb3 help-text-container-width"
                        >
                                    Each ice cream cake is made with a topping of whipped cream and sprinkles.
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                        >
                                    
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Would you like any additional toppings?
                                     
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb1 white-space-normal center"
                                                                        >
                                                                                    M&M's
                                                                        </p>
                                                                        <p
                                                                                    className="white-space-normal light"
                                                                        >
                                                                                    $1.00
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb1 white-space-normal center"
                                                                        >
                                                                                    Rainbow sprinkles
                                                                        </p>
                                                                        <p
                                                                                    className="white-space-normal light"
                                                                        >
                                                                                    $1.00
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                        </div>
            </div>
</div>,
          <div
            className="w100 bg-pastel-peach py4"
>
            <div
                        className="max-width-3 mx-auto flex flex-wrap px3"
            >
                        <div
                                    className="col-12 md-col-7 flex flex-column mb4"
                        >
                                    <span
                                                className="bold big mb3"
                                    >
                                                Summary
                                    </span>
                                    <span
                                                className="line-height small"
                                    >
                                                Please fill out all fields.
                                    </span>
                        </div>
                        <div
                                    className="col-12 md-col-5 flex flex-column items-start"
                        >
                                    <span
                                                className="bold big mb3"
                                    >
                                                Deposit total
                                                
                                    </span>
                                    <span
                                                className="line-height small"
                                    >
                                                Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                                    </span>
                                    <Button
                                                childrenWrapperClassName=""
                                                className="mt3 inline-block w-auto"
                                                color="madison-blue"
                                                disabled={true}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="Add to cart!"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="primary"
                                    />
                        </div>
            </div>
</div>,
          null,
        ],
        "className": "flex flex-wrap my4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="w100 mb4"
>
                <h1
                                className="w100 block-headline center mb3"
                >
                                Order Your Custom Ice Cream Cake
                </h1>
                <h2
                                className="w100 big bold center text-peach mb3"
                >
                                First, let's work out the details
                </h2>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Where would you like to pick up your ice cream cake?
                </p>
                <Dropdown
                                bgColor=""
                                className="w100 text-container-width z-sub-nav"
                                color="peach"
                                fixedWidth={false}
                                label=""
                                name=""
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Gowanus",
                                                                  "value": "000a",
                                                                },
                                                              ]
                                }
                                placeholder="Choose a Location"
                                selectClassName=""
                                shadow={false}
                                textAlignCenter={false}
                                textColor=""
                                value={null}
                                variant="square"
                />
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                When would you like to pick up your ice cream cake?
                </p>
                <p
                                className="center mb3 help-text-container-width"
                >
                                Please note, we need 48 hours minimum to create your custom ice cream cake.
                </p>
                <Button
                                childrenWrapperClassName="w100 justify-between"
                                className="w100 text-container-width relative z-1"
                                color="white-denim"
                                disabled={false}
                                fullWidth={false}
                                hover="shadow"
                                label=""
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="style-none"
                >
                                <p
                                                className="bold text-dusty-gray"
                                >
                                                Choose a day
                                </p>
                                <Image
                                                alt=""
                                                bg={false}
                                                className="right"
                                                onImgLoad={[Function]}
                                                src="/assets/images/arrow-dropdown-active.svg"
                                                style={Object {}}
                                />
                                <DayPicker
                                                canChangeMonth={true}
                                                captionElement={
                                                                <Caption
                                                                                classNames={
                                                                                                Object {
                                                                                                                "body": "DayPicker-Body",
                                                                                                                "caption": "DayPicker-Caption",
                                                                                                                "container": "DayPicker",
                                                                                                                "day": "DayPicker-Day",
                                                                                                                "disabled": "disabled",
                                                                                                                "footer": "DayPicker-Footer",
                                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                "month": "DayPicker-Month",
                                                                                                                "months": "DayPicker-Months",
                                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                "outside": "outside",
                                                                                                                "selected": "selected",
                                                                                                                "today": "today",
                                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                                "week": "DayPicker-Week",
                                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                                              }
                                                                                }
                                                                                localeUtils={
                                                                                                Object {
                                                                                                                "formatDay": [Function],
                                                                                                                "formatMonthTitle": [Function],
                                                                                                                "formatWeekdayLong": [Function],
                                                                                                                "formatWeekdayShort": [Function],
                                                                                                                "getFirstDayOfWeek": [Function],
                                                                                                                "getMonths": [Function],
                                                                                                              }
                                                                                }
                                                                />
                                                }
                                                className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                                classNames={
                                                                Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                }
                                                disabledDays={
                                                                Array [
                                                                                undefined,
                                                                                Object {
                                                                                  "before": 2018-12-07T22:03:12.849Z,
                                                                                },
                                                                              ]
                                                }
                                                enableOutsideDaysClick={true}
                                                fixedWeeks={false}
                                                initialMonth={2018-12-04T22:03:12.745Z}
                                                labels={
                                                                Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                                }
                                                locale="en"
                                                localeUtils={
                                                                Object {
                                                                                "default": Object {
                                                                                  "formatDay": [Function],
                                                                                  "formatMonthTitle": [Function],
                                                                                  "formatWeekdayLong": [Function],
                                                                                  "formatWeekdayShort": [Function],
                                                                                  "getFirstDayOfWeek": [Function],
                                                                                  "getMonths": [Function],
                                                                                },
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                                }
                                                navbarElement={
                                                                <Navbar
                                                                                classNames={
                                                                                                Object {
                                                                                                                "body": "DayPicker-Body",
                                                                                                                "caption": "DayPicker-Caption",
                                                                                                                "container": "DayPicker",
                                                                                                                "day": "DayPicker-Day",
                                                                                                                "disabled": "disabled",
                                                                                                                "footer": "DayPicker-Footer",
                                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                "month": "DayPicker-Month",
                                                                                                                "months": "DayPicker-Months",
                                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                "outside": "outside",
                                                                                                                "selected": "selected",
                                                                                                                "today": "today",
                                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                                "week": "DayPicker-Week",
                                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                                              }
                                                                                }
                                                                                dir="ltr"
                                                                                labels={
                                                                                                Object {
                                                                                                                "nextMonth": "Next Month",
                                                                                                                "previousMonth": "Previous Month",
                                                                                                              }
                                                                                }
                                                                                showNextButton={true}
                                                                                showPreviousButton={true}
                                                                />
                                                }
                                                numberOfMonths={1}
                                                onDayClick={[Function]}
                                                onMonthChange={[Function]}
                                                pagedNavigation={false}
                                                renderDay={[Function]}
                                                renderWeek={[Function]}
                                                reverseMonths={false}
                                                showOutsideDays={false}
                                                showWeekDays={true}
                                                showWeekNumbers={false}
                                                tabIndex={0}
                                                weekdayElement={<Weekday />}
                                />
                </Button>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What time of day will you be picking up your ice cream cake?
                </p>
                <div
                                className="form-container-width w100 flex flex-wrap justify-center"
                >
                                <div
                                                className="col-6 md-col-3 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100 white-space-normal px2"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label="12pm to 5pm"
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                />
                                </div>
                                <div
                                                className="col-6 md-col-3 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100 white-space-normal px2"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label="5pm to closing"
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                />
                                </div>
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Who will be picking up your ice cream cake?
                </p>
                <TextField
                                address=""
                                className="w100 text-container-width"
                                max={null}
                                min={null}
                                name=""
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Name"
                                required={false}
                                type="text"
                                variant="square"
                />
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What’s the best phone number to reach you?
                </p>
                <TextField
                                address=""
                                className="w100 text-container-width"
                                max={null}
                                min={null}
                                name=""
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Phone number"
                                required={false}
                                type="text"
                                variant="square"
                />
</div>,
              <div
                className="w100 mt2 mb4"
>
                <h2
                                className="w100 big bold center text-peach mb3"
                >
                                Now, the fun stuff!
                </h2>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Pick a size
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb1 white-space-normal center"
                                                                                >
                                                                                                4" Cake
                                                                                </p>
                                                                                <p
                                                                                                className="mb1 white-space-normal light"
                                                                                />
                                                                                <p
                                                                                                className="white-space-normal light"
                                                                                >
                                                                                                $
                                                                                                49.99
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb1 white-space-normal center"
                                                                                >
                                                                                                6" Cake
                                                                                </p>
                                                                                <p
                                                                                                className="mb1 white-space-normal light"
                                                                                />
                                                                                <p
                                                                                                className="white-space-normal light"
                                                                                >
                                                                                                $
                                                                                                69.99
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Pick your ice cream cake flavor combination!
                </p>
                <Button
                                childrenWrapperClassName=""
                                className="uppercase mb3 tout"
                                color="peach"
                                disabled={false}
                                fullWidth={false}
                                hover="shadow"
                                label="Need Help?"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="primary-small"
                />
                <p
                                className="bold big center mb2"
                >
                                We recommend these
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb2 white-space-normal center"
                                                                                >
                                                                                                Build your own with your choice of flavors!
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                </div>
</div>,
              <div
                className="w100 flex flex-column items-center undefined"
>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Choose your first flavor
                                </p>
                                <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width z-sub-nav"
                                                color="peach"
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                />
                                <span
                                                className="mt2 text-peach"
                                >
                                                You must first select a location
                                </span>
                </div>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Choose your second flavor
                                </p>
                                <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width"
                                                color="peach"
                                                disabled={true}
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                />
                                <span
                                                className="mt2 text-peach"
                                >
                                                You must first select a location
                                </span>
                </div>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Pick a base
                                </p>
                                <p
                                                className="center mb3 help-text-container-width"
                                >
                                                All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                                </p>
                                <div
                                                className="form-container-width w100 flex flex-wrap justify-center"
                                >
                                                <div
                                                                className="col-6 md-col-3 p1"
                                                >
                                                                <Button
                                                                                childrenWrapperClassName=""
                                                                                className="center wh100 white-space-normal px3"
                                                                                color="white-denim"
                                                                                disabled={false}
                                                                                fullWidth={false}
                                                                                hover="shadow"
                                                                                label="Fudge"
                                                                                onClick={[Function]}
                                                                                onMouseEnter={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                shadow={false}
                                                                                to=""
                                                                                type="button"
                                                                                variant="square"
                                                                />
                                                </div>
                                                <div
                                                                className="col-6 md-col-3 p1"
                                                >
                                                                <Button
                                                                                childrenWrapperClassName=""
                                                                                className="center wh100 white-space-normal px3"
                                                                                color="white-denim"
                                                                                disabled={false}
                                                                                fullWidth={false}
                                                                                hover="shadow"
                                                                                label="Salted Caramel"
                                                                                onClick={[Function]}
                                                                                onMouseEnter={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                shadow={false}
                                                                                to=""
                                                                                type="button"
                                                                                variant="square"
                                                                />
                                                </div>
                                </div>
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What kind of sprinkles would you like?
                                 
                </p>
                <p
                                className="center mb3 help-text-container-width"
                >
                                Each ice cream cake is made with a topping of whipped cream and sprinkles.
                </p>
                <div
                                className="form-container-width w100 flex flex-wrap justify-center"
                >
                                
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Would you like any additional toppings?
                                 
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb1 white-space-normal center"
                                                                                >
                                                                                                M&M's
                                                                                </p>
                                                                                <p
                                                                                                className="white-space-normal light"
                                                                                >
                                                                                                $1.00
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb1 white-space-normal center"
                                                                                >
                                                                                                Rainbow sprinkles
                                                                                </p>
                                                                                <p
                                                                                                className="white-space-normal light"
                                                                                >
                                                                                                $1.00
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                </div>
</div>,
            ],
            "className": "flex flex-wrap max-width-4 mx-auto my4 px2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="w100 block-headline center mb3"
>
                    Order Your Custom Ice Cream Cake
</h1>,
                  <h2
                    className="w100 big bold center text-peach mb3"
>
                    First, let's work out the details
</h2>,
                ],
                "className": "w100 mb4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Order Your Custom Ice Cream Cake",
                    "className": "w100 block-headline center mb3",
                  },
                  "ref": null,
                  "rendered": "Order Your Custom Ice Cream Cake",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First, let's work out the details",
                    "className": "w100 big bold center text-peach mb3",
                  },
                  "ref": null,
                  "rendered": "First, let's work out the details",
                  "type": "h2",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Where would you like to pick up your ice cream cake?
</p>,
                  <Dropdown
                    bgColor=""
                    className="w100 text-container-width z-sub-nav"
                    color="peach"
                    fixedWidth={false}
                    label=""
                    name=""
                    onChange={[Function]}
                    options={
                                        Array [
                                                            Object {
                                                              "label": "Gowanus",
                                                              "value": "000a",
                                                            },
                                                          ]
                    }
                    placeholder="Choose a Location"
                    selectClassName=""
                    shadow={false}
                    textAlignCenter={false}
                    textColor=""
                    value={null}
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Where would you like to pick up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Where would you like to pick up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bgColor": "",
                    "className": "w100 text-container-width z-sub-nav",
                    "color": "peach",
                    "fixedWidth": false,
                    "label": "",
                    "name": "",
                    "onChange": [Function],
                    "options": Array [
                      Object {
                        "label": "Gowanus",
                        "value": "000a",
                      },
                    ],
                    "placeholder": "Choose a Location",
                    "selectClassName": "",
                    "shadow": false,
                    "textAlignCenter": false,
                    "textColor": "",
                    "value": null,
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    When would you like to pick up your ice cream cake?
</p>,
                  <p
                    className="center mb3 help-text-container-width"
>
                    Please note, we need 48 hours minimum to create your custom ice cream cake.
</p>,
                  <Button
                    childrenWrapperClassName="w100 justify-between"
                    className="w100 text-container-width relative z-1"
                    color="white-denim"
                    disabled={false}
                    fullWidth={false}
                    hover="shadow"
                    label=""
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="style-none"
>
                    <p
                                        className="bold text-dusty-gray"
                    >
                                        Choose a day
                    </p>
                    <Image
                                        alt=""
                                        bg={false}
                                        className="right"
                                        onImgLoad={[Function]}
                                        src="/assets/images/arrow-dropdown-active.svg"
                                        style={Object {}}
                    />
                    <DayPicker
                                        canChangeMonth={true}
                                        captionElement={
                                                            <Caption
                                                                                classNames={
                                                                                                    Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                                }
                                                                                localeUtils={
                                                                                                    Object {
                                                                                                                        "formatDay": [Function],
                                                                                                                        "formatMonthTitle": [Function],
                                                                                                                        "formatWeekdayLong": [Function],
                                                                                                                        "formatWeekdayShort": [Function],
                                                                                                                        "getFirstDayOfWeek": [Function],
                                                                                                                        "getMonths": [Function],
                                                                                                                      }
                                                                                }
                                                            />
                                        }
                                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                        classNames={
                                                            Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                        }
                                        disabledDays={
                                                            Array [
                                                                                undefined,
                                                                                Object {
                                                                                  "before": 2018-12-07T22:03:12.849Z,
                                                                                },
                                                                              ]
                                        }
                                        enableOutsideDaysClick={true}
                                        fixedWeeks={false}
                                        initialMonth={2018-12-04T22:03:12.745Z}
                                        labels={
                                                            Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                        }
                                        locale="en"
                                        localeUtils={
                                                            Object {
                                                                                "default": Object {
                                                                                  "formatDay": [Function],
                                                                                  "formatMonthTitle": [Function],
                                                                                  "formatWeekdayLong": [Function],
                                                                                  "formatWeekdayShort": [Function],
                                                                                  "getFirstDayOfWeek": [Function],
                                                                                  "getMonths": [Function],
                                                                                },
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                        }
                                        navbarElement={
                                                            <Navbar
                                                                                classNames={
                                                                                                    Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                                }
                                                                                dir="ltr"
                                                                                labels={
                                                                                                    Object {
                                                                                                                        "nextMonth": "Next Month",
                                                                                                                        "previousMonth": "Previous Month",
                                                                                                                      }
                                                                                }
                                                                                showNextButton={true}
                                                                                showPreviousButton={true}
                                                            />
                                        }
                                        numberOfMonths={1}
                                        onDayClick={[Function]}
                                        onMonthChange={[Function]}
                                        pagedNavigation={false}
                                        renderDay={[Function]}
                                        renderWeek={[Function]}
                                        reverseMonths={false}
                                        showOutsideDays={false}
                                        showWeekDays={true}
                                        showWeekNumbers={false}
                                        tabIndex={0}
                                        weekdayElement={<Weekday />}
                    />
</Button>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "When would you like to pick up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "When would you like to pick up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                    "className": "center mb3 help-text-container-width",
                  },
                  "ref": null,
                  "rendered": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold text-dusty-gray"
>
                        Choose a day
</p>,
                      <Image
                        alt=""
                        bg={false}
                        className="right"
                        onImgLoad={[Function]}
                        src="/assets/images/arrow-dropdown-active.svg"
                        style={Object {}}
/>,
                      <DayPicker
                        canChangeMonth={true}
                        captionElement={
                                                <Caption
                                                                        classNames={
                                                                                                Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                        }
                                                                        localeUtils={
                                                                                                Object {
                                                                                                                        "formatDay": [Function],
                                                                                                                        "formatMonthTitle": [Function],
                                                                                                                        "formatWeekdayLong": [Function],
                                                                                                                        "formatWeekdayShort": [Function],
                                                                                                                        "getFirstDayOfWeek": [Function],
                                                                                                                        "getMonths": [Function],
                                                                                                                      }
                                                                        }
                                                />
                        }
                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        disabledDays={
                                                Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.849Z,
                                                                        },
                                                                      ]
                        }
                        enableOutsideDaysClick={true}
                        fixedWeeks={false}
                        initialMonth={2018-12-04T22:03:12.745Z}
                        labels={
                                                Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                        }
                        locale="en"
                        localeUtils={
                                                Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                        }
                        navbarElement={
                                                <Navbar
                                                                        classNames={
                                                                                                Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                                Object {
                                                                                                                        "nextMonth": "Next Month",
                                                                                                                        "previousMonth": "Previous Month",
                                                                                                                      }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                />
                        }
                        numberOfMonths={1}
                        onDayClick={[Function]}
                        onMonthChange={[Function]}
                        pagedNavigation={false}
                        renderDay={[Function]}
                        renderWeek={[Function]}
                        reverseMonths={false}
                        showOutsideDays={false}
                        showWeekDays={true}
                        showWeekNumbers={false}
                        tabIndex={0}
                        weekdayElement={<Weekday />}
/>,
                    ],
                    "childrenWrapperClassName": "w100 justify-between",
                    "className": "w100 text-container-width relative z-1",
                    "color": "white-denim",
                    "disabled": false,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "style-none",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose a day",
                        "className": "bold text-dusty-gray",
                      },
                      "ref": null,
                      "rendered": "Choose a day",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "",
                        "bg": false,
                        "children": null,
                        "className": "right",
                        "onImgLoad": [Function],
                        "src": "/assets/images/arrow-dropdown-active.svg",
                        "style": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "canChangeMonth": true,
                        "captionElement": <Caption
                          classNames={
                                                    Object {
                                                                              "body": "DayPicker-Body",
                                                                              "caption": "DayPicker-Caption",
                                                                              "container": "DayPicker",
                                                                              "day": "DayPicker-Day",
                                                                              "disabled": "disabled",
                                                                              "footer": "DayPicker-Footer",
                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                              "month": "DayPicker-Month",
                                                                              "months": "DayPicker-Months",
                                                                              "navBar": "DayPicker-NavBar",
                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                              "outside": "outside",
                                                                              "selected": "selected",
                                                                              "today": "today",
                                                                              "todayButton": "DayPicker-TodayButton",
                                                                              "week": "DayPicker-Week",
                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                              "weekday": "DayPicker-Weekday",
                                                                              "weekdays": "DayPicker-Weekdays",
                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                              "wrapper": "DayPicker-wrapper",
                                                                            }
                          }
                          localeUtils={
                                                    Object {
                                                                              "formatDay": [Function],
                                                                              "formatMonthTitle": [Function],
                                                                              "formatWeekdayLong": [Function],
                                                                              "formatWeekdayShort": [Function],
                                                                              "getFirstDayOfWeek": [Function],
                                                                              "getMonths": [Function],
                                                                            }
                          }
/>,
                        "className": "absolute t0 l0 mt4 bg-white text-madison-blue hide",
                        "classNames": Object {
                          "body": "DayPicker-Body",
                          "caption": "DayPicker-Caption",
                          "container": "DayPicker",
                          "day": "DayPicker-Day",
                          "disabled": "disabled",
                          "footer": "DayPicker-Footer",
                          "interactionDisabled": "DayPicker--interactionDisabled",
                          "month": "DayPicker-Month",
                          "months": "DayPicker-Months",
                          "navBar": "DayPicker-NavBar",
                          "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                          "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                          "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                          "outside": "outside",
                          "selected": "selected",
                          "today": "today",
                          "todayButton": "DayPicker-TodayButton",
                          "week": "DayPicker-Week",
                          "weekNumber": "DayPicker-WeekNumber",
                          "weekday": "DayPicker-Weekday",
                          "weekdays": "DayPicker-Weekdays",
                          "weekdaysRow": "DayPicker-WeekdaysRow",
                          "wrapper": "DayPicker-wrapper",
                        },
                        "disabledDays": Array [
                          undefined,
                          Object {
                            "before": 2018-12-07T22:03:12.849Z,
                          },
                        ],
                        "enableOutsideDaysClick": true,
                        "fixedWeeks": false,
                        "initialMonth": 2018-12-04T22:03:12.745Z,
                        "labels": Object {
                          "nextMonth": "Next Month",
                          "previousMonth": "Previous Month",
                        },
                        "locale": "en",
                        "localeUtils": Object {
                          "default": Object {
                            "formatDay": [Function],
                            "formatMonthTitle": [Function],
                            "formatWeekdayLong": [Function],
                            "formatWeekdayShort": [Function],
                            "getFirstDayOfWeek": [Function],
                            "getMonths": [Function],
                          },
                          "formatDay": [Function],
                          "formatMonthTitle": [Function],
                          "formatWeekdayLong": [Function],
                          "formatWeekdayShort": [Function],
                          "getFirstDayOfWeek": [Function],
                          "getMonths": [Function],
                        },
                        "navbarElement": <Navbar
                          classNames={
                                                    Object {
                                                                              "body": "DayPicker-Body",
                                                                              "caption": "DayPicker-Caption",
                                                                              "container": "DayPicker",
                                                                              "day": "DayPicker-Day",
                                                                              "disabled": "disabled",
                                                                              "footer": "DayPicker-Footer",
                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                              "month": "DayPicker-Month",
                                                                              "months": "DayPicker-Months",
                                                                              "navBar": "DayPicker-NavBar",
                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                              "outside": "outside",
                                                                              "selected": "selected",
                                                                              "today": "today",
                                                                              "todayButton": "DayPicker-TodayButton",
                                                                              "week": "DayPicker-Week",
                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                              "weekday": "DayPicker-Weekday",
                                                                              "weekdays": "DayPicker-Weekdays",
                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                              "wrapper": "DayPicker-wrapper",
                                                                            }
                          }
                          dir="ltr"
                          labels={
                                                    Object {
                                                                              "nextMonth": "Next Month",
                                                                              "previousMonth": "Previous Month",
                                                                            }
                          }
                          showNextButton={true}
                          showPreviousButton={true}
/>,
                        "numberOfMonths": 1,
                        "onDayClick": [Function],
                        "onMonthChange": [Function],
                        "pagedNavigation": false,
                        "renderDay": [Function],
                        "renderWeek": [Function],
                        "reverseMonths": false,
                        "showOutsideDays": false,
                        "showWeekDays": true,
                        "showWeekNumbers": false,
                        "tabIndex": 0,
                        "weekdayElement": <Weekday />,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What time of day will you be picking up your ice cream cake?
</p>,
                  <div
                    className="form-container-width w100 flex flex-wrap justify-center"
>
                    <div
                                        className="col-6 md-col-3 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="12pm to 5pm"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        />
                    </div>
                    <div
                                        className="col-6 md-col-3 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="5pm to closing"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        />
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "What time of day will you be picking up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "What time of day will you be picking up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-6 md-col-3 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100 white-space-normal px2"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="12pm to 5pm"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        />
</div>,
                      <div
                        className="col-6 md-col-3 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100 white-space-normal px2"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="5pm to closing"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        />
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "defaultTimeSlot1",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100 white-space-normal px2"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label="12pm to 5pm"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
/>,
                        "className": "col-6 md-col-3 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": null,
                          "childrenWrapperClassName": "",
                          "className": "center wh100 white-space-normal px2",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "12pm to 5pm",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "defaultTimeSlot2",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100 white-space-normal px2"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label="5pm to closing"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
/>,
                        "className": "col-6 md-col-3 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": null,
                          "childrenWrapperClassName": "",
                          "className": "center wh100 white-space-normal px2",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "5pm to closing",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Who will be picking up your ice cream cake?
</p>,
                  <TextField
                    address=""
                    className="w100 text-container-width"
                    max={null}
                    min={null}
                    name=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Name"
                    required={false}
                    type="text"
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Who will be picking up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Who will be picking up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "address": "",
                    "className": "w100 text-container-width",
                    "max": null,
                    "min": null,
                    "name": "",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "placeholder": "Name",
                    "required": false,
                    "type": "text",
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What’s the best phone number to reach you?
</p>,
                  <TextField
                    address=""
                    className="w100 text-container-width"
                    max={null}
                    min={null}
                    name=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Phone number"
                    required={false}
                    type="text"
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "What’s the best phone number to reach you?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "What’s the best phone number to reach you?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "address": "",
                    "className": "w100 text-container-width",
                    "max": null,
                    "min": null,
                    "name": "",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "placeholder": "Phone number",
                    "required": false,
                    "type": "text",
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h2
                  className="w100 big bold center text-peach mb3"
>
                  Now, the fun stuff!
</h2>,
                "className": "w100 mt2 mb4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Now, the fun stuff!",
                  "className": "w100 big bold center text-peach mb3",
                },
                "ref": null,
                "rendered": "Now, the fun stuff!",
                "type": "h2",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Pick a size
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb1 white-space-normal center"
                                                                                >
                                                                                                    4" Cake
                                                                                </p>
                                                                                <p
                                                                                                    className="mb1 white-space-normal light"
                                                                                />
                                                                                <p
                                                                                                    className="white-space-normal light"
                                                                                >
                                                                                                    $
                                                                                                    49.99
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb1 white-space-normal center"
                                                                                >
                                                                                                    6" Cake
                                                                                </p>
                                                                                <p
                                                                                                    className="mb1 white-space-normal light"
                                                                                />
                                                                                <p
                                                                                                    className="white-space-normal light"
                                                                                >
                                                                                                    $
                                                                                                    69.99
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pick a size",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Pick a size",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb1 white-space-normal center"
                                                                        >
                                                                                                4" Cake
                                                                        </p>
                                                                        <p
                                                                                                className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                                className="white-space-normal light"
                                                                        >
                                                                                                $
                                                                                                49.99
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb1 white-space-normal center"
                                                                        >
                                                                                                6" Cake
                                                                        </p>
                                                                        <p
                                                                                                className="mb1 white-space-normal light"
                                                                        />
                                                                        <p
                                                                                                className="white-space-normal light"
                                                                        >
                                                                                                $
                                                                                                69.99
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0001",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb1 white-space-normal center"
                                                    >
                                                                              4" Cake
                                                    </p>
                                                    <p
                                                                              className="mb1 white-space-normal light"
                                                    />
                                                    <p
                                                                              className="white-space-normal light"
                                                    >
                                                                              $
                                                                              49.99
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb1 white-space-normal center"
                            >
                                                        4" Cake
                            </p>
                            <p
                                                        className="mb1 white-space-normal light"
                            />
                            <p
                                                        className="white-space-normal light"
                            >
                                                        $
                                                        49.99
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <p
                                className="mb1 white-space-normal center"
>
                                4" Cake
</p>,
                              <p
                                className="mb1 white-space-normal light"
/>,
                              <p
                                className="white-space-normal light"
>
                                $
                                49.99
</p>,
                            ],
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "4\\" Cake",
                                "className": "mb1 white-space-normal center",
                              },
                              "ref": null,
                              "rendered": "4\\" Cake",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "",
                                "className": "mb1 white-space-normal light",
                              },
                              "ref": null,
                              "rendered": "",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "$",
                                  "49.99",
                                ],
                                "className": "white-space-normal light",
                              },
                              "ref": null,
                              "rendered": Array [
                                "$",
                                "49.99",
                              ],
                              "type": "p",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "0002",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb1 white-space-normal center"
                                                    >
                                                                              6" Cake
                                                    </p>
                                                    <p
                                                                              className="mb1 white-space-normal light"
                                                    />
                                                    <p
                                                                              className="white-space-normal light"
                                                    >
                                                                              $
                                                                              69.99
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb1 white-space-normal center"
                            >
                                                        6" Cake
                            </p>
                            <p
                                                        className="mb1 white-space-normal light"
                            />
                            <p
                                                        className="white-space-normal light"
                            >
                                                        $
                                                        69.99
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <p
                                className="mb1 white-space-normal center"
>
                                6" Cake
</p>,
                              <p
                                className="mb1 white-space-normal light"
/>,
                              <p
                                className="white-space-normal light"
>
                                $
                                69.99
</p>,
                            ],
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "6\\" Cake",
                                "className": "mb1 white-space-normal center",
                              },
                              "ref": null,
                              "rendered": "6\\" Cake",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "",
                                "className": "mb1 white-space-normal light",
                              },
                              "ref": null,
                              "rendered": "",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "$",
                                  "69.99",
                                ],
                                "className": "white-space-normal light",
                              },
                              "ref": null,
                              "rendered": Array [
                                "$",
                                "69.99",
                              ],
                              "type": "p",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Pick your ice cream cake flavor combination!
</p>,
                  <Button
                    childrenWrapperClassName=""
                    className="uppercase mb3 tout"
                    color="peach"
                    disabled={false}
                    fullWidth={false}
                    hover="shadow"
                    label="Need Help?"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="primary-small"
/>,
                  <p
                    className="bold big center mb2"
>
                    We recommend these
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb2 white-space-normal center"
                                                                                >
                                                                                                    Build your own with your choice of flavors!
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pick your ice cream cake flavor combination!",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Pick your ice cream cake flavor combination!",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": null,
                    "childrenWrapperClassName": "",
                    "className": "uppercase mb3 tout",
                    "color": "peach",
                    "disabled": false,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "Need Help?",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "primary-small",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "We recommend these",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "We recommend these",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      Array [],
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb2 white-space-normal center"
                                                                        >
                                                                                                Build your own with your choice of flavors!
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb2 white-space-normal center"
                                                    >
                                                                              Build your own with your choice of flavors!
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb2 white-space-normal center"
                            >
                                                        Build your own with your choice of flavors!
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <p
                              className="mb2 white-space-normal center"
>
                              Build your own with your choice of flavors!
</p>,
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Build your own with your choice of flavors!",
                              "className": "mb2 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "Build your own with your choice of flavors!",
                            "type": "p",
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Choose your first flavor
                    </p>
                    <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width z-sub-nav"
                                        color="peach"
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                    />
                    <span
                                        className="mt2 text-peach"
                    >
                                        You must first select a location
                    </span>
</div>,
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Choose your second flavor
                    </p>
                    <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width"
                                        color="peach"
                                        disabled={true}
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                    />
                    <span
                                        className="mt2 text-peach"
                    >
                                        You must first select a location
                    </span>
</div>,
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Pick a base
                    </p>
                    <p
                                        className="center mb3 help-text-container-width"
                    >
                                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                    </p>
                    <div
                                        className="form-container-width w100 flex flex-wrap justify-center"
                    >
                                        <div
                                                            className="col-6 md-col-3 p1"
                                        >
                                                            <Button
                                                                                childrenWrapperClassName=""
                                                                                className="center wh100 white-space-normal px3"
                                                                                color="white-denim"
                                                                                disabled={false}
                                                                                fullWidth={false}
                                                                                hover="shadow"
                                                                                label="Fudge"
                                                                                onClick={[Function]}
                                                                                onMouseEnter={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                shadow={false}
                                                                                to=""
                                                                                type="button"
                                                                                variant="square"
                                                            />
                                        </div>
                                        <div
                                                            className="col-6 md-col-3 p1"
                                        >
                                                            <Button
                                                                                childrenWrapperClassName=""
                                                                                className="center wh100 white-space-normal px3"
                                                                                color="white-denim"
                                                                                disabled={false}
                                                                                fullWidth={false}
                                                                                hover="shadow"
                                                                                label="Salted Caramel"
                                                                                onClick={[Function]}
                                                                                onMouseEnter={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                shadow={false}
                                                                                to=""
                                                                                type="button"
                                                                                variant="square"
                                                            />
                                        </div>
                    </div>
</div>,
                ],
                "className": "w100 flex flex-column items-center undefined",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Choose your first flavor
</p>,
                      <Dropdown
                        bgColor=""
                        className="w100 text-container-width z-sub-nav"
                        color="peach"
                        fixedWidth={false}
                        label=""
                        name=""
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Choose a Flavor"
                        selectClassName=""
                        shadow={false}
                        textAlignCenter={false}
                        textColor=""
                        value={null}
                        variant="square"
/>,
                      <span
                        className="mt2 text-peach"
>
                        You must first select a location
</span>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose your first flavor",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Choose your first flavor",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bgColor": "",
                        "className": "w100 text-container-width z-sub-nav",
                        "color": "peach",
                        "fixedWidth": false,
                        "label": "",
                        "name": "",
                        "onChange": [Function],
                        "options": Array [],
                        "placeholder": "Choose a Flavor",
                        "selectClassName": "",
                        "shadow": false,
                        "textAlignCenter": false,
                        "textColor": "",
                        "value": null,
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "You must first select a location",
                        "className": "mt2 text-peach",
                      },
                      "ref": null,
                      "rendered": "You must first select a location",
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Choose your second flavor
</p>,
                      <Dropdown
                        bgColor=""
                        className="w100 text-container-width"
                        color="peach"
                        disabled={true}
                        fixedWidth={false}
                        label=""
                        name=""
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Choose a Flavor"
                        selectClassName=""
                        shadow={false}
                        textAlignCenter={false}
                        textColor=""
                        value={null}
                        variant="square"
/>,
                      <span
                        className="mt2 text-peach"
>
                        You must first select a location
</span>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose your second flavor",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Choose your second flavor",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bgColor": "",
                        "className": "w100 text-container-width",
                        "color": "peach",
                        "disabled": true,
                        "fixedWidth": false,
                        "label": "",
                        "name": "",
                        "onChange": [Function],
                        "options": Array [],
                        "placeholder": "Choose a Flavor",
                        "selectClassName": "",
                        "shadow": false,
                        "textAlignCenter": false,
                        "textColor": "",
                        "value": null,
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "You must first select a location",
                        "className": "mt2 text-peach",
                      },
                      "ref": null,
                      "rendered": "You must first select a location",
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Pick a base
</p>,
                      <p
                        className="center mb3 help-text-container-width"
>
                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
</p>,
                      <div
                        className="form-container-width w100 flex flex-wrap justify-center"
>
                        <div
                                                className="col-6 md-col-3 p1"
                        >
                                                <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Fudge"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                />
                        </div>
                        <div
                                                className="col-6 md-col-3 p1"
                        >
                                                <Button
                                                                        childrenWrapperClassName=""
                                                                        className="center wh100 white-space-normal px3"
                                                                        color="white-denim"
                                                                        disabled={false}
                                                                        fullWidth={false}
                                                                        hover="shadow"
                                                                        label="Salted Caramel"
                                                                        onClick={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        shadow={false}
                                                                        to=""
                                                                        type="button"
                                                                        variant="square"
                                                />
                        </div>
</div>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Pick a base",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Pick a base",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                        "className": "center mb3 help-text-container-width",
                      },
                      "ref": null,
                      "rendered": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            className="col-6 md-col-3 p1"
>
                            <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px3"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="Fudge"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                            />
</div>,
                          <div
                            className="col-6 md-col-3 p1"
>
                            <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px3"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="Salted Caramel"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                            />
</div>,
                        ],
                        "className": "form-container-width w100 flex flex-wrap justify-center",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "Fudge",
                          "nodeType": "host",
                          "props": Object {
                            "children": <Button
                              childrenWrapperClassName=""
                              className="center wh100 white-space-normal px3"
                              color="white-denim"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label="Fudge"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="square"
/>,
                            "className": "col-6 md-col-3 p1",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": null,
                              "childrenWrapperClassName": "",
                              "className": "center wh100 white-space-normal px3",
                              "color": "white-denim",
                              "disabled": false,
                              "fullWidth": false,
                              "hover": "shadow",
                              "label": "Fudge",
                              "onClick": [Function],
                              "onMouseEnter": [Function],
                              "onMouseLeave": [Function],
                              "shadow": false,
                              "to": "",
                              "type": "button",
                              "variant": "square",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": "Salted Caramel",
                          "nodeType": "host",
                          "props": Object {
                            "children": <Button
                              childrenWrapperClassName=""
                              className="center wh100 white-space-normal px3"
                              color="white-denim"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label="Salted Caramel"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="square"
/>,
                            "className": "col-6 md-col-3 p1",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": null,
                              "childrenWrapperClassName": "",
                              "className": "center wh100 white-space-normal px3",
                              "color": "white-denim",
                              "disabled": false,
                              "fullWidth": false,
                              "hover": "shadow",
                              "label": "Salted Caramel",
                              "onClick": [Function],
                              "onMouseEnter": [Function],
                              "onMouseLeave": [Function],
                              "shadow": false,
                              "to": "",
                              "type": "button",
                              "variant": "square",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What kind of sprinkles would you like?
                     
</p>,
                  <p
                    className="center mb3 help-text-container-width"
>
                    Each ice cream cake is made with a topping of whipped cream and sprinkles.
</p>,
                  <div
                    className="form-container-width w100 flex flex-wrap justify-center"
>
                    
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "What kind of sprinkles would you like?",
                      " ",
                    ],
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": Array [
                    "What kind of sprinkles would you like?",
                    " ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                    "className": "center mb3 help-text-container-width",
                  },
                  "ref": null,
                  "rendered": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                    "className": "form-container-width w100 flex flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Would you like any additional toppings?
                     
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb1 white-space-normal center"
                                                                                >
                                                                                                    M&M's
                                                                                </p>
                                                                                <p
                                                                                                    className="white-space-normal light"
                                                                                >
                                                                                                    $1.00
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb1 white-space-normal center"
                                                                                >
                                                                                                    Rainbow sprinkles
                                                                                </p>
                                                                                <p
                                                                                                    className="white-space-normal light"
                                                                                >
                                                                                                    $1.00
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Would you like any additional toppings?",
                      " ",
                    ],
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Would you like any additional toppings?",
                    " ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb1 white-space-normal center"
                                                                        >
                                                                                                M&M's
                                                                        </p>
                                                                        <p
                                                                                                className="white-space-normal light"
                                                                        >
                                                                                                $1.00
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb1 white-space-normal center"
                                                                        >
                                                                                                Rainbow sprinkles
                                                                        </p>
                                                                        <p
                                                                                                className="white-space-normal light"
                                                                        >
                                                                                                $1.00
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb1 white-space-normal center"
                                                    >
                                                                              M&M's
                                                    </p>
                                                    <p
                                                                              className="white-space-normal light"
                                                    >
                                                                              $1.00
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb1 white-space-normal center"
                            >
                                                        M&M's
                            </p>
                            <p
                                                        className="white-space-normal light"
                            >
                                                        $1.00
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <p
                                className="mb1 white-space-normal center"
>
                                M&M's
</p>,
                              <p
                                className="white-space-normal light"
>
                                $1.00
</p>,
                            ],
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "M&M's",
                                "className": "mb1 white-space-normal center",
                              },
                              "ref": null,
                              "rendered": "M&M's",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "$1.00",
                                "className": "white-space-normal light",
                              },
                              "ref": null,
                              "rendered": "$1.00",
                              "type": "p",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb1 white-space-normal center"
                                                    >
                                                                              Rainbow sprinkles
                                                    </p>
                                                    <p
                                                                              className="white-space-normal light"
                                                    >
                                                                              $1.00
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb1 white-space-normal center"
                            >
                                                        Rainbow sprinkles
                            </p>
                            <p
                                                        className="white-space-normal light"
                            >
                                                        $1.00
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <p
                                className="mb1 white-space-normal center"
>
                                Rainbow sprinkles
</p>,
                              <p
                                className="white-space-normal light"
>
                                $1.00
</p>,
                            ],
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Rainbow sprinkles",
                                "className": "mb1 white-space-normal center",
                              },
                              "ref": null,
                              "rendered": "Rainbow sprinkles",
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "$1.00",
                                "className": "white-space-normal light",
                              },
                              "ref": null,
                              "rendered": "$1.00",
                              "type": "p",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="max-width-3 mx-auto flex flex-wrap px3"
>
              <div
                            className="col-12 md-col-7 flex flex-column mb4"
              >
                            <span
                                          className="bold big mb3"
                            >
                                          Summary
                            </span>
                            <span
                                          className="line-height small"
                            >
                                          Please fill out all fields.
                            </span>
              </div>
              <div
                            className="col-12 md-col-5 flex flex-column items-start"
              >
                            <span
                                          className="bold big mb3"
                            >
                                          Deposit total
                                          
                            </span>
                            <span
                                          className="line-height small"
                            >
                                          Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                            </span>
                            <Button
                                          childrenWrapperClassName=""
                                          className="mt3 inline-block w-auto"
                                          color="madison-blue"
                                          disabled={true}
                                          fullWidth={false}
                                          hover="shadow"
                                          label="Add to cart!"
                                          onClick={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          shadow={false}
                                          to=""
                                          type="button"
                                          variant="primary"
                            />
              </div>
</div>,
            "className": "w100 bg-pastel-peach py4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-12 md-col-7 flex flex-column mb4"
>
                  <span
                                    className="bold big mb3"
                  >
                                    Summary
                  </span>
                  <span
                                    className="line-height small"
                  >
                                    Please fill out all fields.
                  </span>
</div>,
                <div
                  className="col-12 md-col-5 flex flex-column items-start"
>
                  <span
                                    className="bold big mb3"
                  >
                                    Deposit total
                                    
                  </span>
                  <span
                                    className="line-height small"
                  >
                                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                  </span>
                  <Button
                                    childrenWrapperClassName=""
                                    className="mt3 inline-block w-auto"
                                    color="madison-blue"
                                    disabled={true}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Add to cart!"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary"
                  />
</div>,
              ],
              "className": "max-width-3 mx-auto flex flex-wrap px3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="bold big mb3"
>
                      Summary
</span>,
                    <span
                      className="line-height small"
>
                      Please fill out all fields.
</span>,
                  ],
                  "className": "col-12 md-col-7 flex flex-column mb4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Summary",
                      "className": "bold big mb3",
                    },
                    "ref": null,
                    "rendered": "Summary",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Please fill out all fields.",
                      "className": "line-height small",
                    },
                    "ref": null,
                    "rendered": "Please fill out all fields.",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="bold big mb3"
>
                      Deposit total
                      
</span>,
                    <span
                      className="line-height small"
>
                      Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
</span>,
                    <Button
                      childrenWrapperClassName=""
                      className="mt3 inline-block w-auto"
                      color="madison-blue"
                      disabled={true}
                      fullWidth={false}
                      hover="shadow"
                      label="Add to cart!"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      shadow={false}
                      to=""
                      type="button"
                      variant="primary"
/>,
                  ],
                  "className": "col-12 md-col-5 flex flex-column items-start",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Deposit total",
                        "",
                      ],
                      "className": "bold big mb3",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Deposit total",
                      "",
                    ],
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                      "className": "line-height small",
                    },
                    "ref": null,
                    "rendered": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": null,
                      "childrenWrapperClassName": "",
                      "className": "mt3 inline-block w-auto",
                      "color": "madison-blue",
                      "disabled": true,
                      "fullWidth": false,
                      "hover": "shadow",
                      "label": "Add to cart!",
                      "onClick": [Function],
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "shadow": false,
                      "to": "",
                      "type": "button",
                      "variant": "primary",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CakeRequestForm
    actions={
        Object {
            "addLineItems": [Function],
          }
    }
    cakeDeposit={Object {}}
    cakeFillings={Array []}
    cakeFlavors={Array []}
    cakeLocations={Object {}}
    cakeToppings={Array []}
    checkout={undefined}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex flex-wrap max-width-4 mx-auto my4 px2"
>
          <div
                    className="w100 mb4"
          >
                    <h1
                              className="w100 block-headline center mb3"
                    >
                              Order Your Custom Ice Cream Cake
                    </h1>
                    <h2
                              className="w100 big bold center text-peach mb3"
                    >
                              First, let's work out the details
                    </h2>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Where would you like to pick up your ice cream cake?
                    </p>
                    <Dropdown
                              bgColor=""
                              className="w100 text-container-width z-sub-nav"
                              color="peach"
                              fixedWidth={false}
                              label=""
                              name=""
                              onChange={[Function]}
                              options={Array []}
                              placeholder="Choose a Location"
                              selectClassName=""
                              shadow={false}
                              textAlignCenter={false}
                              textColor=""
                              value={null}
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              When would you like to pick up your ice cream cake?
                    </p>
                    <p
                              className="center mb3 help-text-container-width"
                    >
                              Please note, we need 48 hours minimum to create your custom ice cream cake.
                    </p>
                    <Button
                              childrenWrapperClassName="w100 justify-between"
                              className="w100 text-container-width relative z-1"
                              color="white-denim"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label=""
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="style-none"
                    >
                              <p
                                        className="bold text-dusty-gray"
                              >
                                        Choose a day
                              </p>
                              <Image
                                        alt=""
                                        bg={false}
                                        className="right"
                                        onImgLoad={[Function]}
                                        src="/assets/images/arrow-dropdown-active.svg"
                                        style={Object {}}
                              />
                              <DayPicker
                                        canChangeMonth={true}
                                        captionElement={
                                                  <Caption
                                                            classNames={
                                                                      Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                            }
                                                            localeUtils={
                                                                      Object {
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                                            }
                                                  />
                                        }
                                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                        classNames={
                                                  Object {
                                                            "body": "DayPicker-Body",
                                                            "caption": "DayPicker-Caption",
                                                            "container": "DayPicker",
                                                            "day": "DayPicker-Day",
                                                            "disabled": "disabled",
                                                            "footer": "DayPicker-Footer",
                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                            "month": "DayPicker-Month",
                                                            "months": "DayPicker-Months",
                                                            "navBar": "DayPicker-NavBar",
                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                            "outside": "outside",
                                                            "selected": "selected",
                                                            "today": "today",
                                                            "todayButton": "DayPicker-TodayButton",
                                                            "week": "DayPicker-Week",
                                                            "weekNumber": "DayPicker-WeekNumber",
                                                            "weekday": "DayPicker-Weekday",
                                                            "weekdays": "DayPicker-Weekdays",
                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                            "wrapper": "DayPicker-wrapper",
                                                          }
                                        }
                                        disabledDays={
                                                  Array [
                                                            undefined,
                                                            Object {
                                                              "before": 2018-12-07T22:03:12.792Z,
                                                            },
                                                          ]
                                        }
                                        enableOutsideDaysClick={true}
                                        fixedWeeks={false}
                                        initialMonth={2018-12-04T22:03:12.745Z}
                                        labels={
                                                  Object {
                                                            "nextMonth": "Next Month",
                                                            "previousMonth": "Previous Month",
                                                          }
                                        }
                                        locale="en"
                                        localeUtils={
                                                  Object {
                                                            "default": Object {
                                                              "formatDay": [Function],
                                                              "formatMonthTitle": [Function],
                                                              "formatWeekdayLong": [Function],
                                                              "formatWeekdayShort": [Function],
                                                              "getFirstDayOfWeek": [Function],
                                                              "getMonths": [Function],
                                                            },
                                                            "formatDay": [Function],
                                                            "formatMonthTitle": [Function],
                                                            "formatWeekdayLong": [Function],
                                                            "formatWeekdayShort": [Function],
                                                            "getFirstDayOfWeek": [Function],
                                                            "getMonths": [Function],
                                                          }
                                        }
                                        navbarElement={
                                                  <Navbar
                                                            classNames={
                                                                      Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                            }
                                                            dir="ltr"
                                                            labels={
                                                                      Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                                            }
                                                            showNextButton={true}
                                                            showPreviousButton={true}
                                                  />
                                        }
                                        numberOfMonths={1}
                                        onDayClick={[Function]}
                                        onMonthChange={[Function]}
                                        pagedNavigation={false}
                                        renderDay={[Function]}
                                        renderWeek={[Function]}
                                        reverseMonths={false}
                                        showOutsideDays={false}
                                        showWeekDays={true}
                                        showWeekNumbers={false}
                                        tabIndex={0}
                                        weekdayElement={<Weekday />}
                              />
                    </Button>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What time of day will you be picking up your ice cream cake?
                    </p>
                    <div
                              className="form-container-width w100 flex flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 md-col-3 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100 white-space-normal px2"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label="12pm to 5pm"
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        />
                              </div>
                              <div
                                        className="col-6 md-col-3 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100 white-space-normal px2"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label="5pm to closing"
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        />
                              </div>
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Who will be picking up your ice cream cake?
                    </p>
                    <TextField
                              address=""
                              className="w100 text-container-width"
                              max={null}
                              min={null}
                              name=""
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Name"
                              required={false}
                              type="text"
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What’s the best phone number to reach you?
                    </p>
                    <TextField
                              address=""
                              className="w100 text-container-width"
                              max={null}
                              min={null}
                              name=""
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Phone number"
                              required={false}
                              type="text"
                              variant="square"
                    />
          </div>
          <div
                    className="w100 mt2 mb4"
          >
                    <h2
                              className="w100 big bold center text-peach mb3"
                    >
                              Now, the fun stuff!
                    </h2>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Pick a size
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Pick your ice cream cake flavor combination!
                    </p>
                    <Button
                              childrenWrapperClassName=""
                              className="uppercase mb3 tout"
                              color="peach"
                              disabled={false}
                              fullWidth={false}
                              hover="shadow"
                              label="Need Help?"
                              onClick={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              shadow={false}
                              to=""
                              type="button"
                              variant="primary-small"
                    />
                    <p
                              className="bold big center mb2"
                    >
                              We recommend these
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              <div
                                        className="col-6 p1"
                              >
                                        <Button
                                                  childrenWrapperClassName=""
                                                  className="center wh100"
                                                  color="white-denim"
                                                  disabled={false}
                                                  fullWidth={false}
                                                  hover="shadow"
                                                  label=""
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  shadow={false}
                                                  to=""
                                                  type="button"
                                                  variant="square"
                                        >
                                                  <div
                                                            className="inline-flex flex-column w100 my2"
                                                  >
                                                            <p
                                                                      className="mb2 white-space-normal center"
                                                            >
                                                                      Build your own with your choice of flavors!
                                                            </p>
                                                  </div>
                                        </Button>
                              </div>
                    </div>
          </div>
          <div
                    className="w100 flex flex-column items-center undefined"
          >
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Choose your first flavor
                              </p>
                              <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width z-sub-nav"
                                        color="peach"
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                              />
                              <span
                                        className="mt2 text-peach"
                              >
                                        You must first select a location
                              </span>
                    </div>
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Choose your second flavor
                              </p>
                              <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width"
                                        color="peach"
                                        disabled={true}
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                              />
                              <span
                                        className="mt2 text-peach"
                              >
                                        You must first select a location
                              </span>
                    </div>
                    <div
                              className="w100 mb4 flex flex-column items-center"
                    >
                              <p
                                        className="bold big center mb2"
                              >
                                        Pick a base
                              </p>
                              <p
                                        className="center mb3 help-text-container-width"
                              >
                                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                              </p>
                              <div
                                        className="form-container-width w100 flex flex-wrap justify-center"
                              >
                                        
                              </div>
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              What kind of sprinkles would you like?
                               
                    </p>
                    <p
                              className="center mb3 help-text-container-width"
                    >
                              Each ice cream cake is made with a topping of whipped cream and sprinkles.
                    </p>
                    <div
                              className="form-container-width w100 flex flex-wrap justify-center"
                    >
                              
                    </div>
          </div>
          <div
                    className="w100 mb4 flex flex-column items-center"
          >
                    <p
                              className="bold big center mb2"
                    >
                              Would you like any additional toppings?
                               
                    </p>
                    <div
                              className="form-container-width w100 flex flex-row flex-wrap justify-center"
                    >
                              
                    </div>
          </div>
</div>,
        <div
          className="w100 bg-pastel-peach py4"
>
          <div
                    className="max-width-3 mx-auto flex flex-wrap px3"
          >
                    <div
                              className="col-12 md-col-7 flex flex-column mb4"
                    >
                              <span
                                        className="bold big mb3"
                              >
                                        Summary
                              </span>
                              <span
                                        className="line-height small"
                              >
                                        Please fill out all fields.
                              </span>
                    </div>
                    <div
                              className="col-12 md-col-5 flex flex-column items-start"
                    >
                              <span
                                        className="bold big mb3"
                              >
                                        Deposit total
                                        
                              </span>
                              <span
                                        className="line-height small"
                              >
                                        Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                              </span>
                              <Button
                                        childrenWrapperClassName=""
                                        className="mt3 inline-block w-auto"
                                        color="madison-blue"
                                        disabled={true}
                                        fullWidth={false}
                                        hover="shadow"
                                        label="Add to cart!"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        shadow={false}
                                        to=""
                                        type="button"
                                        variant="primary"
                              />
                    </div>
          </div>
</div>,
        null,
      ],
      "className": "flex flex-wrap my4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="w100 mb4"
>
              <h1
                            className="w100 block-headline center mb3"
              >
                            Order Your Custom Ice Cream Cake
              </h1>
              <h2
                            className="w100 big bold center text-peach mb3"
              >
                            First, let's work out the details
              </h2>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Where would you like to pick up your ice cream cake?
              </p>
              <Dropdown
                            bgColor=""
                            className="w100 text-container-width z-sub-nav"
                            color="peach"
                            fixedWidth={false}
                            label=""
                            name=""
                            onChange={[Function]}
                            options={Array []}
                            placeholder="Choose a Location"
                            selectClassName=""
                            shadow={false}
                            textAlignCenter={false}
                            textColor=""
                            value={null}
                            variant="square"
              />
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            When would you like to pick up your ice cream cake?
              </p>
              <p
                            className="center mb3 help-text-container-width"
              >
                            Please note, we need 48 hours minimum to create your custom ice cream cake.
              </p>
              <Button
                            childrenWrapperClassName="w100 justify-between"
                            className="w100 text-container-width relative z-1"
                            color="white-denim"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label=""
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="style-none"
              >
                            <p
                                          className="bold text-dusty-gray"
                            >
                                          Choose a day
                            </p>
                            <Image
                                          alt=""
                                          bg={false}
                                          className="right"
                                          onImgLoad={[Function]}
                                          src="/assets/images/arrow-dropdown-active.svg"
                                          style={Object {}}
                            />
                            <DayPicker
                                          canChangeMonth={true}
                                          captionElement={
                                                        <Caption
                                                                      classNames={
                                                                                    Object {
                                                                                                  "body": "DayPicker-Body",
                                                                                                  "caption": "DayPicker-Caption",
                                                                                                  "container": "DayPicker",
                                                                                                  "day": "DayPicker-Day",
                                                                                                  "disabled": "disabled",
                                                                                                  "footer": "DayPicker-Footer",
                                                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                  "month": "DayPicker-Month",
                                                                                                  "months": "DayPicker-Months",
                                                                                                  "navBar": "DayPicker-NavBar",
                                                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                  "outside": "outside",
                                                                                                  "selected": "selected",
                                                                                                  "today": "today",
                                                                                                  "todayButton": "DayPicker-TodayButton",
                                                                                                  "week": "DayPicker-Week",
                                                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                                                  "weekday": "DayPicker-Weekday",
                                                                                                  "weekdays": "DayPicker-Weekdays",
                                                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                  "wrapper": "DayPicker-wrapper",
                                                                                                }
                                                                      }
                                                                      localeUtils={
                                                                                    Object {
                                                                                                  "formatDay": [Function],
                                                                                                  "formatMonthTitle": [Function],
                                                                                                  "formatWeekdayLong": [Function],
                                                                                                  "formatWeekdayShort": [Function],
                                                                                                  "getFirstDayOfWeek": [Function],
                                                                                                  "getMonths": [Function],
                                                                                                }
                                                                      }
                                                        />
                                          }
                                          className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                          classNames={
                                                        Object {
                                                                      "body": "DayPicker-Body",
                                                                      "caption": "DayPicker-Caption",
                                                                      "container": "DayPicker",
                                                                      "day": "DayPicker-Day",
                                                                      "disabled": "disabled",
                                                                      "footer": "DayPicker-Footer",
                                                                      "interactionDisabled": "DayPicker--interactionDisabled",
                                                                      "month": "DayPicker-Month",
                                                                      "months": "DayPicker-Months",
                                                                      "navBar": "DayPicker-NavBar",
                                                                      "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                      "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                      "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                      "outside": "outside",
                                                                      "selected": "selected",
                                                                      "today": "today",
                                                                      "todayButton": "DayPicker-TodayButton",
                                                                      "week": "DayPicker-Week",
                                                                      "weekNumber": "DayPicker-WeekNumber",
                                                                      "weekday": "DayPicker-Weekday",
                                                                      "weekdays": "DayPicker-Weekdays",
                                                                      "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                      "wrapper": "DayPicker-wrapper",
                                                                    }
                                          }
                                          disabledDays={
                                                        Array [
                                                                      undefined,
                                                                      Object {
                                                                        "before": 2018-12-07T22:03:12.792Z,
                                                                      },
                                                                    ]
                                          }
                                          enableOutsideDaysClick={true}
                                          fixedWeeks={false}
                                          initialMonth={2018-12-04T22:03:12.745Z}
                                          labels={
                                                        Object {
                                                                      "nextMonth": "Next Month",
                                                                      "previousMonth": "Previous Month",
                                                                    }
                                          }
                                          locale="en"
                                          localeUtils={
                                                        Object {
                                                                      "default": Object {
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      },
                                                                      "formatDay": [Function],
                                                                      "formatMonthTitle": [Function],
                                                                      "formatWeekdayLong": [Function],
                                                                      "formatWeekdayShort": [Function],
                                                                      "getFirstDayOfWeek": [Function],
                                                                      "getMonths": [Function],
                                                                    }
                                          }
                                          navbarElement={
                                                        <Navbar
                                                                      classNames={
                                                                                    Object {
                                                                                                  "body": "DayPicker-Body",
                                                                                                  "caption": "DayPicker-Caption",
                                                                                                  "container": "DayPicker",
                                                                                                  "day": "DayPicker-Day",
                                                                                                  "disabled": "disabled",
                                                                                                  "footer": "DayPicker-Footer",
                                                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                  "month": "DayPicker-Month",
                                                                                                  "months": "DayPicker-Months",
                                                                                                  "navBar": "DayPicker-NavBar",
                                                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                  "outside": "outside",
                                                                                                  "selected": "selected",
                                                                                                  "today": "today",
                                                                                                  "todayButton": "DayPicker-TodayButton",
                                                                                                  "week": "DayPicker-Week",
                                                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                                                  "weekday": "DayPicker-Weekday",
                                                                                                  "weekdays": "DayPicker-Weekdays",
                                                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                  "wrapper": "DayPicker-wrapper",
                                                                                                }
                                                                      }
                                                                      dir="ltr"
                                                                      labels={
                                                                                    Object {
                                                                                                  "nextMonth": "Next Month",
                                                                                                  "previousMonth": "Previous Month",
                                                                                                }
                                                                      }
                                                                      showNextButton={true}
                                                                      showPreviousButton={true}
                                                        />
                                          }
                                          numberOfMonths={1}
                                          onDayClick={[Function]}
                                          onMonthChange={[Function]}
                                          pagedNavigation={false}
                                          renderDay={[Function]}
                                          renderWeek={[Function]}
                                          reverseMonths={false}
                                          showOutsideDays={false}
                                          showWeekDays={true}
                                          showWeekNumbers={false}
                                          tabIndex={0}
                                          weekdayElement={<Weekday />}
                            />
              </Button>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What time of day will you be picking up your ice cream cake?
              </p>
              <div
                            className="form-container-width w100 flex flex-wrap justify-center"
              >
                            <div
                                          className="col-6 md-col-3 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px2"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="12pm to 5pm"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          />
                            </div>
                            <div
                                          className="col-6 md-col-3 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100 white-space-normal px2"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label="5pm to closing"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          />
                            </div>
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Who will be picking up your ice cream cake?
              </p>
              <TextField
                            address=""
                            className="w100 text-container-width"
                            max={null}
                            min={null}
                            name=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Name"
                            required={false}
                            type="text"
                            variant="square"
              />
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What’s the best phone number to reach you?
              </p>
              <TextField
                            address=""
                            className="w100 text-container-width"
                            max={null}
                            min={null}
                            name=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            placeholder="Phone number"
                            required={false}
                            type="text"
                            variant="square"
              />
</div>,
            <div
              className="w100 mt2 mb4"
>
              <h2
                            className="w100 big bold center text-peach mb3"
              >
                            Now, the fun stuff!
              </h2>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Pick a size
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Pick your ice cream cake flavor combination!
              </p>
              <Button
                            childrenWrapperClassName=""
                            className="uppercase mb3 tout"
                            color="peach"
                            disabled={false}
                            fullWidth={false}
                            hover="shadow"
                            label="Need Help?"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            shadow={false}
                            to=""
                            type="button"
                            variant="primary-small"
              />
              <p
                            className="bold big center mb2"
              >
                            We recommend these
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            <div
                                          className="col-6 p1"
                            >
                                          <Button
                                                        childrenWrapperClassName=""
                                                        className="center wh100"
                                                        color="white-denim"
                                                        disabled={false}
                                                        fullWidth={false}
                                                        hover="shadow"
                                                        label=""
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        shadow={false}
                                                        to=""
                                                        type="button"
                                                        variant="square"
                                          >
                                                        <div
                                                                      className="inline-flex flex-column w100 my2"
                                                        >
                                                                      <p
                                                                                    className="mb2 white-space-normal center"
                                                                      >
                                                                                    Build your own with your choice of flavors!
                                                                      </p>
                                                        </div>
                                          </Button>
                            </div>
              </div>
</div>,
            <div
              className="w100 flex flex-column items-center undefined"
>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Choose your first flavor
                            </p>
                            <Dropdown
                                          bgColor=""
                                          className="w100 text-container-width z-sub-nav"
                                          color="peach"
                                          fixedWidth={false}
                                          label=""
                                          name=""
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="Choose a Flavor"
                                          selectClassName=""
                                          shadow={false}
                                          textAlignCenter={false}
                                          textColor=""
                                          value={null}
                                          variant="square"
                            />
                            <span
                                          className="mt2 text-peach"
                            >
                                          You must first select a location
                            </span>
              </div>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Choose your second flavor
                            </p>
                            <Dropdown
                                          bgColor=""
                                          className="w100 text-container-width"
                                          color="peach"
                                          disabled={true}
                                          fixedWidth={false}
                                          label=""
                                          name=""
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="Choose a Flavor"
                                          selectClassName=""
                                          shadow={false}
                                          textAlignCenter={false}
                                          textColor=""
                                          value={null}
                                          variant="square"
                            />
                            <span
                                          className="mt2 text-peach"
                            >
                                          You must first select a location
                            </span>
              </div>
              <div
                            className="w100 mb4 flex flex-column items-center"
              >
                            <p
                                          className="bold big center mb2"
                            >
                                          Pick a base
                            </p>
                            <p
                                          className="center mb3 help-text-container-width"
                            >
                                          All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                            </p>
                            <div
                                          className="form-container-width w100 flex flex-wrap justify-center"
                            >
                                          
                            </div>
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            What kind of sprinkles would you like?
                             
              </p>
              <p
                            className="center mb3 help-text-container-width"
              >
                            Each ice cream cake is made with a topping of whipped cream and sprinkles.
              </p>
              <div
                            className="form-container-width w100 flex flex-wrap justify-center"
              >
                            
              </div>
</div>,
            <div
              className="w100 mb4 flex flex-column items-center"
>
              <p
                            className="bold big center mb2"
              >
                            Would you like any additional toppings?
                             
              </p>
              <div
                            className="form-container-width w100 flex flex-row flex-wrap justify-center"
              >
                            
              </div>
</div>,
          ],
          "className": "flex flex-wrap max-width-4 mx-auto my4 px2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="w100 block-headline center mb3"
>
                  Order Your Custom Ice Cream Cake
</h1>,
                <h2
                  className="w100 big bold center text-peach mb3"
>
                  First, let's work out the details
</h2>,
              ],
              "className": "w100 mb4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Order Your Custom Ice Cream Cake",
                  "className": "w100 block-headline center mb3",
                },
                "ref": null,
                "rendered": "Order Your Custom Ice Cream Cake",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "First, let's work out the details",
                  "className": "w100 big bold center text-peach mb3",
                },
                "ref": null,
                "rendered": "First, let's work out the details",
                "type": "h2",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Where would you like to pick up your ice cream cake?
</p>,
                <Dropdown
                  bgColor=""
                  className="w100 text-container-width z-sub-nav"
                  color="peach"
                  fixedWidth={false}
                  label=""
                  name=""
                  onChange={[Function]}
                  options={Array []}
                  placeholder="Choose a Location"
                  selectClassName=""
                  shadow={false}
                  textAlignCenter={false}
                  textColor=""
                  value={null}
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Where would you like to pick up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Where would you like to pick up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bgColor": "",
                  "className": "w100 text-container-width z-sub-nav",
                  "color": "peach",
                  "fixedWidth": false,
                  "label": "",
                  "name": "",
                  "onChange": [Function],
                  "options": Array [],
                  "placeholder": "Choose a Location",
                  "selectClassName": "",
                  "shadow": false,
                  "textAlignCenter": false,
                  "textColor": "",
                  "value": null,
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  When would you like to pick up your ice cream cake?
</p>,
                <p
                  className="center mb3 help-text-container-width"
>
                  Please note, we need 48 hours minimum to create your custom ice cream cake.
</p>,
                <Button
                  childrenWrapperClassName="w100 justify-between"
                  className="w100 text-container-width relative z-1"
                  color="white-denim"
                  disabled={false}
                  fullWidth={false}
                  hover="shadow"
                  label=""
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  shadow={false}
                  to=""
                  type="button"
                  variant="style-none"
>
                  <p
                                    className="bold text-dusty-gray"
                  >
                                    Choose a day
                  </p>
                  <Image
                                    alt=""
                                    bg={false}
                                    className="right"
                                    onImgLoad={[Function]}
                                    src="/assets/images/arrow-dropdown-active.svg"
                                    style={Object {}}
                  />
                  <DayPicker
                                    canChangeMonth={true}
                                    captionElement={
                                                      <Caption
                                                                        classNames={
                                                                                          Object {
                                                                                                            "body": "DayPicker-Body",
                                                                                                            "caption": "DayPicker-Caption",
                                                                                                            "container": "DayPicker",
                                                                                                            "day": "DayPicker-Day",
                                                                                                            "disabled": "disabled",
                                                                                                            "footer": "DayPicker-Footer",
                                                                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                            "month": "DayPicker-Month",
                                                                                                            "months": "DayPicker-Months",
                                                                                                            "navBar": "DayPicker-NavBar",
                                                                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                            "outside": "outside",
                                                                                                            "selected": "selected",
                                                                                                            "today": "today",
                                                                                                            "todayButton": "DayPicker-TodayButton",
                                                                                                            "week": "DayPicker-Week",
                                                                                                            "weekNumber": "DayPicker-WeekNumber",
                                                                                                            "weekday": "DayPicker-Weekday",
                                                                                                            "weekdays": "DayPicker-Weekdays",
                                                                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                            "wrapper": "DayPicker-wrapper",
                                                                                                          }
                                                                        }
                                                                        localeUtils={
                                                                                          Object {
                                                                                                            "formatDay": [Function],
                                                                                                            "formatMonthTitle": [Function],
                                                                                                            "formatWeekdayLong": [Function],
                                                                                                            "formatWeekdayShort": [Function],
                                                                                                            "getFirstDayOfWeek": [Function],
                                                                                                            "getMonths": [Function],
                                                                                                          }
                                                                        }
                                                      />
                                    }
                                    className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                    classNames={
                                                      Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                                    }
                                    disabledDays={
                                                      Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.792Z,
                                                                        },
                                                                      ]
                                    }
                                    enableOutsideDaysClick={true}
                                    fixedWeeks={false}
                                    initialMonth={2018-12-04T22:03:12.745Z}
                                    labels={
                                                      Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                                    }
                                    locale="en"
                                    localeUtils={
                                                      Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                                    }
                                    navbarElement={
                                                      <Navbar
                                                                        classNames={
                                                                                          Object {
                                                                                                            "body": "DayPicker-Body",
                                                                                                            "caption": "DayPicker-Caption",
                                                                                                            "container": "DayPicker",
                                                                                                            "day": "DayPicker-Day",
                                                                                                            "disabled": "disabled",
                                                                                                            "footer": "DayPicker-Footer",
                                                                                                            "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                            "month": "DayPicker-Month",
                                                                                                            "months": "DayPicker-Months",
                                                                                                            "navBar": "DayPicker-NavBar",
                                                                                                            "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                            "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                            "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                            "outside": "outside",
                                                                                                            "selected": "selected",
                                                                                                            "today": "today",
                                                                                                            "todayButton": "DayPicker-TodayButton",
                                                                                                            "week": "DayPicker-Week",
                                                                                                            "weekNumber": "DayPicker-WeekNumber",
                                                                                                            "weekday": "DayPicker-Weekday",
                                                                                                            "weekdays": "DayPicker-Weekdays",
                                                                                                            "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                            "wrapper": "DayPicker-wrapper",
                                                                                                          }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                          Object {
                                                                                                            "nextMonth": "Next Month",
                                                                                                            "previousMonth": "Previous Month",
                                                                                                          }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                      />
                                    }
                                    numberOfMonths={1}
                                    onDayClick={[Function]}
                                    onMonthChange={[Function]}
                                    pagedNavigation={false}
                                    renderDay={[Function]}
                                    renderWeek={[Function]}
                                    reverseMonths={false}
                                    showOutsideDays={false}
                                    showWeekDays={true}
                                    showWeekNumbers={false}
                                    tabIndex={0}
                                    weekdayElement={<Weekday />}
                  />
</Button>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "When would you like to pick up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "When would you like to pick up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                  "className": "center mb3 help-text-container-width",
                },
                "ref": null,
                "rendered": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold text-dusty-gray"
>
                      Choose a day
</p>,
                    <Image
                      alt=""
                      bg={false}
                      className="right"
                      onImgLoad={[Function]}
                      src="/assets/images/arrow-dropdown-active.svg"
                      style={Object {}}
/>,
                    <DayPicker
                      canChangeMonth={true}
                      captionElement={
                                            <Caption
                                                                  classNames={
                                                                                        Object {
                                                                                                              "body": "DayPicker-Body",
                                                                                                              "caption": "DayPicker-Caption",
                                                                                                              "container": "DayPicker",
                                                                                                              "day": "DayPicker-Day",
                                                                                                              "disabled": "disabled",
                                                                                                              "footer": "DayPicker-Footer",
                                                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                              "month": "DayPicker-Month",
                                                                                                              "months": "DayPicker-Months",
                                                                                                              "navBar": "DayPicker-NavBar",
                                                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                              "outside": "outside",
                                                                                                              "selected": "selected",
                                                                                                              "today": "today",
                                                                                                              "todayButton": "DayPicker-TodayButton",
                                                                                                              "week": "DayPicker-Week",
                                                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                                                              "weekday": "DayPicker-Weekday",
                                                                                                              "weekdays": "DayPicker-Weekdays",
                                                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                              "wrapper": "DayPicker-wrapper",
                                                                                                            }
                                                                  }
                                                                  localeUtils={
                                                                                        Object {
                                                                                                              "formatDay": [Function],
                                                                                                              "formatMonthTitle": [Function],
                                                                                                              "formatWeekdayLong": [Function],
                                                                                                              "formatWeekdayShort": [Function],
                                                                                                              "getFirstDayOfWeek": [Function],
                                                                                                              "getMonths": [Function],
                                                                                                            }
                                                                  }
                                            />
                      }
                      className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                      classNames={
                                            Object {
                                                                  "body": "DayPicker-Body",
                                                                  "caption": "DayPicker-Caption",
                                                                  "container": "DayPicker",
                                                                  "day": "DayPicker-Day",
                                                                  "disabled": "disabled",
                                                                  "footer": "DayPicker-Footer",
                                                                  "interactionDisabled": "DayPicker--interactionDisabled",
                                                                  "month": "DayPicker-Month",
                                                                  "months": "DayPicker-Months",
                                                                  "navBar": "DayPicker-NavBar",
                                                                  "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                  "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                  "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                  "outside": "outside",
                                                                  "selected": "selected",
                                                                  "today": "today",
                                                                  "todayButton": "DayPicker-TodayButton",
                                                                  "week": "DayPicker-Week",
                                                                  "weekNumber": "DayPicker-WeekNumber",
                                                                  "weekday": "DayPicker-Weekday",
                                                                  "weekdays": "DayPicker-Weekdays",
                                                                  "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                  "wrapper": "DayPicker-wrapper",
                                                                }
                      }
                      disabledDays={
                                            Array [
                                                                  undefined,
                                                                  Object {
                                                                    "before": 2018-12-07T22:03:12.792Z,
                                                                  },
                                                                ]
                      }
                      enableOutsideDaysClick={true}
                      fixedWeeks={false}
                      initialMonth={2018-12-04T22:03:12.745Z}
                      labels={
                                            Object {
                                                                  "nextMonth": "Next Month",
                                                                  "previousMonth": "Previous Month",
                                                                }
                      }
                      locale="en"
                      localeUtils={
                                            Object {
                                                                  "default": Object {
                                                                    "formatDay": [Function],
                                                                    "formatMonthTitle": [Function],
                                                                    "formatWeekdayLong": [Function],
                                                                    "formatWeekdayShort": [Function],
                                                                    "getFirstDayOfWeek": [Function],
                                                                    "getMonths": [Function],
                                                                  },
                                                                  "formatDay": [Function],
                                                                  "formatMonthTitle": [Function],
                                                                  "formatWeekdayLong": [Function],
                                                                  "formatWeekdayShort": [Function],
                                                                  "getFirstDayOfWeek": [Function],
                                                                  "getMonths": [Function],
                                                                }
                      }
                      navbarElement={
                                            <Navbar
                                                                  classNames={
                                                                                        Object {
                                                                                                              "body": "DayPicker-Body",
                                                                                                              "caption": "DayPicker-Caption",
                                                                                                              "container": "DayPicker",
                                                                                                              "day": "DayPicker-Day",
                                                                                                              "disabled": "disabled",
                                                                                                              "footer": "DayPicker-Footer",
                                                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                              "month": "DayPicker-Month",
                                                                                                              "months": "DayPicker-Months",
                                                                                                              "navBar": "DayPicker-NavBar",
                                                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                              "outside": "outside",
                                                                                                              "selected": "selected",
                                                                                                              "today": "today",
                                                                                                              "todayButton": "DayPicker-TodayButton",
                                                                                                              "week": "DayPicker-Week",
                                                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                                                              "weekday": "DayPicker-Weekday",
                                                                                                              "weekdays": "DayPicker-Weekdays",
                                                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                              "wrapper": "DayPicker-wrapper",
                                                                                                            }
                                                                  }
                                                                  dir="ltr"
                                                                  labels={
                                                                                        Object {
                                                                                                              "nextMonth": "Next Month",
                                                                                                              "previousMonth": "Previous Month",
                                                                                                            }
                                                                  }
                                                                  showNextButton={true}
                                                                  showPreviousButton={true}
                                            />
                      }
                      numberOfMonths={1}
                      onDayClick={[Function]}
                      onMonthChange={[Function]}
                      pagedNavigation={false}
                      renderDay={[Function]}
                      renderWeek={[Function]}
                      reverseMonths={false}
                      showOutsideDays={false}
                      showWeekDays={true}
                      showWeekNumbers={false}
                      tabIndex={0}
                      weekdayElement={<Weekday />}
/>,
                  ],
                  "childrenWrapperClassName": "w100 justify-between",
                  "className": "w100 text-container-width relative z-1",
                  "color": "white-denim",
                  "disabled": false,
                  "fullWidth": false,
                  "hover": "shadow",
                  "label": "",
                  "onClick": [Function],
                  "onMouseEnter": [Function],
                  "onMouseLeave": [Function],
                  "shadow": false,
                  "to": "",
                  "type": "button",
                  "variant": "style-none",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose a day",
                      "className": "bold text-dusty-gray",
                    },
                    "ref": null,
                    "rendered": "Choose a day",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "",
                      "bg": false,
                      "children": null,
                      "className": "right",
                      "onImgLoad": [Function],
                      "src": "/assets/images/arrow-dropdown-active.svg",
                      "style": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "canChangeMonth": true,
                      "captionElement": <Caption
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        localeUtils={
                                                Object {
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                        }
/>,
                      "className": "absolute t0 l0 mt4 bg-white text-madison-blue hide",
                      "classNames": Object {
                        "body": "DayPicker-Body",
                        "caption": "DayPicker-Caption",
                        "container": "DayPicker",
                        "day": "DayPicker-Day",
                        "disabled": "disabled",
                        "footer": "DayPicker-Footer",
                        "interactionDisabled": "DayPicker--interactionDisabled",
                        "month": "DayPicker-Month",
                        "months": "DayPicker-Months",
                        "navBar": "DayPicker-NavBar",
                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                        "outside": "outside",
                        "selected": "selected",
                        "today": "today",
                        "todayButton": "DayPicker-TodayButton",
                        "week": "DayPicker-Week",
                        "weekNumber": "DayPicker-WeekNumber",
                        "weekday": "DayPicker-Weekday",
                        "weekdays": "DayPicker-Weekdays",
                        "weekdaysRow": "DayPicker-WeekdaysRow",
                        "wrapper": "DayPicker-wrapper",
                      },
                      "disabledDays": Array [
                        undefined,
                        Object {
                          "before": 2018-12-07T22:03:12.792Z,
                        },
                      ],
                      "enableOutsideDaysClick": true,
                      "fixedWeeks": false,
                      "initialMonth": 2018-12-04T22:03:12.745Z,
                      "labels": Object {
                        "nextMonth": "Next Month",
                        "previousMonth": "Previous Month",
                      },
                      "locale": "en",
                      "localeUtils": Object {
                        "default": Object {
                          "formatDay": [Function],
                          "formatMonthTitle": [Function],
                          "formatWeekdayLong": [Function],
                          "formatWeekdayShort": [Function],
                          "getFirstDayOfWeek": [Function],
                          "getMonths": [Function],
                        },
                        "formatDay": [Function],
                        "formatMonthTitle": [Function],
                        "formatWeekdayLong": [Function],
                        "formatWeekdayShort": [Function],
                        "getFirstDayOfWeek": [Function],
                        "getMonths": [Function],
                      },
                      "navbarElement": <Navbar
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        dir="ltr"
                        labels={
                                                Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                        }
                        showNextButton={true}
                        showPreviousButton={true}
/>,
                      "numberOfMonths": 1,
                      "onDayClick": [Function],
                      "onMonthChange": [Function],
                      "pagedNavigation": false,
                      "renderDay": [Function],
                      "renderWeek": [Function],
                      "reverseMonths": false,
                      "showOutsideDays": false,
                      "showWeekDays": true,
                      "showWeekNumbers": false,
                      "tabIndex": 0,
                      "weekdayElement": <Weekday />,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What time of day will you be picking up your ice cream cake?
</p>,
                <div
                  className="form-container-width w100 flex flex-wrap justify-center"
>
                  <div
                                    className="col-6 md-col-3 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100 white-space-normal px2"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label="12pm to 5pm"
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    />
                  </div>
                  <div
                                    className="col-6 md-col-3 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100 white-space-normal px2"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label="5pm to closing"
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    />
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "What time of day will you be picking up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "What time of day will you be picking up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-6 md-col-3 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100 white-space-normal px2"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label="12pm to 5pm"
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      />
</div>,
                    <div
                      className="col-6 md-col-3 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100 white-space-normal px2"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label="5pm to closing"
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      />
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "defaultTimeSlot1",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100 white-space-normal px2"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="12pm to 5pm"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
/>,
                      "className": "col-6 md-col-3 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": null,
                        "childrenWrapperClassName": "",
                        "className": "center wh100 white-space-normal px2",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "12pm to 5pm",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "defaultTimeSlot2",
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100 white-space-normal px2"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label="5pm to closing"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
/>,
                      "className": "col-6 md-col-3 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": null,
                        "childrenWrapperClassName": "",
                        "className": "center wh100 white-space-normal px2",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "5pm to closing",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Who will be picking up your ice cream cake?
</p>,
                <TextField
                  address=""
                  className="w100 text-container-width"
                  max={null}
                  min={null}
                  name=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Name"
                  required={false}
                  type="text"
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Who will be picking up your ice cream cake?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Who will be picking up your ice cream cake?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "address": "",
                  "className": "w100 text-container-width",
                  "max": null,
                  "min": null,
                  "name": "",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "placeholder": "Name",
                  "required": false,
                  "type": "text",
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What’s the best phone number to reach you?
</p>,
                <TextField
                  address=""
                  className="w100 text-container-width"
                  max={null}
                  min={null}
                  name=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Phone number"
                  required={false}
                  type="text"
                  variant="square"
/>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "What’s the best phone number to reach you?",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "What’s the best phone number to reach you?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "address": "",
                  "className": "w100 text-container-width",
                  "max": null,
                  "min": null,
                  "name": "",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "placeholder": "Phone number",
                  "required": false,
                  "type": "text",
                  "variant": "square",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h2
                className="w100 big bold center text-peach mb3"
>
                Now, the fun stuff!
</h2>,
              "className": "w100 mt2 mb4",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Now, the fun stuff!",
                "className": "w100 big bold center text-peach mb3",
              },
              "ref": null,
              "rendered": "Now, the fun stuff!",
              "type": "h2",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Pick a size
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pick a size",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Pick a size",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Pick your ice cream cake flavor combination!
</p>,
                <Button
                  childrenWrapperClassName=""
                  className="uppercase mb3 tout"
                  color="peach"
                  disabled={false}
                  fullWidth={false}
                  hover="shadow"
                  label="Need Help?"
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  shadow={false}
                  to=""
                  type="button"
                  variant="primary-small"
/>,
                <p
                  className="bold big center mb2"
>
                  We recommend these
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  <div
                                    className="col-6 p1"
                  >
                                    <Button
                                                      childrenWrapperClassName=""
                                                      className="center wh100"
                                                      color="white-denim"
                                                      disabled={false}
                                                      fullWidth={false}
                                                      hover="shadow"
                                                      label=""
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      shadow={false}
                                                      to=""
                                                      type="button"
                                                      variant="square"
                                    >
                                                      <div
                                                                        className="inline-flex flex-column w100 my2"
                                                      >
                                                                        <p
                                                                                          className="mb2 white-space-normal center"
                                                                        >
                                                                                          Build your own with your choice of flavors!
                                                                        </p>
                                                      </div>
                                    </Button>
                  </div>
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pick your ice cream cake flavor combination!",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "Pick your ice cream cake flavor combination!",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": null,
                  "childrenWrapperClassName": "",
                  "className": "uppercase mb3 tout",
                  "color": "peach",
                  "disabled": false,
                  "fullWidth": false,
                  "hover": "shadow",
                  "label": "Need Help?",
                  "onClick": [Function],
                  "onMouseEnter": [Function],
                  "onMouseLeave": [Function],
                  "shadow": false,
                  "to": "",
                  "type": "button",
                  "variant": "primary-small",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "We recommend these",
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": "We recommend these",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    Array [],
                    <div
                      className="col-6 p1"
>
                      <Button
                                            childrenWrapperClassName=""
                                            className="center wh100"
                                            color="white-denim"
                                            disabled={false}
                                            fullWidth={false}
                                            hover="shadow"
                                            label=""
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            shadow={false}
                                            to=""
                                            type="button"
                                            variant="square"
                      >
                                            <div
                                                                  className="inline-flex flex-column w100 my2"
                                            >
                                                                  <p
                                                                                        className="mb2 white-space-normal center"
                                                                  >
                                                                                        Build your own with your choice of flavors!
                                                                  </p>
                                            </div>
                      </Button>
</div>,
                  ],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Button
                        childrenWrapperClassName=""
                        className="center wh100"
                        color="white-denim"
                        disabled={false}
                        fullWidth={false}
                        hover="shadow"
                        label=""
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        shadow={false}
                        to=""
                        type="button"
                        variant="square"
>
                        <div
                                                className="inline-flex flex-column w100 my2"
                        >
                                                <p
                                                                        className="mb2 white-space-normal center"
                                                >
                                                                        Build your own with your choice of flavors!
                                                </p>
                        </div>
</Button>,
                      "className": "col-6 p1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <div
                          className="inline-flex flex-column w100 my2"
>
                          <p
                                                    className="mb2 white-space-normal center"
                          >
                                                    Build your own with your choice of flavors!
                          </p>
</div>,
                        "childrenWrapperClassName": "",
                        "className": "center wh100",
                        "color": "white-denim",
                        "disabled": false,
                        "fullWidth": false,
                        "hover": "shadow",
                        "label": "",
                        "onClick": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "shadow": false,
                        "to": "",
                        "type": "button",
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="mb2 white-space-normal center"
>
                            Build your own with your choice of flavors!
</p>,
                          "className": "inline-flex flex-column w100 my2",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Build your own with your choice of flavors!",
                            "className": "mb2 white-space-normal center",
                          },
                          "ref": null,
                          "rendered": "Build your own with your choice of flavors!",
                          "type": "p",
                        },
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Choose your first flavor
                  </p>
                  <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width z-sub-nav"
                                    color="peach"
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={Array []}
                                    placeholder="Choose a Flavor"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                  />
                  <span
                                    className="mt2 text-peach"
                  >
                                    You must first select a location
                  </span>
</div>,
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Choose your second flavor
                  </p>
                  <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width"
                                    color="peach"
                                    disabled={true}
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={Array []}
                                    placeholder="Choose a Flavor"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                  />
                  <span
                                    className="mt2 text-peach"
                  >
                                    You must first select a location
                  </span>
</div>,
                <div
                  className="w100 mb4 flex flex-column items-center"
>
                  <p
                                    className="bold big center mb2"
                  >
                                    Pick a base
                  </p>
                  <p
                                    className="center mb3 help-text-container-width"
                  >
                                    All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                  </p>
                  <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                  >
                                    
                  </div>
</div>,
              ],
              "className": "w100 flex flex-column items-center undefined",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Choose your first flavor
</p>,
                    <Dropdown
                      bgColor=""
                      className="w100 text-container-width z-sub-nav"
                      color="peach"
                      fixedWidth={false}
                      label=""
                      name=""
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Choose a Flavor"
                      selectClassName=""
                      shadow={false}
                      textAlignCenter={false}
                      textColor=""
                      value={null}
                      variant="square"
/>,
                    <span
                      className="mt2 text-peach"
>
                      You must first select a location
</span>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose your first flavor",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Choose your first flavor",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bgColor": "",
                      "className": "w100 text-container-width z-sub-nav",
                      "color": "peach",
                      "fixedWidth": false,
                      "label": "",
                      "name": "",
                      "onChange": [Function],
                      "options": Array [],
                      "placeholder": "Choose a Flavor",
                      "selectClassName": "",
                      "shadow": false,
                      "textAlignCenter": false,
                      "textColor": "",
                      "value": null,
                      "variant": "square",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "You must first select a location",
                      "className": "mt2 text-peach",
                    },
                    "ref": null,
                    "rendered": "You must first select a location",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Choose your second flavor
</p>,
                    <Dropdown
                      bgColor=""
                      className="w100 text-container-width"
                      color="peach"
                      disabled={true}
                      fixedWidth={false}
                      label=""
                      name=""
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Choose a Flavor"
                      selectClassName=""
                      shadow={false}
                      textAlignCenter={false}
                      textColor=""
                      value={null}
                      variant="square"
/>,
                    <span
                      className="mt2 text-peach"
>
                      You must first select a location
</span>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Choose your second flavor",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Choose your second flavor",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bgColor": "",
                      "className": "w100 text-container-width",
                      "color": "peach",
                      "disabled": true,
                      "fixedWidth": false,
                      "label": "",
                      "name": "",
                      "onChange": [Function],
                      "options": Array [],
                      "placeholder": "Choose a Flavor",
                      "selectClassName": "",
                      "shadow": false,
                      "textAlignCenter": false,
                      "textColor": "",
                      "value": null,
                      "variant": "square",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "You must first select a location",
                      "className": "mt2 text-peach",
                    },
                    "ref": null,
                    "rendered": "You must first select a location",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="bold big center mb2"
>
                      Pick a base
</p>,
                    <p
                      className="center mb3 help-text-container-width"
>
                      All ice cream cakes come with a layer of fudge in between the layers of ice cream.
</p>,
                    <div
                      className="form-container-width w100 flex flex-wrap justify-center"
>
                      
</div>,
                  ],
                  "className": "w100 mb4 flex flex-column items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pick a base",
                      "className": "bold big center mb2",
                    },
                    "ref": null,
                    "rendered": "Pick a base",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                      "className": "center mb3 help-text-container-width",
                    },
                    "ref": null,
                    "rendered": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [],
                      "className": "form-container-width w100 flex flex-wrap justify-center",
                    },
                    "ref": null,
                    "rendered": Array [],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  What kind of sprinkles would you like?
                   
</p>,
                <p
                  className="center mb3 help-text-container-width"
>
                  Each ice cream cake is made with a topping of whipped cream and sprinkles.
</p>,
                <div
                  className="form-container-width w100 flex flex-wrap justify-center"
>
                  
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "What kind of sprinkles would you like?",
                    " ",
                  ],
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": Array [
                  "What kind of sprinkles would you like?",
                  " ",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                  "className": "center mb3 help-text-container-width",
                },
                "ref": null,
                "rendered": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "form-container-width w100 flex flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="bold big center mb2"
>
                  Would you like any additional toppings?
                   
</p>,
                <div
                  className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                  
</div>,
              ],
              "className": "w100 mb4 flex flex-column items-center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Would you like any additional toppings?",
                    " ",
                  ],
                  "className": "bold big center mb2",
                },
                "ref": null,
                "rendered": Array [
                  "Would you like any additional toppings?",
                  " ",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                },
                "ref": null,
                "rendered": Array [],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="max-width-3 mx-auto flex flex-wrap px3"
>
            <div
                        className="col-12 md-col-7 flex flex-column mb4"
            >
                        <span
                                    className="bold big mb3"
                        >
                                    Summary
                        </span>
                        <span
                                    className="line-height small"
                        >
                                    Please fill out all fields.
                        </span>
            </div>
            <div
                        className="col-12 md-col-5 flex flex-column items-start"
            >
                        <span
                                    className="bold big mb3"
                        >
                                    Deposit total
                                    
                        </span>
                        <span
                                    className="line-height small"
                        >
                                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                        </span>
                        <Button
                                    childrenWrapperClassName=""
                                    className="mt3 inline-block w-auto"
                                    color="madison-blue"
                                    disabled={true}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Add to cart!"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary"
                        />
            </div>
</div>,
          "className": "w100 bg-pastel-peach py4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-12 md-col-7 flex flex-column mb4"
>
                <span
                                className="bold big mb3"
                >
                                Summary
                </span>
                <span
                                className="line-height small"
                >
                                Please fill out all fields.
                </span>
</div>,
              <div
                className="col-12 md-col-5 flex flex-column items-start"
>
                <span
                                className="bold big mb3"
                >
                                Deposit total
                                
                </span>
                <span
                                className="line-height small"
                >
                                Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                </span>
                <Button
                                childrenWrapperClassName=""
                                className="mt3 inline-block w-auto"
                                color="madison-blue"
                                disabled={true}
                                fullWidth={false}
                                hover="shadow"
                                label="Add to cart!"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="primary"
                />
</div>,
            ],
            "className": "max-width-3 mx-auto flex flex-wrap px3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="bold big mb3"
>
                    Summary
</span>,
                  <span
                    className="line-height small"
>
                    Please fill out all fields.
</span>,
                ],
                "className": "col-12 md-col-7 flex flex-column mb4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Summary",
                    "className": "bold big mb3",
                  },
                  "ref": null,
                  "rendered": "Summary",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please fill out all fields.",
                    "className": "line-height small",
                  },
                  "ref": null,
                  "rendered": "Please fill out all fields.",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="bold big mb3"
>
                    Deposit total
                    
</span>,
                  <span
                    className="line-height small"
>
                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
</span>,
                  <Button
                    childrenWrapperClassName=""
                    className="mt3 inline-block w-auto"
                    color="madison-blue"
                    disabled={true}
                    fullWidth={false}
                    hover="shadow"
                    label="Add to cart!"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="primary"
/>,
                ],
                "className": "col-12 md-col-5 flex flex-column items-start",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Deposit total",
                      "",
                    ],
                    "className": "bold big mb3",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Deposit total",
                    "",
                  ],
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                    "className": "line-height small",
                  },
                  "ref": null,
                  "rendered": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": null,
                    "childrenWrapperClassName": "",
                    "className": "mt3 inline-block w-auto",
                    "color": "madison-blue",
                    "disabled": true,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "Add to cart!",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex flex-wrap max-width-4 mx-auto my4 px2"
>
            <div
                        className="w100 mb4"
            >
                        <h1
                                    className="w100 block-headline center mb3"
                        >
                                    Order Your Custom Ice Cream Cake
                        </h1>
                        <h2
                                    className="w100 big bold center text-peach mb3"
                        >
                                    First, let's work out the details
                        </h2>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Where would you like to pick up your ice cream cake?
                        </p>
                        <Dropdown
                                    bgColor=""
                                    className="w100 text-container-width z-sub-nav"
                                    color="peach"
                                    fixedWidth={false}
                                    label=""
                                    name=""
                                    onChange={[Function]}
                                    options={Array []}
                                    placeholder="Choose a Location"
                                    selectClassName=""
                                    shadow={false}
                                    textAlignCenter={false}
                                    textColor=""
                                    value={null}
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    When would you like to pick up your ice cream cake?
                        </p>
                        <p
                                    className="center mb3 help-text-container-width"
                        >
                                    Please note, we need 48 hours minimum to create your custom ice cream cake.
                        </p>
                        <Button
                                    childrenWrapperClassName="w100 justify-between"
                                    className="w100 text-container-width relative z-1"
                                    color="white-denim"
                                    disabled={false}
                                    fullWidth={false}
                                    hover="shadow"
                                    label=""
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="style-none"
                        >
                                    <p
                                                className="bold text-dusty-gray"
                                    >
                                                Choose a day
                                    </p>
                                    <Image
                                                alt=""
                                                bg={false}
                                                className="right"
                                                onImgLoad={[Function]}
                                                src="/assets/images/arrow-dropdown-active.svg"
                                                style={Object {}}
                                    />
                                    <DayPicker
                                                canChangeMonth={true}
                                                captionElement={
                                                            <Caption
                                                                        classNames={
                                                                                    Object {
                                                                                                "body": "DayPicker-Body",
                                                                                                "caption": "DayPicker-Caption",
                                                                                                "container": "DayPicker",
                                                                                                "day": "DayPicker-Day",
                                                                                                "disabled": "disabled",
                                                                                                "footer": "DayPicker-Footer",
                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                "month": "DayPicker-Month",
                                                                                                "months": "DayPicker-Months",
                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                "outside": "outside",
                                                                                                "selected": "selected",
                                                                                                "today": "today",
                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                "week": "DayPicker-Week",
                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                              }
                                                                        }
                                                                        localeUtils={
                                                                                    Object {
                                                                                                "formatDay": [Function],
                                                                                                "formatMonthTitle": [Function],
                                                                                                "formatWeekdayLong": [Function],
                                                                                                "formatWeekdayShort": [Function],
                                                                                                "getFirstDayOfWeek": [Function],
                                                                                                "getMonths": [Function],
                                                                                              }
                                                                        }
                                                            />
                                                }
                                                className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                                classNames={
                                                            Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                                                }
                                                disabledDays={
                                                            Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.792Z,
                                                                        },
                                                                      ]
                                                }
                                                enableOutsideDaysClick={true}
                                                fixedWeeks={false}
                                                initialMonth={2018-12-04T22:03:12.745Z}
                                                labels={
                                                            Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                                                }
                                                locale="en"
                                                localeUtils={
                                                            Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                                                }
                                                navbarElement={
                                                            <Navbar
                                                                        classNames={
                                                                                    Object {
                                                                                                "body": "DayPicker-Body",
                                                                                                "caption": "DayPicker-Caption",
                                                                                                "container": "DayPicker",
                                                                                                "day": "DayPicker-Day",
                                                                                                "disabled": "disabled",
                                                                                                "footer": "DayPicker-Footer",
                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                "month": "DayPicker-Month",
                                                                                                "months": "DayPicker-Months",
                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                "outside": "outside",
                                                                                                "selected": "selected",
                                                                                                "today": "today",
                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                "week": "DayPicker-Week",
                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                              }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                    Object {
                                                                                                "nextMonth": "Next Month",
                                                                                                "previousMonth": "Previous Month",
                                                                                              }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                            />
                                                }
                                                numberOfMonths={1}
                                                onDayClick={[Function]}
                                                onMonthChange={[Function]}
                                                pagedNavigation={false}
                                                renderDay={[Function]}
                                                renderWeek={[Function]}
                                                reverseMonths={false}
                                                showOutsideDays={false}
                                                showWeekDays={true}
                                                showWeekNumbers={false}
                                                tabIndex={0}
                                                weekdayElement={<Weekday />}
                                    />
                        </Button>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What time of day will you be picking up your ice cream cake?
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 md-col-3 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="12pm to 5pm"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                />
                                    </div>
                                    <div
                                                className="col-6 md-col-3 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="5pm to closing"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                />
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Who will be picking up your ice cream cake?
                        </p>
                        <TextField
                                    address=""
                                    className="w100 text-container-width"
                                    max={null}
                                    min={null}
                                    name=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Name"
                                    required={false}
                                    type="text"
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What’s the best phone number to reach you?
                        </p>
                        <TextField
                                    address=""
                                    className="w100 text-container-width"
                                    max={null}
                                    min={null}
                                    name=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    placeholder="Phone number"
                                    required={false}
                                    type="text"
                                    variant="square"
                        />
            </div>
            <div
                        className="w100 mt2 mb4"
            >
                        <h2
                                    className="w100 big bold center text-peach mb3"
                        >
                                    Now, the fun stuff!
                        </h2>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Pick a size
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Pick your ice cream cake flavor combination!
                        </p>
                        <Button
                                    childrenWrapperClassName=""
                                    className="uppercase mb3 tout"
                                    color="peach"
                                    disabled={false}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Need Help?"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary-small"
                        />
                        <p
                                    className="bold big center mb2"
                        >
                                    We recommend these
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    <div
                                                className="col-6 p1"
                                    >
                                                <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                                >
                                                            <div
                                                                        className="inline-flex flex-column w100 my2"
                                                            >
                                                                        <p
                                                                                    className="mb2 white-space-normal center"
                                                                        >
                                                                                    Build your own with your choice of flavors!
                                                                        </p>
                                                            </div>
                                                </Button>
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 flex flex-column items-center undefined"
            >
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Choose your first flavor
                                    </p>
                                    <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width z-sub-nav"
                                                color="peach"
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                    />
                                    <span
                                                className="mt2 text-peach"
                                    >
                                                You must first select a location
                                    </span>
                        </div>
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Choose your second flavor
                                    </p>
                                    <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width"
                                                color="peach"
                                                disabled={true}
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                    />
                                    <span
                                                className="mt2 text-peach"
                                    >
                                                You must first select a location
                                    </span>
                        </div>
                        <div
                                    className="w100 mb4 flex flex-column items-center"
                        >
                                    <p
                                                className="bold big center mb2"
                                    >
                                                Pick a base
                                    </p>
                                    <p
                                                className="center mb3 help-text-container-width"
                                    >
                                                All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                                    </p>
                                    <div
                                                className="form-container-width w100 flex flex-wrap justify-center"
                                    >
                                                
                                    </div>
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    What kind of sprinkles would you like?
                                     
                        </p>
                        <p
                                    className="center mb3 help-text-container-width"
                        >
                                    Each ice cream cake is made with a topping of whipped cream and sprinkles.
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-wrap justify-center"
                        >
                                    
                        </div>
            </div>
            <div
                        className="w100 mb4 flex flex-column items-center"
            >
                        <p
                                    className="bold big center mb2"
                        >
                                    Would you like any additional toppings?
                                     
                        </p>
                        <div
                                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
                        >
                                    
                        </div>
            </div>
</div>,
          <div
            className="w100 bg-pastel-peach py4"
>
            <div
                        className="max-width-3 mx-auto flex flex-wrap px3"
            >
                        <div
                                    className="col-12 md-col-7 flex flex-column mb4"
                        >
                                    <span
                                                className="bold big mb3"
                                    >
                                                Summary
                                    </span>
                                    <span
                                                className="line-height small"
                                    >
                                                Please fill out all fields.
                                    </span>
                        </div>
                        <div
                                    className="col-12 md-col-5 flex flex-column items-start"
                        >
                                    <span
                                                className="bold big mb3"
                                    >
                                                Deposit total
                                                
                                    </span>
                                    <span
                                                className="line-height small"
                                    >
                                                Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                                    </span>
                                    <Button
                                                childrenWrapperClassName=""
                                                className="mt3 inline-block w-auto"
                                                color="madison-blue"
                                                disabled={true}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="Add to cart!"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="primary"
                                    />
                        </div>
            </div>
</div>,
          null,
        ],
        "className": "flex flex-wrap my4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="w100 mb4"
>
                <h1
                                className="w100 block-headline center mb3"
                >
                                Order Your Custom Ice Cream Cake
                </h1>
                <h2
                                className="w100 big bold center text-peach mb3"
                >
                                First, let's work out the details
                </h2>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Where would you like to pick up your ice cream cake?
                </p>
                <Dropdown
                                bgColor=""
                                className="w100 text-container-width z-sub-nav"
                                color="peach"
                                fixedWidth={false}
                                label=""
                                name=""
                                onChange={[Function]}
                                options={Array []}
                                placeholder="Choose a Location"
                                selectClassName=""
                                shadow={false}
                                textAlignCenter={false}
                                textColor=""
                                value={null}
                                variant="square"
                />
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                When would you like to pick up your ice cream cake?
                </p>
                <p
                                className="center mb3 help-text-container-width"
                >
                                Please note, we need 48 hours minimum to create your custom ice cream cake.
                </p>
                <Button
                                childrenWrapperClassName="w100 justify-between"
                                className="w100 text-container-width relative z-1"
                                color="white-denim"
                                disabled={false}
                                fullWidth={false}
                                hover="shadow"
                                label=""
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="style-none"
                >
                                <p
                                                className="bold text-dusty-gray"
                                >
                                                Choose a day
                                </p>
                                <Image
                                                alt=""
                                                bg={false}
                                                className="right"
                                                onImgLoad={[Function]}
                                                src="/assets/images/arrow-dropdown-active.svg"
                                                style={Object {}}
                                />
                                <DayPicker
                                                canChangeMonth={true}
                                                captionElement={
                                                                <Caption
                                                                                classNames={
                                                                                                Object {
                                                                                                                "body": "DayPicker-Body",
                                                                                                                "caption": "DayPicker-Caption",
                                                                                                                "container": "DayPicker",
                                                                                                                "day": "DayPicker-Day",
                                                                                                                "disabled": "disabled",
                                                                                                                "footer": "DayPicker-Footer",
                                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                "month": "DayPicker-Month",
                                                                                                                "months": "DayPicker-Months",
                                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                "outside": "outside",
                                                                                                                "selected": "selected",
                                                                                                                "today": "today",
                                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                                "week": "DayPicker-Week",
                                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                                              }
                                                                                }
                                                                                localeUtils={
                                                                                                Object {
                                                                                                                "formatDay": [Function],
                                                                                                                "formatMonthTitle": [Function],
                                                                                                                "formatWeekdayLong": [Function],
                                                                                                                "formatWeekdayShort": [Function],
                                                                                                                "getFirstDayOfWeek": [Function],
                                                                                                                "getMonths": [Function],
                                                                                                              }
                                                                                }
                                                                />
                                                }
                                                className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                                classNames={
                                                                Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                                }
                                                disabledDays={
                                                                Array [
                                                                                undefined,
                                                                                Object {
                                                                                  "before": 2018-12-07T22:03:12.792Z,
                                                                                },
                                                                              ]
                                                }
                                                enableOutsideDaysClick={true}
                                                fixedWeeks={false}
                                                initialMonth={2018-12-04T22:03:12.745Z}
                                                labels={
                                                                Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                                }
                                                locale="en"
                                                localeUtils={
                                                                Object {
                                                                                "default": Object {
                                                                                  "formatDay": [Function],
                                                                                  "formatMonthTitle": [Function],
                                                                                  "formatWeekdayLong": [Function],
                                                                                  "formatWeekdayShort": [Function],
                                                                                  "getFirstDayOfWeek": [Function],
                                                                                  "getMonths": [Function],
                                                                                },
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                                }
                                                navbarElement={
                                                                <Navbar
                                                                                classNames={
                                                                                                Object {
                                                                                                                "body": "DayPicker-Body",
                                                                                                                "caption": "DayPicker-Caption",
                                                                                                                "container": "DayPicker",
                                                                                                                "day": "DayPicker-Day",
                                                                                                                "disabled": "disabled",
                                                                                                                "footer": "DayPicker-Footer",
                                                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                "month": "DayPicker-Month",
                                                                                                                "months": "DayPicker-Months",
                                                                                                                "navBar": "DayPicker-NavBar",
                                                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                "outside": "outside",
                                                                                                                "selected": "selected",
                                                                                                                "today": "today",
                                                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                                                "week": "DayPicker-Week",
                                                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                                                "weekday": "DayPicker-Weekday",
                                                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                "wrapper": "DayPicker-wrapper",
                                                                                                              }
                                                                                }
                                                                                dir="ltr"
                                                                                labels={
                                                                                                Object {
                                                                                                                "nextMonth": "Next Month",
                                                                                                                "previousMonth": "Previous Month",
                                                                                                              }
                                                                                }
                                                                                showNextButton={true}
                                                                                showPreviousButton={true}
                                                                />
                                                }
                                                numberOfMonths={1}
                                                onDayClick={[Function]}
                                                onMonthChange={[Function]}
                                                pagedNavigation={false}
                                                renderDay={[Function]}
                                                renderWeek={[Function]}
                                                reverseMonths={false}
                                                showOutsideDays={false}
                                                showWeekDays={true}
                                                showWeekNumbers={false}
                                                tabIndex={0}
                                                weekdayElement={<Weekday />}
                                />
                </Button>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What time of day will you be picking up your ice cream cake?
                </p>
                <div
                                className="form-container-width w100 flex flex-wrap justify-center"
                >
                                <div
                                                className="col-6 md-col-3 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100 white-space-normal px2"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label="12pm to 5pm"
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                />
                                </div>
                                <div
                                                className="col-6 md-col-3 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100 white-space-normal px2"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label="5pm to closing"
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                />
                                </div>
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Who will be picking up your ice cream cake?
                </p>
                <TextField
                                address=""
                                className="w100 text-container-width"
                                max={null}
                                min={null}
                                name=""
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Name"
                                required={false}
                                type="text"
                                variant="square"
                />
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What’s the best phone number to reach you?
                </p>
                <TextField
                                address=""
                                className="w100 text-container-width"
                                max={null}
                                min={null}
                                name=""
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Phone number"
                                required={false}
                                type="text"
                                variant="square"
                />
</div>,
              <div
                className="w100 mt2 mb4"
>
                <h2
                                className="w100 big bold center text-peach mb3"
                >
                                Now, the fun stuff!
                </h2>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Pick a size
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Pick your ice cream cake flavor combination!
                </p>
                <Button
                                childrenWrapperClassName=""
                                className="uppercase mb3 tout"
                                color="peach"
                                disabled={false}
                                fullWidth={false}
                                hover="shadow"
                                label="Need Help?"
                                onClick={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                shadow={false}
                                to=""
                                type="button"
                                variant="primary-small"
                />
                <p
                                className="bold big center mb2"
                >
                                We recommend these
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                <div
                                                className="col-6 p1"
                                >
                                                <Button
                                                                childrenWrapperClassName=""
                                                                className="center wh100"
                                                                color="white-denim"
                                                                disabled={false}
                                                                fullWidth={false}
                                                                hover="shadow"
                                                                label=""
                                                                onClick={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                shadow={false}
                                                                to=""
                                                                type="button"
                                                                variant="square"
                                                >
                                                                <div
                                                                                className="inline-flex flex-column w100 my2"
                                                                >
                                                                                <p
                                                                                                className="mb2 white-space-normal center"
                                                                                >
                                                                                                Build your own with your choice of flavors!
                                                                                </p>
                                                                </div>
                                                </Button>
                                </div>
                </div>
</div>,
              <div
                className="w100 flex flex-column items-center undefined"
>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Choose your first flavor
                                </p>
                                <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width z-sub-nav"
                                                color="peach"
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                />
                                <span
                                                className="mt2 text-peach"
                                >
                                                You must first select a location
                                </span>
                </div>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Choose your second flavor
                                </p>
                                <Dropdown
                                                bgColor=""
                                                className="w100 text-container-width"
                                                color="peach"
                                                disabled={true}
                                                fixedWidth={false}
                                                label=""
                                                name=""
                                                onChange={[Function]}
                                                options={Array []}
                                                placeholder="Choose a Flavor"
                                                selectClassName=""
                                                shadow={false}
                                                textAlignCenter={false}
                                                textColor=""
                                                value={null}
                                                variant="square"
                                />
                                <span
                                                className="mt2 text-peach"
                                >
                                                You must first select a location
                                </span>
                </div>
                <div
                                className="w100 mb4 flex flex-column items-center"
                >
                                <p
                                                className="bold big center mb2"
                                >
                                                Pick a base
                                </p>
                                <p
                                                className="center mb3 help-text-container-width"
                                >
                                                All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                                </p>
                                <div
                                                className="form-container-width w100 flex flex-wrap justify-center"
                                >
                                                
                                </div>
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                What kind of sprinkles would you like?
                                 
                </p>
                <p
                                className="center mb3 help-text-container-width"
                >
                                Each ice cream cake is made with a topping of whipped cream and sprinkles.
                </p>
                <div
                                className="form-container-width w100 flex flex-wrap justify-center"
                >
                                
                </div>
</div>,
              <div
                className="w100 mb4 flex flex-column items-center"
>
                <p
                                className="bold big center mb2"
                >
                                Would you like any additional toppings?
                                 
                </p>
                <div
                                className="form-container-width w100 flex flex-row flex-wrap justify-center"
                >
                                
                </div>
</div>,
            ],
            "className": "flex flex-wrap max-width-4 mx-auto my4 px2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="w100 block-headline center mb3"
>
                    Order Your Custom Ice Cream Cake
</h1>,
                  <h2
                    className="w100 big bold center text-peach mb3"
>
                    First, let's work out the details
</h2>,
                ],
                "className": "w100 mb4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Order Your Custom Ice Cream Cake",
                    "className": "w100 block-headline center mb3",
                  },
                  "ref": null,
                  "rendered": "Order Your Custom Ice Cream Cake",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First, let's work out the details",
                    "className": "w100 big bold center text-peach mb3",
                  },
                  "ref": null,
                  "rendered": "First, let's work out the details",
                  "type": "h2",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Where would you like to pick up your ice cream cake?
</p>,
                  <Dropdown
                    bgColor=""
                    className="w100 text-container-width z-sub-nav"
                    color="peach"
                    fixedWidth={false}
                    label=""
                    name=""
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Choose a Location"
                    selectClassName=""
                    shadow={false}
                    textAlignCenter={false}
                    textColor=""
                    value={null}
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Where would you like to pick up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Where would you like to pick up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bgColor": "",
                    "className": "w100 text-container-width z-sub-nav",
                    "color": "peach",
                    "fixedWidth": false,
                    "label": "",
                    "name": "",
                    "onChange": [Function],
                    "options": Array [],
                    "placeholder": "Choose a Location",
                    "selectClassName": "",
                    "shadow": false,
                    "textAlignCenter": false,
                    "textColor": "",
                    "value": null,
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    When would you like to pick up your ice cream cake?
</p>,
                  <p
                    className="center mb3 help-text-container-width"
>
                    Please note, we need 48 hours minimum to create your custom ice cream cake.
</p>,
                  <Button
                    childrenWrapperClassName="w100 justify-between"
                    className="w100 text-container-width relative z-1"
                    color="white-denim"
                    disabled={false}
                    fullWidth={false}
                    hover="shadow"
                    label=""
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="style-none"
>
                    <p
                                        className="bold text-dusty-gray"
                    >
                                        Choose a day
                    </p>
                    <Image
                                        alt=""
                                        bg={false}
                                        className="right"
                                        onImgLoad={[Function]}
                                        src="/assets/images/arrow-dropdown-active.svg"
                                        style={Object {}}
                    />
                    <DayPicker
                                        canChangeMonth={true}
                                        captionElement={
                                                            <Caption
                                                                                classNames={
                                                                                                    Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                                }
                                                                                localeUtils={
                                                                                                    Object {
                                                                                                                        "formatDay": [Function],
                                                                                                                        "formatMonthTitle": [Function],
                                                                                                                        "formatWeekdayLong": [Function],
                                                                                                                        "formatWeekdayShort": [Function],
                                                                                                                        "getFirstDayOfWeek": [Function],
                                                                                                                        "getMonths": [Function],
                                                                                                                      }
                                                                                }
                                                            />
                                        }
                                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                                        classNames={
                                                            Object {
                                                                                "body": "DayPicker-Body",
                                                                                "caption": "DayPicker-Caption",
                                                                                "container": "DayPicker",
                                                                                "day": "DayPicker-Day",
                                                                                "disabled": "disabled",
                                                                                "footer": "DayPicker-Footer",
                                                                                "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                "month": "DayPicker-Month",
                                                                                "months": "DayPicker-Months",
                                                                                "navBar": "DayPicker-NavBar",
                                                                                "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                "outside": "outside",
                                                                                "selected": "selected",
                                                                                "today": "today",
                                                                                "todayButton": "DayPicker-TodayButton",
                                                                                "week": "DayPicker-Week",
                                                                                "weekNumber": "DayPicker-WeekNumber",
                                                                                "weekday": "DayPicker-Weekday",
                                                                                "weekdays": "DayPicker-Weekdays",
                                                                                "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                "wrapper": "DayPicker-wrapper",
                                                                              }
                                        }
                                        disabledDays={
                                                            Array [
                                                                                undefined,
                                                                                Object {
                                                                                  "before": 2018-12-07T22:03:12.792Z,
                                                                                },
                                                                              ]
                                        }
                                        enableOutsideDaysClick={true}
                                        fixedWeeks={false}
                                        initialMonth={2018-12-04T22:03:12.745Z}
                                        labels={
                                                            Object {
                                                                                "nextMonth": "Next Month",
                                                                                "previousMonth": "Previous Month",
                                                                              }
                                        }
                                        locale="en"
                                        localeUtils={
                                                            Object {
                                                                                "default": Object {
                                                                                  "formatDay": [Function],
                                                                                  "formatMonthTitle": [Function],
                                                                                  "formatWeekdayLong": [Function],
                                                                                  "formatWeekdayShort": [Function],
                                                                                  "getFirstDayOfWeek": [Function],
                                                                                  "getMonths": [Function],
                                                                                },
                                                                                "formatDay": [Function],
                                                                                "formatMonthTitle": [Function],
                                                                                "formatWeekdayLong": [Function],
                                                                                "formatWeekdayShort": [Function],
                                                                                "getFirstDayOfWeek": [Function],
                                                                                "getMonths": [Function],
                                                                              }
                                        }
                                        navbarElement={
                                                            <Navbar
                                                                                classNames={
                                                                                                    Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                                }
                                                                                dir="ltr"
                                                                                labels={
                                                                                                    Object {
                                                                                                                        "nextMonth": "Next Month",
                                                                                                                        "previousMonth": "Previous Month",
                                                                                                                      }
                                                                                }
                                                                                showNextButton={true}
                                                                                showPreviousButton={true}
                                                            />
                                        }
                                        numberOfMonths={1}
                                        onDayClick={[Function]}
                                        onMonthChange={[Function]}
                                        pagedNavigation={false}
                                        renderDay={[Function]}
                                        renderWeek={[Function]}
                                        reverseMonths={false}
                                        showOutsideDays={false}
                                        showWeekDays={true}
                                        showWeekNumbers={false}
                                        tabIndex={0}
                                        weekdayElement={<Weekday />}
                    />
</Button>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "When would you like to pick up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "When would you like to pick up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                    "className": "center mb3 help-text-container-width",
                  },
                  "ref": null,
                  "rendered": "Please note, we need 48 hours minimum to create your custom ice cream cake.",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold text-dusty-gray"
>
                        Choose a day
</p>,
                      <Image
                        alt=""
                        bg={false}
                        className="right"
                        onImgLoad={[Function]}
                        src="/assets/images/arrow-dropdown-active.svg"
                        style={Object {}}
/>,
                      <DayPicker
                        canChangeMonth={true}
                        captionElement={
                                                <Caption
                                                                        classNames={
                                                                                                Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                        }
                                                                        localeUtils={
                                                                                                Object {
                                                                                                                        "formatDay": [Function],
                                                                                                                        "formatMonthTitle": [Function],
                                                                                                                        "formatWeekdayLong": [Function],
                                                                                                                        "formatWeekdayShort": [Function],
                                                                                                                        "getFirstDayOfWeek": [Function],
                                                                                                                        "getMonths": [Function],
                                                                                                                      }
                                                                        }
                                                />
                        }
                        className="absolute t0 l0 mt4 bg-white text-madison-blue hide"
                        classNames={
                                                Object {
                                                                        "body": "DayPicker-Body",
                                                                        "caption": "DayPicker-Caption",
                                                                        "container": "DayPicker",
                                                                        "day": "DayPicker-Day",
                                                                        "disabled": "disabled",
                                                                        "footer": "DayPicker-Footer",
                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                        "month": "DayPicker-Month",
                                                                        "months": "DayPicker-Months",
                                                                        "navBar": "DayPicker-NavBar",
                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                        "outside": "outside",
                                                                        "selected": "selected",
                                                                        "today": "today",
                                                                        "todayButton": "DayPicker-TodayButton",
                                                                        "week": "DayPicker-Week",
                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                        "weekday": "DayPicker-Weekday",
                                                                        "weekdays": "DayPicker-Weekdays",
                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                        "wrapper": "DayPicker-wrapper",
                                                                      }
                        }
                        disabledDays={
                                                Array [
                                                                        undefined,
                                                                        Object {
                                                                          "before": 2018-12-07T22:03:12.792Z,
                                                                        },
                                                                      ]
                        }
                        enableOutsideDaysClick={true}
                        fixedWeeks={false}
                        initialMonth={2018-12-04T22:03:12.745Z}
                        labels={
                                                Object {
                                                                        "nextMonth": "Next Month",
                                                                        "previousMonth": "Previous Month",
                                                                      }
                        }
                        locale="en"
                        localeUtils={
                                                Object {
                                                                        "default": Object {
                                                                          "formatDay": [Function],
                                                                          "formatMonthTitle": [Function],
                                                                          "formatWeekdayLong": [Function],
                                                                          "formatWeekdayShort": [Function],
                                                                          "getFirstDayOfWeek": [Function],
                                                                          "getMonths": [Function],
                                                                        },
                                                                        "formatDay": [Function],
                                                                        "formatMonthTitle": [Function],
                                                                        "formatWeekdayLong": [Function],
                                                                        "formatWeekdayShort": [Function],
                                                                        "getFirstDayOfWeek": [Function],
                                                                        "getMonths": [Function],
                                                                      }
                        }
                        navbarElement={
                                                <Navbar
                                                                        classNames={
                                                                                                Object {
                                                                                                                        "body": "DayPicker-Body",
                                                                                                                        "caption": "DayPicker-Caption",
                                                                                                                        "container": "DayPicker",
                                                                                                                        "day": "DayPicker-Day",
                                                                                                                        "disabled": "disabled",
                                                                                                                        "footer": "DayPicker-Footer",
                                                                                                                        "interactionDisabled": "DayPicker--interactionDisabled",
                                                                                                                        "month": "DayPicker-Month",
                                                                                                                        "months": "DayPicker-Months",
                                                                                                                        "navBar": "DayPicker-NavBar",
                                                                                                                        "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                                                                        "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                                                                        "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                                                                        "outside": "outside",
                                                                                                                        "selected": "selected",
                                                                                                                        "today": "today",
                                                                                                                        "todayButton": "DayPicker-TodayButton",
                                                                                                                        "week": "DayPicker-Week",
                                                                                                                        "weekNumber": "DayPicker-WeekNumber",
                                                                                                                        "weekday": "DayPicker-Weekday",
                                                                                                                        "weekdays": "DayPicker-Weekdays",
                                                                                                                        "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                                                                        "wrapper": "DayPicker-wrapper",
                                                                                                                      }
                                                                        }
                                                                        dir="ltr"
                                                                        labels={
                                                                                                Object {
                                                                                                                        "nextMonth": "Next Month",
                                                                                                                        "previousMonth": "Previous Month",
                                                                                                                      }
                                                                        }
                                                                        showNextButton={true}
                                                                        showPreviousButton={true}
                                                />
                        }
                        numberOfMonths={1}
                        onDayClick={[Function]}
                        onMonthChange={[Function]}
                        pagedNavigation={false}
                        renderDay={[Function]}
                        renderWeek={[Function]}
                        reverseMonths={false}
                        showOutsideDays={false}
                        showWeekDays={true}
                        showWeekNumbers={false}
                        tabIndex={0}
                        weekdayElement={<Weekday />}
/>,
                    ],
                    "childrenWrapperClassName": "w100 justify-between",
                    "className": "w100 text-container-width relative z-1",
                    "color": "white-denim",
                    "disabled": false,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "style-none",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose a day",
                        "className": "bold text-dusty-gray",
                      },
                      "ref": null,
                      "rendered": "Choose a day",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "",
                        "bg": false,
                        "children": null,
                        "className": "right",
                        "onImgLoad": [Function],
                        "src": "/assets/images/arrow-dropdown-active.svg",
                        "style": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "canChangeMonth": true,
                        "captionElement": <Caption
                          classNames={
                                                    Object {
                                                                              "body": "DayPicker-Body",
                                                                              "caption": "DayPicker-Caption",
                                                                              "container": "DayPicker",
                                                                              "day": "DayPicker-Day",
                                                                              "disabled": "disabled",
                                                                              "footer": "DayPicker-Footer",
                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                              "month": "DayPicker-Month",
                                                                              "months": "DayPicker-Months",
                                                                              "navBar": "DayPicker-NavBar",
                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                              "outside": "outside",
                                                                              "selected": "selected",
                                                                              "today": "today",
                                                                              "todayButton": "DayPicker-TodayButton",
                                                                              "week": "DayPicker-Week",
                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                              "weekday": "DayPicker-Weekday",
                                                                              "weekdays": "DayPicker-Weekdays",
                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                              "wrapper": "DayPicker-wrapper",
                                                                            }
                          }
                          localeUtils={
                                                    Object {
                                                                              "formatDay": [Function],
                                                                              "formatMonthTitle": [Function],
                                                                              "formatWeekdayLong": [Function],
                                                                              "formatWeekdayShort": [Function],
                                                                              "getFirstDayOfWeek": [Function],
                                                                              "getMonths": [Function],
                                                                            }
                          }
/>,
                        "className": "absolute t0 l0 mt4 bg-white text-madison-blue hide",
                        "classNames": Object {
                          "body": "DayPicker-Body",
                          "caption": "DayPicker-Caption",
                          "container": "DayPicker",
                          "day": "DayPicker-Day",
                          "disabled": "disabled",
                          "footer": "DayPicker-Footer",
                          "interactionDisabled": "DayPicker--interactionDisabled",
                          "month": "DayPicker-Month",
                          "months": "DayPicker-Months",
                          "navBar": "DayPicker-NavBar",
                          "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                          "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                          "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                          "outside": "outside",
                          "selected": "selected",
                          "today": "today",
                          "todayButton": "DayPicker-TodayButton",
                          "week": "DayPicker-Week",
                          "weekNumber": "DayPicker-WeekNumber",
                          "weekday": "DayPicker-Weekday",
                          "weekdays": "DayPicker-Weekdays",
                          "weekdaysRow": "DayPicker-WeekdaysRow",
                          "wrapper": "DayPicker-wrapper",
                        },
                        "disabledDays": Array [
                          undefined,
                          Object {
                            "before": 2018-12-07T22:03:12.792Z,
                          },
                        ],
                        "enableOutsideDaysClick": true,
                        "fixedWeeks": false,
                        "initialMonth": 2018-12-04T22:03:12.745Z,
                        "labels": Object {
                          "nextMonth": "Next Month",
                          "previousMonth": "Previous Month",
                        },
                        "locale": "en",
                        "localeUtils": Object {
                          "default": Object {
                            "formatDay": [Function],
                            "formatMonthTitle": [Function],
                            "formatWeekdayLong": [Function],
                            "formatWeekdayShort": [Function],
                            "getFirstDayOfWeek": [Function],
                            "getMonths": [Function],
                          },
                          "formatDay": [Function],
                          "formatMonthTitle": [Function],
                          "formatWeekdayLong": [Function],
                          "formatWeekdayShort": [Function],
                          "getFirstDayOfWeek": [Function],
                          "getMonths": [Function],
                        },
                        "navbarElement": <Navbar
                          classNames={
                                                    Object {
                                                                              "body": "DayPicker-Body",
                                                                              "caption": "DayPicker-Caption",
                                                                              "container": "DayPicker",
                                                                              "day": "DayPicker-Day",
                                                                              "disabled": "disabled",
                                                                              "footer": "DayPicker-Footer",
                                                                              "interactionDisabled": "DayPicker--interactionDisabled",
                                                                              "month": "DayPicker-Month",
                                                                              "months": "DayPicker-Months",
                                                                              "navBar": "DayPicker-NavBar",
                                                                              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
                                                                              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
                                                                              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
                                                                              "outside": "outside",
                                                                              "selected": "selected",
                                                                              "today": "today",
                                                                              "todayButton": "DayPicker-TodayButton",
                                                                              "week": "DayPicker-Week",
                                                                              "weekNumber": "DayPicker-WeekNumber",
                                                                              "weekday": "DayPicker-Weekday",
                                                                              "weekdays": "DayPicker-Weekdays",
                                                                              "weekdaysRow": "DayPicker-WeekdaysRow",
                                                                              "wrapper": "DayPicker-wrapper",
                                                                            }
                          }
                          dir="ltr"
                          labels={
                                                    Object {
                                                                              "nextMonth": "Next Month",
                                                                              "previousMonth": "Previous Month",
                                                                            }
                          }
                          showNextButton={true}
                          showPreviousButton={true}
/>,
                        "numberOfMonths": 1,
                        "onDayClick": [Function],
                        "onMonthChange": [Function],
                        "pagedNavigation": false,
                        "renderDay": [Function],
                        "renderWeek": [Function],
                        "reverseMonths": false,
                        "showOutsideDays": false,
                        "showWeekDays": true,
                        "showWeekNumbers": false,
                        "tabIndex": 0,
                        "weekdayElement": <Weekday />,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What time of day will you be picking up your ice cream cake?
</p>,
                  <div
                    className="form-container-width w100 flex flex-wrap justify-center"
>
                    <div
                                        className="col-6 md-col-3 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="12pm to 5pm"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        />
                    </div>
                    <div
                                        className="col-6 md-col-3 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100 white-space-normal px2"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label="5pm to closing"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        />
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "What time of day will you be picking up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "What time of day will you be picking up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-6 md-col-3 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100 white-space-normal px2"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="12pm to 5pm"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        />
</div>,
                      <div
                        className="col-6 md-col-3 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100 white-space-normal px2"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label="5pm to closing"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        />
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "defaultTimeSlot1",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100 white-space-normal px2"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label="12pm to 5pm"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
/>,
                        "className": "col-6 md-col-3 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": null,
                          "childrenWrapperClassName": "",
                          "className": "center wh100 white-space-normal px2",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "12pm to 5pm",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "defaultTimeSlot2",
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100 white-space-normal px2"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label="5pm to closing"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
/>,
                        "className": "col-6 md-col-3 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": null,
                          "childrenWrapperClassName": "",
                          "className": "center wh100 white-space-normal px2",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "5pm to closing",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Who will be picking up your ice cream cake?
</p>,
                  <TextField
                    address=""
                    className="w100 text-container-width"
                    max={null}
                    min={null}
                    name=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Name"
                    required={false}
                    type="text"
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Who will be picking up your ice cream cake?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Who will be picking up your ice cream cake?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "address": "",
                    "className": "w100 text-container-width",
                    "max": null,
                    "min": null,
                    "name": "",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "placeholder": "Name",
                    "required": false,
                    "type": "text",
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What’s the best phone number to reach you?
</p>,
                  <TextField
                    address=""
                    className="w100 text-container-width"
                    max={null}
                    min={null}
                    name=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Phone number"
                    required={false}
                    type="text"
                    variant="square"
/>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "What’s the best phone number to reach you?",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "What’s the best phone number to reach you?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "address": "",
                    "className": "w100 text-container-width",
                    "max": null,
                    "min": null,
                    "name": "",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "placeholder": "Phone number",
                    "required": false,
                    "type": "text",
                    "variant": "square",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h2
                  className="w100 big bold center text-peach mb3"
>
                  Now, the fun stuff!
</h2>,
                "className": "w100 mt2 mb4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Now, the fun stuff!",
                  "className": "w100 big bold center text-peach mb3",
                },
                "ref": null,
                "rendered": "Now, the fun stuff!",
                "type": "h2",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Pick a size
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pick a size",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Pick a size",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Pick your ice cream cake flavor combination!
</p>,
                  <Button
                    childrenWrapperClassName=""
                    className="uppercase mb3 tout"
                    color="peach"
                    disabled={false}
                    fullWidth={false}
                    hover="shadow"
                    label="Need Help?"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    shadow={false}
                    to=""
                    type="button"
                    variant="primary-small"
/>,
                  <p
                    className="bold big center mb2"
>
                    We recommend these
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    <div
                                        className="col-6 p1"
                    >
                                        <Button
                                                            childrenWrapperClassName=""
                                                            className="center wh100"
                                                            color="white-denim"
                                                            disabled={false}
                                                            fullWidth={false}
                                                            hover="shadow"
                                                            label=""
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            shadow={false}
                                                            to=""
                                                            type="button"
                                                            variant="square"
                                        >
                                                            <div
                                                                                className="inline-flex flex-column w100 my2"
                                                            >
                                                                                <p
                                                                                                    className="mb2 white-space-normal center"
                                                                                >
                                                                                                    Build your own with your choice of flavors!
                                                                                </p>
                                                            </div>
                                        </Button>
                    </div>
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pick your ice cream cake flavor combination!",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "Pick your ice cream cake flavor combination!",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": null,
                    "childrenWrapperClassName": "",
                    "className": "uppercase mb3 tout",
                    "color": "peach",
                    "disabled": false,
                    "fullWidth": false,
                    "hover": "shadow",
                    "label": "Need Help?",
                    "onClick": [Function],
                    "onMouseEnter": [Function],
                    "onMouseLeave": [Function],
                    "shadow": false,
                    "to": "",
                    "type": "button",
                    "variant": "primary-small",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "We recommend these",
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": "We recommend these",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      Array [],
                      <div
                        className="col-6 p1"
>
                        <Button
                                                childrenWrapperClassName=""
                                                className="center wh100"
                                                color="white-denim"
                                                disabled={false}
                                                fullWidth={false}
                                                hover="shadow"
                                                label=""
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                shadow={false}
                                                to=""
                                                type="button"
                                                variant="square"
                        >
                                                <div
                                                                        className="inline-flex flex-column w100 my2"
                                                >
                                                                        <p
                                                                                                className="mb2 white-space-normal center"
                                                                        >
                                                                                                Build your own with your choice of flavors!
                                                                        </p>
                                                </div>
                        </Button>
</div>,
                    ],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Button
                          childrenWrapperClassName=""
                          className="center wh100"
                          color="white-denim"
                          disabled={false}
                          fullWidth={false}
                          hover="shadow"
                          label=""
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          shadow={false}
                          to=""
                          type="button"
                          variant="square"
>
                          <div
                                                    className="inline-flex flex-column w100 my2"
                          >
                                                    <p
                                                                              className="mb2 white-space-normal center"
                                                    >
                                                                              Build your own with your choice of flavors!
                                                    </p>
                          </div>
</Button>,
                        "className": "col-6 p1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <div
                            className="inline-flex flex-column w100 my2"
>
                            <p
                                                        className="mb2 white-space-normal center"
                            >
                                                        Build your own with your choice of flavors!
                            </p>
</div>,
                          "childrenWrapperClassName": "",
                          "className": "center wh100",
                          "color": "white-denim",
                          "disabled": false,
                          "fullWidth": false,
                          "hover": "shadow",
                          "label": "",
                          "onClick": [Function],
                          "onMouseEnter": [Function],
                          "onMouseLeave": [Function],
                          "shadow": false,
                          "to": "",
                          "type": "button",
                          "variant": "square",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <p
                              className="mb2 white-space-normal center"
>
                              Build your own with your choice of flavors!
</p>,
                            "className": "inline-flex flex-column w100 my2",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Build your own with your choice of flavors!",
                              "className": "mb2 white-space-normal center",
                            },
                            "ref": null,
                            "rendered": "Build your own with your choice of flavors!",
                            "type": "p",
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Choose your first flavor
                    </p>
                    <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width z-sub-nav"
                                        color="peach"
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                    />
                    <span
                                        className="mt2 text-peach"
                    >
                                        You must first select a location
                    </span>
</div>,
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Choose your second flavor
                    </p>
                    <Dropdown
                                        bgColor=""
                                        className="w100 text-container-width"
                                        color="peach"
                                        disabled={true}
                                        fixedWidth={false}
                                        label=""
                                        name=""
                                        onChange={[Function]}
                                        options={Array []}
                                        placeholder="Choose a Flavor"
                                        selectClassName=""
                                        shadow={false}
                                        textAlignCenter={false}
                                        textColor=""
                                        value={null}
                                        variant="square"
                    />
                    <span
                                        className="mt2 text-peach"
                    >
                                        You must first select a location
                    </span>
</div>,
                  <div
                    className="w100 mb4 flex flex-column items-center"
>
                    <p
                                        className="bold big center mb2"
                    >
                                        Pick a base
                    </p>
                    <p
                                        className="center mb3 help-text-container-width"
                    >
                                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
                    </p>
                    <div
                                        className="form-container-width w100 flex flex-wrap justify-center"
                    >
                                        
                    </div>
</div>,
                ],
                "className": "w100 flex flex-column items-center undefined",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Choose your first flavor
</p>,
                      <Dropdown
                        bgColor=""
                        className="w100 text-container-width z-sub-nav"
                        color="peach"
                        fixedWidth={false}
                        label=""
                        name=""
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Choose a Flavor"
                        selectClassName=""
                        shadow={false}
                        textAlignCenter={false}
                        textColor=""
                        value={null}
                        variant="square"
/>,
                      <span
                        className="mt2 text-peach"
>
                        You must first select a location
</span>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose your first flavor",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Choose your first flavor",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bgColor": "",
                        "className": "w100 text-container-width z-sub-nav",
                        "color": "peach",
                        "fixedWidth": false,
                        "label": "",
                        "name": "",
                        "onChange": [Function],
                        "options": Array [],
                        "placeholder": "Choose a Flavor",
                        "selectClassName": "",
                        "shadow": false,
                        "textAlignCenter": false,
                        "textColor": "",
                        "value": null,
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "You must first select a location",
                        "className": "mt2 text-peach",
                      },
                      "ref": null,
                      "rendered": "You must first select a location",
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Choose your second flavor
</p>,
                      <Dropdown
                        bgColor=""
                        className="w100 text-container-width"
                        color="peach"
                        disabled={true}
                        fixedWidth={false}
                        label=""
                        name=""
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Choose a Flavor"
                        selectClassName=""
                        shadow={false}
                        textAlignCenter={false}
                        textColor=""
                        value={null}
                        variant="square"
/>,
                      <span
                        className="mt2 text-peach"
>
                        You must first select a location
</span>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Choose your second flavor",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Choose your second flavor",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bgColor": "",
                        "className": "w100 text-container-width",
                        "color": "peach",
                        "disabled": true,
                        "fixedWidth": false,
                        "label": "",
                        "name": "",
                        "onChange": [Function],
                        "options": Array [],
                        "placeholder": "Choose a Flavor",
                        "selectClassName": "",
                        "shadow": false,
                        "textAlignCenter": false,
                        "textColor": "",
                        "value": null,
                        "variant": "square",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "You must first select a location",
                        "className": "mt2 text-peach",
                      },
                      "ref": null,
                      "rendered": "You must first select a location",
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="bold big center mb2"
>
                        Pick a base
</p>,
                      <p
                        className="center mb3 help-text-container-width"
>
                        All ice cream cakes come with a layer of fudge in between the layers of ice cream.
</p>,
                      <div
                        className="form-container-width w100 flex flex-wrap justify-center"
>
                        
</div>,
                    ],
                    "className": "w100 mb4 flex flex-column items-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Pick a base",
                        "className": "bold big center mb2",
                      },
                      "ref": null,
                      "rendered": "Pick a base",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                        "className": "center mb3 help-text-container-width",
                      },
                      "ref": null,
                      "rendered": "All ice cream cakes come with a layer of fudge in between the layers of ice cream.",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [],
                        "className": "form-container-width w100 flex flex-wrap justify-center",
                      },
                      "ref": null,
                      "rendered": Array [],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    What kind of sprinkles would you like?
                     
</p>,
                  <p
                    className="center mb3 help-text-container-width"
>
                    Each ice cream cake is made with a topping of whipped cream and sprinkles.
</p>,
                  <div
                    className="form-container-width w100 flex flex-wrap justify-center"
>
                    
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "What kind of sprinkles would you like?",
                      " ",
                    ],
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": Array [
                    "What kind of sprinkles would you like?",
                    " ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                    "className": "center mb3 help-text-container-width",
                  },
                  "ref": null,
                  "rendered": "Each ice cream cake is made with a topping of whipped cream and sprinkles.",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                    "className": "form-container-width w100 flex flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="bold big center mb2"
>
                    Would you like any additional toppings?
                     
</p>,
                  <div
                    className="form-container-width w100 flex flex-row flex-wrap justify-center"
>
                    
</div>,
                ],
                "className": "w100 mb4 flex flex-column items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Would you like any additional toppings?",
                      " ",
                    ],
                    "className": "bold big center mb2",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Would you like any additional toppings?",
                    " ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                    "className": "form-container-width w100 flex flex-row flex-wrap justify-center",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="max-width-3 mx-auto flex flex-wrap px3"
>
              <div
                            className="col-12 md-col-7 flex flex-column mb4"
              >
                            <span
                                          className="bold big mb3"
                            >
                                          Summary
                            </span>
                            <span
                                          className="line-height small"
                            >
                                          Please fill out all fields.
                            </span>
              </div>
              <div
                            className="col-12 md-col-5 flex flex-column items-start"
              >
                            <span
                                          className="bold big mb3"
                            >
                                          Deposit total
                                          
                            </span>
                            <span
                                          className="line-height small"
                            >
                                          Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                            </span>
                            <Button
                                          childrenWrapperClassName=""
                                          className="mt3 inline-block w-auto"
                                          color="madison-blue"
                                          disabled={true}
                                          fullWidth={false}
                                          hover="shadow"
                                          label="Add to cart!"
                                          onClick={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          shadow={false}
                                          to=""
                                          type="button"
                                          variant="primary"
                            />
              </div>
</div>,
            "className": "w100 bg-pastel-peach py4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-12 md-col-7 flex flex-column mb4"
>
                  <span
                                    className="bold big mb3"
                  >
                                    Summary
                  </span>
                  <span
                                    className="line-height small"
                  >
                                    Please fill out all fields.
                  </span>
</div>,
                <div
                  className="col-12 md-col-5 flex flex-column items-start"
>
                  <span
                                    className="bold big mb3"
                  >
                                    Deposit total
                                    
                  </span>
                  <span
                                    className="line-height small"
                  >
                                    Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
                  </span>
                  <Button
                                    childrenWrapperClassName=""
                                    className="mt3 inline-block w-auto"
                                    color="madison-blue"
                                    disabled={true}
                                    fullWidth={false}
                                    hover="shadow"
                                    label="Add to cart!"
                                    onClick={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    shadow={false}
                                    to=""
                                    type="button"
                                    variant="primary"
                  />
</div>,
              ],
              "className": "max-width-3 mx-auto flex flex-wrap px3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="bold big mb3"
>
                      Summary
</span>,
                    <span
                      className="line-height small"
>
                      Please fill out all fields.
</span>,
                  ],
                  "className": "col-12 md-col-7 flex flex-column mb4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Summary",
                      "className": "bold big mb3",
                    },
                    "ref": null,
                    "rendered": "Summary",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Please fill out all fields.",
                      "className": "line-height small",
                    },
                    "ref": null,
                    "rendered": "Please fill out all fields.",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="bold big mb3"
>
                      Deposit total
                      
</span>,
                    <span
                      className="line-height small"
>
                      Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.
</span>,
                    <Button
                      childrenWrapperClassName=""
                      className="mt3 inline-block w-auto"
                      color="madison-blue"
                      disabled={true}
                      fullWidth={false}
                      hover="shadow"
                      label="Add to cart!"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      shadow={false}
                      to=""
                      type="button"
                      variant="primary"
/>,
                  ],
                  "className": "col-12 md-col-5 flex flex-column items-start",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Deposit total",
                        "",
                      ],
                      "className": "bold big mb3",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Deposit total",
                      "",
                    ],
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                      "className": "line-height small",
                    },
                    "ref": null,
                    "rendered": "Thank you so much for your order! Our Amployees can’t wait to make your cake. If we have any questions, we’ll reach out to you. We’ll see you at the shop.",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": null,
                      "childrenWrapperClassName": "",
                      "className": "mt3 inline-block w-auto",
                      "color": "madison-blue",
                      "disabled": true,
                      "fullWidth": false,
                      "hover": "shadow",
                      "label": "Add to cart!",
                      "onClick": [Function],
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "shadow": false,
                      "to": "",
                      "type": "button",
                      "variant": "primary",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
