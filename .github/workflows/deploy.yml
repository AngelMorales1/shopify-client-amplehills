name: Deployer

on: push

jobs:
  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Use Node.js 12.x
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Restore Node Modules from Cache
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # Install & Build
      - name: Yarn Install
        run: cd api/functions && yarn install
      - name: Typescript Compiler
        run: npm i -g typescript
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./api

  deploy-staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v2

      # Use Node.js 12.x
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Restore Node Modules from Cache
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # Install & Build
      - name: Yarn Install
        run: yarn install
      - name: Yarn Build
        run: NODE_ENV=production CI="" yarn build

      # Deploy to S3 & Invalidate Cloudfront
      - name: Deploy to S3
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.AWS_STAGING_BUCKET }}
          bucket-region: us-east-1
          delete-removed: true
          dist-id: ${{ secrets.AWS_CLOUDFRONT_STAGING_ID }}

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v2

      # Use Node.js 12.x
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Restore Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # Install & Build
      - name: Yarn Install
        run: yarn install
      - name: Yarn Build
        run: NODE_ENV=production CI="" yarn build

      # Deploy to S3 & Invalidate Cloudfront
      - name: Deploy to S3
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.AWS_PRODUCTION_BUCKET }}
          bucket-region: us-east-1
          delete-removed: true
          dist-id: ${{ secrets.AWS_CLOUDFRONT_PRODUCTION_ID }}
